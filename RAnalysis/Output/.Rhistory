meanExp_stats <- rbind(meanExp_stats,df) #bind to a cumulative list dataframe
print(meanExp_stats) # print to monitor progress
}
meanExp_total
MM_0.5_meanExp
as.data.frame(colMeans(merge(ModMem_0.05, rlog_WGCNA_D1, by = 'TranscriptID')[,-c(1:3)]))
ModMem_0.05
MM_0.5_meanExp <- as.data.frame(colMeans(merge(ModMem_0.05, rlog_WGCNA_D22, by = 'TranscriptID')[,-c(1:3)])) %>%  # mean expression by sampleID for this reduced gene pool (Module membership p < 0.05)
dplyr::mutate(modcolor = loopModCol) %>%
tibble::rownames_to_column("SampleID") %>%
dplyr::rename(meanExp = 2)
MM_0.5_meanExp
rlog_WGCNA_D22
ModMem_0.05
as.data.frame(colMeans(merge(ModMem_0.05, rlog_WGCNA_D22, by = 'TranscriptID')
merge(ModMem_0.05, rlog_WGCNA_D22, by = 'TranscriptID')
MM_0.5_meanExp <- as.data.frame(colMeans(merge(ModMem_0.05, rlog_WGCNA_D22, by = 'TranscriptID')[,-c(1:4)])) %>%  # mean expression by sampleID for this reduced gene pool (Module membership p < 0.05)
dplyr::mutate(modcolor = loopModCol) %>%
tibble::rownames_to_column("SampleID") %>%
dplyr::rename(meanExp = 2)
MM_0.5_meanExp
MM_0.5_meanExp
as.data.frame(colMeans(merge(ModMem_0.05, rlog_WGCNA_D1, by = 'TranscriptID')[,-c(1:4)])) %>%  # mean expression by sampleID for this reduced gene pool (Module membership p < 0.05)
dplyr::mutate(modcolor = loopModCol) %>%
tibble::rownames_to_column("SampleID") %>%
dplyr::rename(meanExp = 2)
loopModCol     <- D1_modCols[i,]
loopModCol_cor <- paste("MM.", loopModCol, sep = '')
loopModCol_p   <- paste("p.MM.", loopModCol, sep = '')
# all modules per mod color (with significant eigengene-treatment interaction) - no Module Membership threshold
ModMem         <- ModMem_D1 %>%
dplyr::select(c('TranscriptID',moduleColor, loopModCol_p, loopModCol_cor)) %>%
dplyr::filter(moduleColor %in% loopModCol)
# all modules per mod color (with significant eigengene-treatment interaction) - Module Membership p < 0.05 based on DEG overalap (view R script)
ModMem_0.05    <- ModMem %>%
dplyr::filter(.[[3]] < 0.05 & .[[4]] > 0.6)
MM_0.5_meanExp <- as.data.frame(colMeans(merge(ModMem_0.05, rlog_WGCNA_D1, by = 'TranscriptID')[,-c(1:4)])) %>%  # mean expression by sampleID for this reduced gene pool (Module membership p < 0.05)
dplyr::mutate(modcolor = loopModCol) %>%
tibble::rownames_to_column("SampleID") %>%
dplyr::rename(meanExp = 2)
MM_0.5_meanExp
# data frames and loop sets for the for statement below;
D1_modCols        <- as.data.frame(unique(ModMem_D1$moduleColor)) %>% dplyr::filter(.[[1]] %in% c('black', 'blue', 'brown', 'pink', 'red', 'turquoise')) # yellow and green were NOT significant
meanExp_total     <- data.frame()
meanExp_statsloop <- data.frame(matrix(nrow = 1, ncol = 5)) # create dataframe to save cumunalitively during for loop
colnames(meanExp_statsloop) <- c('Day', 'modColor', 'Gene.count', 'Gene.count.MM<0.5', 'Percent_MM<0.05') # names for comuns in the for loop
meanExp_stats     <- data.frame()
for (i in 1:nrow(D1_modCols)) {
loopModCol     <- D1_modCols[i,]
loopModCol_cor <- paste("MM.", loopModCol, sep = '')
loopModCol_p   <- paste("p.MM.", loopModCol, sep = '')
# all modules per mod color (with significant eigengene-treatment interaction) - no Module Membership threshold
ModMem         <- ModMem_D1 %>%
dplyr::select(c('TranscriptID',moduleColor, loopModCol_p, loopModCol_cor)) %>%
dplyr::filter(moduleColor %in% loopModCol)
# all modules per mod color (with significant eigengene-treatment interaction) - Module Membership p < 0.05 based on DEG overalap (view R script)
ModMem_0.05    <- ModMem %>%
dplyr::filter(.[[3]] < 0.05 & .[[4]] > 0.6)
MM_0.5_meanExp <- as.data.frame(colMeans(merge(ModMem_0.05, rlog_WGCNA_D1, by = 'TranscriptID')[,-c(1:4)])) %>%  # mean expression by sampleID for this reduced gene pool (Module membership p < 0.05)
dplyr::mutate(modcolor = loopModCol) %>%
tibble::rownames_to_column("SampleID") %>%
dplyr::rename(meanExp = 2)
# print this loop Rbdin for each module
meanExp_total <- rbind(meanExp_total,MM_0.5_meanExp) #bind to a cumulative list dataframe
print(meanExp_total) # print to monitor progress
# print stats for each module - these will assist stats for the 0.05 threshold
meanExp_statsloop$Day                 <- 1
meanExp_statsloop$modColor            <- loopModCol
meanExp_statsloop$Gene.count          <- nrow(ModMem)
meanExp_statsloop$`Gene.count.MM<0.5` <- nrow(ModMem_0.05)
meanExp_statsloop$`Percent_MM<0.05`   <- (nrow(ModMem_0.05) / nrow(ModMem)) * 100
df            <- data.frame(meanExp_statsloop) # name dataframe for this single row
meanExp_stats <- rbind(meanExp_stats,df) #bind to a cumulative list dataframe
print(meanExp_stats) # print to monitor progress
}
meanExp_total_wide <- reshape2::dcast(meanExp_total, SampleID ~ modcolor, value.var="meanExp") # convert to wide format to merge for OCA analysis with physiological variables
meanExp_Master     <- merge(d2.Seq_SampleKey, meanExp_total_wide) %>%
select(-c(Temperature, OA, Salinity, Age.days)) %>%
dplyr::rename(Sample.ID = Chamber_tank)
meanExp_stats # percent contribution of Module member threshold cutoff to the total module membership
colMeans(meanExp_stats[c(4:5)])
# data frames and loop sets for the for statement below;
D22_modCols            <- as.data.frame(unique(ModMem_D22$moduleColor)) %>% dplyr::filter(.[[1]] %in% c('blue', 'red', 'salmon', 'tan', 'green', 'turquoise')) # yellow and green were NOT significant
D22_meanExp_total      <- data.frame()
D22_meanExp_statsloop  <- data.frame(matrix(nrow = 1, ncol = 5)) # create dataframe to save cumunalitively during for loop
colnames(D22_meanExp_statsloop) <- c('Day', 'modColor', 'Gene.count', 'Gene.count.MM<0.5', 'Percent_MM<0.05') # names for comuns in the for loop
D22_meanExp_stats      <- data.frame()
for (i in 1:nrow(D22_modCols)) {
loopModCol     <- D22_modCols[i,]
loopModCol_cor <- paste("MM.", loopModCol, sep = '')
loopModCol_p   <- paste("p.MM.", loopModCol, sep = '')
# all modules per mod color (with significant eigengene-treatment interaction) - no Module Membership threshold
ModMem         <- ModMem_D22 %>%
dplyr::select(c('TranscriptID',moduleColor, loopModCol_p, loopModCol_cor)) %>%
dplyr::filter(moduleColor %in% loopModCol)
# all modules per mod color (with significant eigengene-treatment interaction) - Module Membership p < 0.05 based on DEG overalap (view R script)
ModMem_0.05    <- ModMem %>%
dplyr::filter(.[[3]] < 0.05 & .[[4]] > 0.6)
MM_0.5_meanExp <- as.data.frame(colMeans(merge(ModMem_0.05, rlog_WGCNA_D22, by = 'TranscriptID')[,-c(1:4)])) %>%  # mean expression by sampleID for this reduced gene pool (Module membership p < 0.05)
dplyr::mutate(modcolor = loopModCol) %>%
tibble::rownames_to_column("SampleID") %>%
dplyr::rename(meanExp = 2)
# print this loop Rbdin for each module
D22_meanExp_total <- rbind(D22_meanExp_total,MM_0.5_meanExp) #bind to a cumulative list dataframe
print(D22_meanExp_total) # print to monitor progress
# print stats for each module - these will assist stats for the 0.05 threshold
D22_meanExp_statsloop$Day                 <- 1
D22_meanExp_statsloop$modColor            <- loopModCol
D22_meanExp_statsloop$Gene.count          <- nrow(ModMem)
D22_meanExp_statsloop$`Gene.count.MM<0.5` <- nrow(ModMem_0.05)
D22_meanExp_statsloop$`Percent_MM<0.05`   <- (nrow(ModMem_0.05) / nrow(ModMem)) * 100
df            <- data.frame(D22_meanExp_statsloop) # name dataframe for this single row
D22_meanExp_stats <- rbind(D22_meanExp_stats,df) #bind to a cumulative list dataframe
print(D22_meanExp_stats) # print to monitor progress
}
D22_meanExp_total_wide <- reshape2::dcast(D22_meanExp_total, SampleID ~ modcolor, value.var="meanExp") # convert to wide format to merge for OCA analysis with physiological variables
D22_meanExp_Master     <- merge(d22.Seq_SampleKey, D22_meanExp_total_wide) %>%
select(-c(Temperature, OA, Salinity, Age.days)) %>%
dplyr::rename(Sample.ID = Chamber_tank)
D22_meanExp_Master
D22_meanExp_Master     <- merge(d22.Seq_SampleKey, D22_meanExp_total_wide) %>%
select(-c(Temperature, OA, Salinity, Age.days)) %>%
dplyr::rename(Sample.ID = Chamber_tank)
D22_meanExp_stats # percent contribution of Module member threshold cutoff to the total module membership
colMeans(D22_meanExp_stats[c(4:5)])
D22_meanExp_stats %>% summarise(sd_Gene_count = sd(D22_meanExp_stats$Gene.count.MM.0.5),
sd_Perc = sd(D22_meanExp_stats$Percent_MM.0.05))
D22_meanExp_stats %>% summarise(sd_Gene_count = sd(D22_meanExp_stats$Gene.count.MM.0.5),
sd_Perc = sd(D22_meanExp_stats$Percent_MM.0.05))
resp_master_RepMean
# Run a PCA for Day 1
Master_length_survival_d22$Age <- as.factor(Master_length_survival_d22$Age) # convert Day into a factor
(merge(Master_length_survival_d22, D22_meanExp_Master))
Master_length_survival_d22
merge(d22.Seq_SampleKey, D22_meanExp_total_wide)
D22_meanExp_Master     <- merge(d22.Seq_SampleKey, D22_meanExp_total_wide) %>%
dplyr::mutate(pCO2 = substr(OA, 1,1)) %>%
dplyr::mutate(Salinity = substr(Salinity,1,1)) %>%
dplyr::mutate(Temp = substr(Temperature,1,1))
D22_meanExp_Master     <- merge(d22.Seq_SampleKey, D22_meanExp_total_wide) %>%
dplyr::mutate(pCO2 = substr(OA, 1,1)) %>%
dplyr::mutate(Salinity = substr(Salinity,1,1)) %>%
dplyr::mutate(Temp = substr(Temperature,1,1)) %>%
select(-c(Temperature, OA, Age.days)) %>%
dplyr::rename(Sample.ID = Chamber_tank)
D22_meanExp_Master
D22_meanExp_stats # percent contribution of Module member threshold cutoff to the total module membership
colMeans(D22_meanExp_stats[c(4:5)])
D22_meanExp_stats %>% summarise(sd_Gene_count = sd(D22_meanExp_stats$Gene.count.MM.0.5),
sd_Perc = sd(D22_meanExp_stats$Percent_MM.0.05))
Day22PCA         <- (merge(Master_length_survival_d22, D22_meanExp_Master)) %>% #[-9,] %>%  # outlier omit, chose not to
dplyr::mutate(Aragonite_saturation =
case_when(Aragonite_saturation == 'Low' ~ 'Low',
(Aragonite_saturation == 'Mid' & Salinity == 'L') ~ 'Mid_Sal',
(Aragonite_saturation == 'Mid' & pCO2     == 'H') ~ 'Mid_pCO2',
Aragonite_saturation == 'High' ~ 'High'))
Day22PCA
Day22PCA
Day22PCA[,c(3,4,8:13)]
# PCA Day 1
phys_pca22   <- prcomp(Day22PCA[,c(3,4,8:13)], # all numeric (phys + all modules) - PCA 1 = 0.4298  , PCA 2 0.1810   (cumulative 0.6108 )
center = TRUE,
scale. = TRUE)
print(phys_pca1)
summary(phys_pca1)
Day22PCA         <- (merge(Master_length_survival_d22, D22_meanExp_Master)) %>% #[-9,] %>%  # outlier omit, chose not to
dplyr::mutate(Aragonite_saturation =
case_when(Aragonite_saturation == 'Low' ~ 'Low',
(Aragonite_saturation == 'Mid' & Salinity == 'L') ~ 'Mid_Sal',
(Aragonite_saturation == 'Mid' & pCO2     == 'H') ~ 'Mid_pCO2',
Aragonite_saturation == 'High' ~ 'High'))
# PCA Day 1
phys_pca22   <- prcomp(Day22PCA[,c(3,4,8:13)], # all numeric (phys + all modules) - PCA 1 = 0.4298   , PCA 2 0.1810    (cumulative 0.6108  )
center = TRUE,
scale. = TRUE)
print(phys_pca22)
summary(phys_pca22)
# summary: the histogram of cor coeffs for DEGs overlapped with WGCNA module indicates 0.6 as a good cut off
# we confirm here that 0.6 cor coeff and < 0.05 p value can increase explanatory variance relative to 0.4 cor coeff
# however more conservative threshold (0.8) does not make a difference, albeit these (cor coeff cutoffs) change the number of genes contr'ing to the mean by >2 fold!
p22pCO2 <- ggbiplot(phys_pca22,
obs.scale = 1,
var.scale = 1,
groups = as.factor(Day22PCA$pCO2),
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +  theme_classic() +   ggtitle("day1, pCO2") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
p22pCO2
p22Sal <- ggbiplot(phys_pca22,
obs.scale = 1,
var.scale = 1,
groups = Day22PCA$Salinity,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +  theme_classic() +  ggtitle("day1, salinity") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
p22Temp <- ggbiplot(phys_pca22,
obs.scale = 1,
var.scale = 1,
groups = Day22PCA$Temp,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +  theme_classic() +  ggtitle("day1, temp") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
p22Arag <- ggbiplot(phys_pca22,
obs.scale = 1,
var.scale = 1,
groups = Day22PCA$Aragonite_saturation,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +  theme_classic() +  ggtitle("day1, aragonite saturation") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
library(ggpubr)
(merge(Master_length_survival_d22, D22_meanExp_Master))
ggarrange(p22Sal, p1pCO2, p22Arag, ncol = 1,nrow = 3)
ggarrange(p22Sal, p1pCO2, p22Arag, ncol = 2,nrow = 2)
ggarrange(p22Sal, p22pCO2, p22Arag, ncol = 2,nrow = 2)
pdf("Output/PCA_day22_phys.pdf",
width = 10, height = 10)
print(ggarrange(p22Sal, p22pCO2, p22Arag))
dev.off()
Resp.Master
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/") # personal computer
Resp.Master  <- read.csv(file="Output/Respiration/RespirationMaster.csv", header=T) # reference for the respirometry data - contains the 'Chamber_Tank' for each sensor channel (whether an animal or a blank)
Resp.Master
# model effect of treatment on resp rate 20210507
Resp_MAY <- Resp.Master %>%
dplyr::filter(Date %in% '5/7/2021')  %>%
dplyr::mutate(Age = '8days') %>%
dplyr::filter(Temp %in% 'H') %>%  # call only the high temp
dplyr::mutate()
Resp_MAY
# model effect of treatment on resp rate 20210507
Resp_MAY <- Resp.Master %>%
dplyr::filter(Date %in% '5/7/2021')  %>%
dplyr::mutate(Age = '8days') %>%
dplyr::filter(Temp %in% 'L') %>%  # call only the high temp
dplyr::mutate()
Resp_MAY
# model effect of treatment on resp rate 20210507
Resp_MAY <- Resp.Master %>%
dplyr::filter(Date %in% '5/7/2021')  %>%
dplyr::mutate(Age = '8days') %>%
# dplyr::filter(Temp %in% 'L') %>%  # call only the high temp
dplyr::mutate()
# Three way ANOVA
LMmod.MAY   <- aov(lm(resp_ng_L_indiv_hr~Temp*pCO2*Salinity,data=Resp_MAY))
shapiro.test(residuals(LMmod.MAY)) # 0.006028
# log transformation
LMmod.MAY_T   <- aov(lm(log(resp_ng_L_indiv_hr)~Temp*pCO2*Salinity,data=Resp_MAY))
shapiro.test(residuals(LMmod.MAY_T)) # 0.7608
leveneTest(LMmod.MAY_T) # 0.8419 good
summary(LMmod.MAY_T)
# Figures
Resp_MAY_select  <- Resp_MAY %>%
dplyr::select(c('resp_ng_L_indiv_hr', 'Temp', 'pCO2', 'Salinity')) %>%
dplyr::mutate(Age = '8days')
Resp_means_MAY <- Resp_MAY_select %>%
na.omit() %>%
dplyr::group_by(Temp, pCO2, Salinity, Age) %>%
dplyr::summarise(mean_RR = mean(resp_ng_L_indiv_hr),
n       = n(),
sd_RR   = sd(resp_ng_L_indiv_hr),
se_RR   = sd_RR/(sqrt(n)))
Heatplot_RR_MAY <- Resp_means_MAY %>%
dplyr::mutate(OA_Sal = (paste(pCO2, Salinity,sep=''))) %>%
ggplot(aes(x = as.factor(Age),
y = mean_RR)) +
#shape = stage)) +
geom_rect(aes(fill = mean_RR),
xmin = -Inf,
xmax = Inf,
ymin = -Inf,
ymax = Inf,
alpha = 0.3) +
geom_point(color = 'black') +
geom_errorbar(aes(ymin = mean_RR - se_RR,
ymax = mean_RR + se_RR),
width = 0.5,
position= "dodge2") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
facet_grid(vars(Temp),
vars(fct_relevel(OA_Sal, c("HL", "LL", "HH", "LH")))) +
scale_fill_gradient(low = "orange",
high = "forestgreen",
aesthetics = "fill")
Heatplot_RR_MAY
MAY_all <- Resp_MAY_select %>%
dplyr::mutate(full.treatment = (paste(Salinity, pCO2, Temp,sep=''))) %>%
dplyr::mutate(full.treatment = fct_relevel(full.treatment,
"LHL", "LHH", "LLL",'LLH',
"HHL", "HHH", "HLL", 'HLH')) %>%
ggplot(aes(full.treatment, resp_ng_L_indiv_hr , fill = factor(full.treatment))) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.5))+
geom_boxplot(size=0.2, alpha=0.1) +
scale_fill_manual(values=c("#56B4E9", "#D55E00","#56B4E9", "#D55E00",
"#56B4E9", "#D55E00","#56B4E9", "#D55E00")) +
labs(title = "C virginica, 24 hr larvae",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%indiv^{-1}%.% hr^{-1}~")"),
x = "Full treatment (Sal/pCO2/Temp)") +
annotate("text", x=2, y=5.8, label = "Low Salinity") +
annotate("rect", xmin = 0, xmax = 4.5, ymin = 0, ymax = 6.5,
alpha = .2) +
theme_bw()
# Figures
Resp_MAY_select  <- Resp_MAY %>%
dplyr::select(c('resp_ng_L_indiv_hr', 'Temp', 'pCO2', 'Salinity')) %>%
dplyr::mutate(Age = '8days')
MAY_all <- Resp_MAY_select %>%
dplyr::mutate(full.treatment = (paste(Salinity, pCO2, Temp,sep=''))) %>%
dplyr::mutate(full.treatment = fct_relevel(full.treatment,
"LHL", "LLL",'LLH', # "LHH"
"HHL", "HHH", "HLL", 'HLH')) %>%
ggplot(aes(full.treatment, resp_ng_L_indiv_hr , fill = factor(full.treatment))) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.5))+
geom_boxplot(size=0.2, alpha=0.1) +
scale_fill_manual(values=c("#56B4E9","#56B4E9", "#D55E00",
"#56B4E9", "#D55E00","#56B4E9", "#D55E00")) +
labs(title = "C virginica, 24 hr larvae",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%indiv^{-1}%.% hr^{-1}~")"),
x = "Full treatment (Sal/pCO2/Temp)") +
annotate("text", x=2, y=5.8, label = "Low Salinity") +
annotate("rect", xmin = 0, xmax = 4.5, ymin = 0, ymax = 6.5,
alpha = .2) +
theme_bw()
MAY_all <- Resp_MAY_select %>%
dplyr::mutate(full.treatment = (paste(Salinity, pCO2, Temp,sep=''))) %>%
dplyr::mutate(full.treatment = fct_relevel(full.treatment,
"LHL", "LHH", "LLL",#'LLH',
"HHL", "HHH", "HLL", 'HLH')) %>%
ggplot(aes(full.treatment, resp_ng_L_indiv_hr , fill = factor(full.treatment))) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.5))+
geom_boxplot(size=0.2, alpha=0.1) +
scale_fill_manual(values=c("#56B4E9", "#D55E00","#56B4E9", #"#D55E00",
"#56B4E9", "#D55E00","#56B4E9", "#D55E00")) +
labs(title = "C virginica, 24 hr larvae",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%indiv^{-1}%.% hr^{-1}~")"),
x = "Full treatment (Sal/pCO2/Temp)") +
annotate("text", x=2, y=5.8, label = "Low Salinity") +
annotate("rect", xmin = 0, xmax = 4.5, ymin = 0, ymax = 6.5,
alpha = .2) +
theme_bw()
MAY_all
MAY_all <- Resp_MAY_select %>%
dplyr::mutate(full.treatment = (paste(Salinity, pCO2, Temp,sep=''))) %>%
dplyr::mutate(full.treatment = fct_relevel(full.treatment,
"LHL", "LHH", "LLL",#'LLH',
"HHL", "HHH", "HLL", 'HLH')) %>%
ggplot(aes(full.treatment, resp_ng_L_indiv_hr , fill = factor(full.treatment))) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.5))+
geom_boxplot(size=0.2, alpha=0.1) +
scale_fill_manual(values=c("#56B4E9", "#D55E00","#56B4E9", #"#D55E00",
"#56B4E9", "#D55E00","#56B4E9", "#D55E00")) +
labs(title = "C virginica, 24 hr larvae",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%indiv^{-1}%.% hr^{-1}~")"),
x = "Full treatment (Sal/pCO2/Temp)") +
annotate("text", x=2, y=10, label = "Low Salinity") +
annotate("rect", xmin = 0, xmax = 3.5, ymin = 0, ymax = 6.5,
alpha = .2) +
theme_bw()
MAY_all
MAY_all <- Resp_MAY_select %>%
dplyr::mutate(full.treatment = (paste(Salinity, pCO2, Temp,sep=''))) %>%
dplyr::mutate(full.treatment = fct_relevel(full.treatment,
"LHL", "LHH", "LLL",#'LLH',
"HHL", "HHH", "HLL", 'HLH')) %>%
ggplot(aes(full.treatment, resp_ng_L_indiv_hr , fill = factor(full.treatment))) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.5))+
geom_boxplot(size=0.2, alpha=0.1) +
scale_fill_manual(values=c("#56B4E9", "#D55E00","#56B4E9", #"#D55E00",
"#56B4E9", "#D55E00","#56B4E9", "#D55E00")) +
labs(title = "C virginica, 24 hr larvae",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%indiv^{-1}%.% hr^{-1}~")"),
x = "Full treatment (Sal/pCO2/Temp)") +
annotate("text", x=2, y=8, label = "Low Salinity") +
annotate("rect", xmin = 0, xmax = 3.5, ymin = 0, ymax = 10,
alpha = .2) +
theme_bw()
MAY_all
MAY_all <- Resp_MAY_select %>%
dplyr::mutate(full.treatment = (paste(Salinity, pCO2, Temp,sep=''))) %>%
dplyr::mutate(full.treatment = fct_relevel(full.treatment,
"LHL", "LHH", "LLL",#'LLH',
"HHL", "HHH", "HLL", 'HLH')) %>%
ggplot(aes(full.treatment, resp_ng_L_indiv_hr , fill = factor(full.treatment))) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.5))+
geom_boxplot(size=0.2, alpha=0.1) +
scale_fill_manual(values=c("#56B4E9", "#D55E00","#56B4E9", #"#D55E00",
"#56B4E9", "#D55E00","#56B4E9", "#D55E00")) +
labs(title = "C virginica, 8 day larvae",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%indiv^{-1}%.% hr^{-1}~")"),
x = "Full treatment (Sal/pCO2/Temp)") +
annotate("text", x=2, y=8, label = "Low Salinity") +
annotate("rect", xmin = 0, xmax = 3.5, ymin = 0, ymax = 10,
alpha = .2) +
theme_bw()
Heatplot_RR_APRIL
# model effect of treatment on resp rate 20210430
Resp_APRIL <- Resp.Master %>%
dplyr::filter(Date %in% '4/30/2021') # %>%
# Figures
Resp_APRIL_select  <- Resp_APRIL %>%
dplyr::select(c('resp_ng_L_indiv_hr', 'Temp', 'pCO2', 'Salinity')) %>%
dplyr::mutate(Age = '24hrs')
APRIL_all <- Resp_APRIL_select %>%
dplyr::mutate(full.treatment = (paste(Salinity, pCO2, Temp,sep=''))) %>%
dplyr::mutate(full.treatment = fct_relevel(full.treatment,
"LHL", "LHH", "LLL",'LLH',
"HHL", "HHH", "HLL", 'HLH')) %>%
ggplot(aes(full.treatment, resp_ng_L_indiv_hr , fill = factor(full.treatment))) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.5))+
geom_boxplot(size=0.2, alpha=0.1) +
scale_fill_manual(values=c("#56B4E9", "#D55E00","#56B4E9", "#D55E00",
"#56B4E9", "#D55E00","#56B4E9", "#D55E00")) +
labs(title = "C virginica, 24 hr larvae",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%indiv^{-1}%.% hr^{-1}~")"),
x = "Full treatment (Sal/pCO2/Temp)") +
annotate("text", x=2, y=5.8, label = "Low Salinity") +
annotate("rect", xmin = 0, xmax = 4.5, ymin = 0, ymax = 6.5,
alpha = .2) +
theme_bw()
APRIL_all
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/")
pdf("Respiration/Day1_RR.pdf", width=8, height=8)
print(APRIL_all)
dev.off()
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/")
pdf("Respiration/Day1_RR.pdf", width=8, height=6)
print(APRIL_all)
dev.off()
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/")
pdf("Respiration/Day1_RR_heatplot.pdf", width=8, height=6)
print(Heatplot_RR_APRIL)
Heatplot_RR_APRIL <- Resp_means_APRIL %>%
dplyr::mutate(OA_Sal = (paste(pCO2, Salinity,sep=''))) %>%
ggplot(aes(x = as.factor(Age),
y = mean_RR)) +
#shape = stage)) +
geom_rect(aes(fill = mean_RR),
xmin = -Inf,
xmax = Inf,
ymin = -Inf,
ymax = Inf,
alpha = 0.3) +
geom_point(color = 'black') +
geom_errorbar(aes(ymin = mean_RR - se_RR,
ymax = mean_RR + se_RR),
width = 0.5,
position= "dodge2") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
facet_grid(vars(Temp),
vars(fct_relevel(OA_Sal, c("HL", "LL", "HH", "LH")))) +
scale_fill_gradient(low = "orange",
high = "forestgreen",
aesthetics = "fill")
Resp_means_APRIL <- Resp_APRIL_select %>%
na.omit() %>%
dplyr::group_by(Temp, pCO2, Salinity, Age) %>%
dplyr::summarise(mean_RR = mean(resp_ng_L_indiv_hr),
n       = n(),
sd_RR   = sd(resp_ng_L_indiv_hr),
se_RR   = sd_RR/(sqrt(n)))
Heatplot_RR_APRIL <- Resp_means_APRIL %>%
dplyr::mutate(OA_Sal = (paste(pCO2, Salinity,sep=''))) %>%
ggplot(aes(x = as.factor(Age),
y = mean_RR)) +
#shape = stage)) +
geom_rect(aes(fill = mean_RR),
xmin = -Inf,
xmax = Inf,
ymin = -Inf,
ymax = Inf,
alpha = 0.3) +
geom_point(color = 'black') +
geom_errorbar(aes(ymin = mean_RR - se_RR,
ymax = mean_RR + se_RR),
width = 0.5,
position= "dodge2") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
facet_grid(vars(Temp),
vars(fct_relevel(OA_Sal, c("HL", "LL", "HH", "LH")))) +
scale_fill_gradient(low = "orange",
high = "forestgreen",
aesthetics = "fill")
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/")
pdf("Respiration/Day1_RR_heatplot.pdf", width=8, height=6)
print(Heatplot_RR_APRIL)
dev.off()
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/")
pdf("Respiration/Day8_RR.pdf", width=8, height=6)
print(MAY_all)
dev.off()
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/")
pdf("Respiration/Day8_RR_heatplot.pdf", width=8, height=6)
print(Heatplot_RR_MAY)
dev.off()
summary(LMmod.MAY_T)
