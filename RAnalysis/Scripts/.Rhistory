# prep loop for cumulative output table
df_total             <- data.frame() # start dataframe
GO.Day0              <- data.frame(matrix(nrow = 1, ncol = 9)) # create dataframe to save cumunalitively during for loop
colnames(GO.Day0)    <- c('Day', 'modColor', 'ontology', 'term',
'category', 'over_represented_pvalue' ,
'under_represented_pvalue', 'numDEInCat','numInCat') # names for comuns in the for loop
modColor         <- Day0_WGCNA_sigmodules[3,1]
modColor
for (i in 1:nrow(Day0_WGCNA_sigmodules)) {
modColor         <- Day0_WGCNA_sigmodules[3,1]
loopmodColor_cor <- paste("MM.", modColor, sep = '')
loopmodColor_p   <- paste("p.MM.", modColor, sep = '')
ModuleLoop       <- as.data.frame(Day0_ModuleMembership %>%
dplyr::filter(moduleColor %in% modColor)  %>%
dplyr::select(c('geneSymbol',
'GO.terms',
'geneSymbol',
'moduleColor',
loopmodColor_p,
loopmodColor_cor)))
#  merge to the genes list 'GO_unique.genes.all' to create a binary vector 0 = not in module; 1 = in module
ModLoop_boolean  <- as.integer(GO_unique.genes.all%in%(ModuleLoop$geneSymbol)) # Day 0 - Primary - Upregulated DEGs
names(ModLoop_boolean)=GO_unique.genes.all
# Calculate Probability Weighting Function
pwf              <- nullp(ModLoop_boolean,  id=GO_unique.genes.all, bias.data=length_vector) # weight vector by length of gene
# Run oseq
Run_goseq        <- goseq(pwf, GO_unique.genes.all, gene2cat=GO.terms,
test.cats=c("GO:CC", "GO:BP", "GO:MF"), method="Wallenius", use_genes_without_cat=TRUE)
#
<<<<<<< HEAD
# FINAL_TABLE$CO3           <-  paste( (paste( (signif(carbchem.MASTER_wideMEANS$CO3_out_mmol_gSW, digits=3)),
#                                              "±",
#                                      (signif(carbchem.MASTER_wideStErr$CO3_out_mmol_gSW, digits=3)), sep="  ")),
#                                      " (",
#                                      carbchem.MASTER_wideN$CO3_out_mmol_gSW,
#                                      ")",
#                                      sep = "")
FINAL_TABLE$TA             <- paste( (paste( (signif(carbchem.MASTER_wideMEANS$TA__mmol_gSW__Corrected_with_the_CRM, digits=6)),
(signif(carbchem.MASTER_wideStErr$TA__mmol_gSW__Corrected_with_the_CRM, digits=4)), sep=" ± ")),
" (",
carbchem.MASTER_wideN$TA__mmol_gSW__Corrected_with_the_CRM,
")",
sep = "")
FINAL_TABLE$Aragonite.Sat  <-  paste( (paste( (signif(carbchem.MASTER_wideMEANS$WAr_out, digits=3)),
(signif(carbchem.MASTER_wideStErr$WAr_out, digits=3)), sep=" ± ")),
" (",
carbchem.MASTER_wideN$WAr_out,
")",
sep = "")
# FINAL_TABLE$Calcite.Sat    <-  paste( (paste( (signif(carbchem.MASTER_wideMEANS$WCa_out, digits=3)),
#                                      (signif(carbchem.MASTER_wideStErr$WCa_out, digits=2)), sep=" ± ")),
#                                      " (",
#                                      carbchem.MASTER_wideN$WCa_out,
#                                      ")",
#                                      sep = "")
FINAL_TABLE                <- FINAL_TABLE[,-1] # view table
FINAL_TABLE %>%
kbl(caption = "Table 1. Seawater chemistry") %>%
kable_classic(full_width = T, html_font = "Cambria")
# save output table
write.table(carbchem.MASTER_longMEANS,"C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/Water_Chem/Chem.Table_sep.csv",sep=",", row.names=FALSE)  # write table to
write.table(FINAL_TABLE,"C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/Water_Chem/Chem.Table.csv",sep=",", row.names=FALSE, fileEncoding = "latin1")  # write table to
library(ggplot2)
library(dplyr)
library(tidyverse)
library(multcompView)
# library(agricolae)
library(dplyr)
library(lme4)
library(ggplot2)
library(nlme)
library(car)
library(performance)
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Airradians_multigen_OA/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis") # Sam's work
library(ggplot2)
library(tidyr)
library(dplyr)
library(rcompanion)
library(FSA)
library(car)
library(forcats)
library(kableExtra) # nice Rmd tables
library(emmeans)
library(ggpubr)
library(survival)
library(Rmisc)
library(coxme)
library(survminer)
library(ggsurvfit) # survfit2
library(gtsummary) # tbl_survfit
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Airradians_multigen_OA/larvae") # Katie's
#knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis") # Sam's
knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis") # Sam's work
df <- read.csv("Data/larval_survival.csv", header = T) %>%
dplyr::mutate(Percent_Survival = as.numeric(Percent_Survival)) %>%
# dplyr::select(-treatment) %>%  # redundant column with Exposure_OA
# rename the variables for consistency using 'case_when'
dplyr::mutate(Parental_OA = case_when(Parental_OA ==  "LOW" ~ "Low pCO2",
Parental_OA ==  "MODERATE" ~ "Moderate pCO2",
Parental_OA ==  "HIGH" ~ "High pCO2",
Parental_OA ==  "WILD" ~ "None")) %>%
dplyr::mutate(Exposure_OA = case_when(Exposure_OA ==  "LOW" ~ "Low pCO2",
Exposure_OA ==  "MODERATE" ~ "Moderate pCO2",
Exposure_OA ==  "HIGH" ~ "High pCO2")) %>%
# change the levels for order when plotting - call as factors too!
dplyr::mutate(Parental_OA = as.factor(forcats::fct_relevel(Parental_OA,
c("Low pCO2", "Moderate pCO2", "High pCO2")))) %>%
dplyr::mutate(Exposure_OA = as.factor(forcats::fct_relevel(Exposure_OA,
c("Low pCO2", "Moderate pCO2", "High pCO2")))) %>%
# rename them
dplyr::rename(Parent_pCO2 = Parental_OA) %>%
dplyr::rename(Larvae_pCO2  = Exposure_OA) # done
df$Percent_Survival_trans <- asin(sqrt(df$Percent_Survival))
# head(df)
# str(df)
=======
Enrich.05                   <- Run_goseq$category[Run_goseq$over_represented_pvalue<.05]
Enrich.05_DF                <- data.frame(Enrich.05)
colnames(Enrich.05_DF)      <- c("category")
Enrich.05_DF_merge          <- merge(Enrich.05_DF, Run_goseq, by="category")
Enrich.05_DF_merge          <- Enrich.05_DF_merge[order(Enrich.05_DF_merge$ontology,
Enrich.05_DF_merge$over_represented_pvalue, -Enrich.05_DF_merge$numDEInCat),]
Enrich.05_DF_merge$term     <- as.factor(Enrich.05_DF_merge$term)
Enrich.05_DF_merge$modColor <- modColor
Enrich.05_DF_merge$Day      <- "Day0"
Enrich.05_DF_merge_filtered <- Enrich.05_DF_merge %>% filter(!(numDEInCat<2 & ontology == "BP"),
!(numDEInCat<2 & ontology == "MF"))
GO.Day0 <- rbind(GO.Day0,Enrich.05_DF_merge_filtered) #bind to a cumulative list dataframe
# print(GO.Day0) # print to monitor progress
}
GO.Day0
>>>>>>> 154022d674e530bcbe85cea275276674db405988
# LOAD PACKAGES
library(emmeans)
library(car)
library(ggpubr)
library(rcompanion)
library(emmeans)
library(forcats)
library(dplyr)
library(vegan)
library(tidyverse)
# SET WORKING DIRECTORY
#knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/")
knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/")
Resp.Master  <- read.csv(file="Output/Respiration/RespirationMaster.csv", header=T) # reference for the respirometry data - contains the 'Chamber_Tank' for each sensor channel (whether an animal or a blank)
Resp.Master
# model effect of treatment on resp rate 20210430
Resp_APRIL <- Resp.Master %>%
dplyr::filter(Date %in% '4/30/2021') # %>%
Resp_APRIL # view the data
APRIL_all <- Resp_APRIL %>%
dplyr::mutate(Temp_pCO2 = paste(Temp,pCO2, sep = '')) %>%
dplyr::mutate(full.treatment = (paste(Temp, pCO2, Salinity,sep=''))) %>%
dplyr::mutate(full.treatment = fct_relevel(full.treatment,
"LHL", "LHH", "HHL",'HHH',
"LLL", "LLH", "HLL", 'HLH')) %>%
ggplot(aes(fct_relevel(Temp_pCO2, c("LH", "HH", "LL", "HL")), # x
resp_ng_L_indiv_hr,
fill = factor(Salinity)) ) +
scale_fill_manual(values=c("white", "grey10")) +
geom_boxplot(size=0.2, alpha=0.1) +
geom_point(aes(shape=Salinity),
size = 2,
position = position_jitterdodge(jitter.width = 0.5)) +
labs(title = "C virginica, 24 hr larvae",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%indiv^{-1}%.% hr^{-1}~")"),
x = "Temp_pCO2_Salinity") +
scale_y_continuous(expand = c(0, 0), limits = c(0, NA)) +
annotate("text", x=4, y=0.8, label = "c (1.3 medArag)", size  =3) +
annotate("text", x=2, y=3, label = "ab (0.54 medArag)", size =3) +
annotate("text", x=1, y=3, label = "b (0.45 medArag)", size  =3) +
annotate("text", x=3, y=5, label = "a (1.03 medArag)", size  =3) +
#annotate("rect", xmin = 0, xmax = 4.5, ymin = 0, ymax = 6.5,alpha = .2) +
theme_classic()
APRIL_all
APRIL_all <- Resp_APRIL %>%
dplyr::mutate(Temp_pCO2 = paste(Temp,pCO2, sep = '')) %>%
dplyr::mutate(full.treatment = (paste(Temp, pCO2, Salinity,sep=''))) %>%
dplyr::mutate(full.treatment = fct_relevel(full.treatment,
"LHL", "LHH", "HHL",'HHH',
"LLL", "LLH", "HLL", 'HLH')) %>%
ggplot(aes(fct_relevel(Temp_pCO2, c("LH", "HH", "LL", "HL")), # x
resp_ng_L_indiv_hr,
fill = factor(Salinity)) ) +
scale_fill_manual(values=c("white", "grey10")) +
geom_boxplot(size=0.2, alpha=0.1) +
geom_point(aes(shape=Salinity),
size = 2,
position = position_jitterdodge(jitter.width = 0.5)) +
labs(title = "C virginica, 24 hr larvae",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%indiv^{-1}%.% hr^{-1}~")"),
x = "Temp_pCO2_Salinity") +
scale_y_continuous(expand = c(0, 0), limits = c(0, NA)) +
annotate("text", x=4, y=0.8, label = "c (1.3 medArag)", size  =3) +
annotate("text", x=2, y=3, label = "ab (0.54 medArag)", size =3) +
annotate("text", x=1, y=3, label = "b (0.45 medArag)", size  =3) +
annotate("text", x=3, y=5, label = "a (1.03 medArag)", size  =3) +
#annotate("rect", xmin = 0, xmax = 4.5, ymin = 0, ymax = 6.5,alpha = .2) +
theme_classic()
APRIL_all_MEANSe <- Resp_APRIL %>%
dplyr::mutate(Temp_pCO2 = paste(Temp,pCO2, sep = '')) %>%
dplyr::mutate(full.treatment = (paste(Temp, pCO2, Salinity,sep=''))) %>%
dplyr::mutate(full.treatment = fct_relevel(full.treatment,
"LHL", "LHH", "HHL",'HHH',
"LLL", "LLH", "HLL", 'HLH')) %>%
ggplot(aes(fct_relevel(Temp_pCO2, c("LH", "HH", "LL", "HL")), # x
resp_ng_L_indiv_hr,
fill = factor(Salinity)),
group= full.treatment) +
geom_point(aes(shape = Salinity, group= full.treatment),
size =2,
position = position_jitterdodge(jitter.width = 0.5)) +
stat_summary(aes(group= full.treatment),
fun = mean,
fun.min = function(x) mean(x) - sd(x)/sqrt(length(x)),
fun.max = function(x) mean(x) + sd(x)/sqrt(length(x)),
geom = 'errorbar',  width = 0.25,
position = position_jitterdodge(jitter.width = 0.5)) +
stat_summary(aes(group= full.treatment),
fun = mean, fun.min = mean, fun.max = mean,
geom = 'point',  size = 5, shape = 20, color = "red",
position = position_jitterdodge(jitter.width = 0.5)) +
# scale_y_continuous(limits = c(0, 30)) +
# scale_shape_manual(values = c(16, 15)) +
# labs(x = '', y = '') +
scale_shape_manual(values = c(16, 15)) +
scale_fill_manual(values=c("white", "grey10")) +
labs(title = "C virginica, 24 hr larvae",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%indiv^{-1}%.% hr^{-1}~")"),
x = "Temp_pCO2_Salinity") +
scale_y_continuous(expand = c(0, 0), limits = c(0, NA)) +
annotate("text", x=4, y=0.8, label = "c (1.3 medArag)", size  =3) +
annotate("text", x=2, y=3, label = "ab (0.54 medArag)", size =3) +
annotate("text", x=1, y=3, label = "b (0.45 medArag)", size  =3) +
annotate("text", x=3, y=5, label = "a (1.03 medArag)", size  =3) +
#annotate("rect", xmin = 0, xmax = 4.5, ymin = 0, ymax = 6.5,alpha = .2) +
theme_classic()
print(APRIL_all_MEANSe)
APRIL_TemppCO2 <- Resp_APRIL %>%
dplyr::mutate(Temp_pCO2 =
paste0(Temp,pCO2, sep = '')) %>%
ggplot(aes(fct_relevel(Temp_pCO2, c("LH", "HH", "LL", "HL")), # x
resp_ng_L_indiv_hr,  # y
group = factor(Temp_pCO2)) ) +
geom_boxplot(size=0.2, alpha=0.1) +
geom_point(aes(shape=Salinity),
size = 2,
position = position_jitterdodge(jitter.width = 0.5)) +
# scale_fill_manual(values=c("white", "grey40")) +
labs(title = "C virginica, 24 hr larvae",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%indiv^{-1}%.% hr^{-1}~")"),
x = "Temp_pCO2") +
annotate("text", x=3.8, y=0.8, label = "c (1.3 medArag)", size  =3) +
annotate("text", x=1.8, y=1.2, label = "ab (0.54 medArag)", size =3) +
annotate("text", x=0.8, y=1.2, label = "b (0.45 medArag)", size  =3) +
annotate("text", x=2.8, y=3.2, label = "a (1.03 medArag)", size  =3) +
#annotate("rect", xmin = 0, xmax = 4.5, ymin = 0, ymax = 6.5,alpha = .2) +
theme_classic()
APRIL_TemppCO2
Resp_means_APRIL <- Resp_APRIL %>%
dplyr::mutate(Age = "24 hrs") %>%
na.omit() %>%
# dplyr::group_by(Temp, pCO2, Salinity, Age) %>% # group by all - NO interaction!
dplyr::group_by(Temp, pCO2, Age) %>% # group by temp and pCO2 - YES interaction!
dplyr::summarise(mean_RR = mean(resp_ng_L_indiv_hr),
n       = n(),
sd_RR   = sd(resp_ng_L_indiv_hr),
se_RR   = sd_RR/(sqrt(n)))
Heatplot_RR_APRIL <- Resp_means_APRIL %>%
dplyr::mutate(Temp_pCO2 = (paste(Temp, pCO2,sep=''))) %>%
# dplyr::mutate(OA_Sal = (paste(pCO2, Salinity,sep=''))) %>%
ggplot(aes(x = as.factor(Age),
y = mean_RR)) +
#shape = stage)) +
geom_rect(aes(fill = mean_RR),
xmin = -Inf,
xmax = Inf,
ymin = -Inf,
ymax = Inf,
alpha = 0.3) +
geom_point(color = 'black') +
geom_errorbar(aes(ymin = mean_RR - se_RR,
ymax = mean_RR + se_RR),
width = 0.5,
position= "dodge2") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
# facet_grid(vars(Temp),
# vars(fct_relevel(OA_Sal, c("HL", "LL", "HH", "LH")))) +
facet_grid(vars(Temp),
vars(fct_relevel(Temp_pCO2, c("HL", "LL", "HH", "LH")))) +
scale_fill_gradient(low = "orange",
high = "forestgreen",
aesthetics = "fill")
Heatplot_RR_APRIL
# model effect of treatment on resp rate 20210507
Resp_MAY <- Resp.Master %>%
dplyr::filter(Date %in% '5/7/2021')  %>%
dplyr::mutate(Age = '8days')
Resp_MAY # view the data
May_all <- Resp_MAY_select %>%
dplyr::mutate(Temp_pCO2 = paste(Temp,pCO2, sep = '')) %>%
dplyr::mutate(full.treatment = (paste(Temp, pCO2, Salinity,sep=''))) %>%
dplyr::mutate(full.treatment = fct_relevel(full.treatment,
"LHL", "LHH", "HHL",'HHH',
"LLL", "LLH", "HLL", 'HLH')) %>%
ggplot(aes(fct_relevel(Temp_pCO2, c("LH", "HH", "LL", "HL")), # x
resp_ng_L_indiv_hr,
fill = factor(Salinity)) ) +
scale_fill_manual(values=c("white", "grey10")) +
geom_boxplot(size=0.2, alpha=0.1) +
geom_point(aes(shape=Salinity),
size = 2,
position = position_jitterdodge(jitter.width = 0.5)) +
labs(title = "C virginica, 8 day larvae",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%indiv^{-1}%.% hr^{-1}~")"),
x = "Temp_pCO2") +
scale_y_continuous(expand = c(0, 0), limits = c(0, NA)) +
theme_classic()
# Figures
Resp_MAY_select  <- Resp_MAY %>%
dplyr::select(c('resp_ng_L_indiv_hr', 'Temp', 'pCO2', 'Salinity')) %>%
dplyr::mutate(Age = '8days')
May_all <- Resp_MAY_select %>%
dplyr::mutate(Temp_pCO2 = paste(Temp,pCO2, sep = '')) %>%
dplyr::mutate(full.treatment = (paste(Temp, pCO2, Salinity,sep=''))) %>%
dplyr::mutate(full.treatment = fct_relevel(full.treatment,
"LHL", "LHH", "HHL",'HHH',
"LLL", "LLH", "HLL", 'HLH')) %>%
ggplot(aes(fct_relevel(Temp_pCO2, c("LH", "HH", "LL", "HL")), # x
resp_ng_L_indiv_hr,
fill = factor(Salinity)) ) +
scale_fill_manual(values=c("white", "grey10")) +
geom_boxplot(size=0.2, alpha=0.1) +
geom_point(aes(shape=Salinity),
size = 2,
position = position_jitterdodge(jitter.width = 0.5)) +
labs(title = "C virginica, 8 day larvae",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%indiv^{-1}%.% hr^{-1}~")"),
x = "Temp_pCO2") +
scale_y_continuous(expand = c(0, 0), limits = c(0, NA)) +
theme_classic()
May_all
library(ggplot2)
library(dplyr)
library(tidyverse)
library(multcompView)
library(dplyr)
library(lme4)
library(ggplot2)
library(nlme)
library(car)
library(performance)
#setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis")
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis")
# EXPERIMENT METADATA
Exp_data <-  read.csv("Data/Survival/Survival_master.csv", header = T) %>%
filter(Day %in% 1) %>%
dplyr::select(c('Temp','OA','Salinity','Replicate','Id.', 'pH', 'AR')) %>%
dplyr::rename(Sample.ID = Id., Aragonite_saturation = AR)
#  LENGTH DATA - call it and add columns to merge
# day 1 - length data
raw_length_dat_Age1    <- read.csv("Data/Length/workbook/timepoint_1_Day1.csv", header = T,nrows=50) %>%
dplyr::mutate(Age = 1) %>%
dplyr::mutate(stage = 1)
# day 1 - length data
raw_length_dat_Age4    <- read.csv("Data/Length/workbook/timepoint_2_Day4.csv", header = T) %>%
dplyr::mutate(Age = 4) %>%
dplyr::mutate(stage = 1)
# day 8 - length data
raw_length_dat_Age8_1  <- read.csv("Data/Length/workbook/timepoint_3_Day8.csv", header = T) %>%
dplyr::mutate(Age = 8) %>%
dplyr::mutate(stage = 1)
raw_length_dat_Age8_2  <- read.csv("Data/Length/workbook/timepoint_3_Day8_additional_lengths.csv", header = T) %>%
dplyr::mutate(Age = 8) %>%
dplyr::mutate(stage = 1)
rbind(raw_length_dat_Age8_1,raw_length_dat_Age8_2)
# day 11 - length data
raw_length_dat_Age11   <- read.csv("Data/Length/workbook/timepoint_4_Day11.csv", header = T) %>%
dplyr::mutate(Age = 11) %>%
dplyr::mutate(stage = 1)
# day 15 - length data
raw_length_dat_Age15   <- read.csv("Data/Length/workbook/timepoint_5_Day15.csv", header = T) %>%
dplyr::select(-X) %>%
dplyr::mutate(Age = 15) %>%
dplyr::mutate(stage = 1)
raw_length_dat_Age19   <- read.csv("Data/Length/workbook/timepoint_6_Day19.csv", header = T) %>%
dplyr::mutate(Age = 19) %>%
dplyr::mutate(stage = 1)
raw_length_dat_Age22_larvae   <- read.csv("Data/Length/workbook/timepoint_7_Day22_larvae.csv", header = T) %>%
dplyr::mutate(Age = 22) %>%
dplyr::mutate(stage = 1)
raw_length_dat_Age22_spat   <- read.csv("Data/Length/workbook/timepoint_7_Day22_spat.csv", header = T) %>%
dplyr::mutate(Age = 22) %>%
dplyr::mutate(stage = 2)
Resp_APRIL
Resp_APRIL_summ <- summarySE(Resp_APRIL,
measurevar="resp_ng_L_indiv_hr",
groupvars=c("Date", "Temp", "pCO2", "Salinity")) %>%
dplyr::mutate(mean_SE = paste0(
signif(length_um, digits=3),
" ± ",
signif(se, digits=3)))
# View(Resp_APRIL)
library(Rmisc)
Resp_APRIL_summ <- summarySE(Resp_APRIL,
measurevar="resp_ng_L_indiv_hr",
groupvars=c("Date", "Temp", "pCO2", "Salinity")) %>%
dplyr::mutate(mean_SE = paste0(
signif(length_um, digits=3),
" ± ",
signif(se, digits=3)))
?summarySE
# View(Resp_APRIL)
library(Rmisc)
Resp_APRIL_summ <- Rmisc::summarySE(Resp_APRIL,
measurevar="resp_ng_L_indiv_hr",
groupvars=c("Date", "Temp", "pCO2", "Salinity")) %>%
dplyr::mutate(mean_SE = paste0(
signif(length_um, digits=3),
" ± ",
signif(se, digits=3)))
Resp_APRIL_summ <- Rmisc::summarySE(Resp_APRIL,
measurevar="resp_ng_L_indiv_hr",
groupvars=c("Date", "Temp", "pCO2", "Salinity")) %>%
dplyr::mutate(mean_SE = paste0(
signif(resp_ng_L_indiv_hr, digits=3),
" ± ",
signif(se, digits=3)))
Resp_APRIL_summ
write.csv(Resp_APRIL_summ, "Output/Respiration/Day1_MeanSE.csv")
library(ggplot2)
library(dplyr)
library(tidyverse)
library(dplyr)
library(lme4)
library(ggplot2)
library(nlme)
library(car)
library(performance)
library(Rmisc)
library(survival)
library(vegan)
library(tidyverse)
library(ggplot2)
library(tidyr)
library(dplyr)
library(rcompanion)
library(FSA)
library(car)
library(forcats)
library(kableExtra) # nice Rmd tables
library(emmeans)
library(ggpubr)
library(survival)
library(Rmisc)
library(coxme)
library(survminer)
library(ggsurvfit) # survfit2
library(gtsummary) # tbl_survfit
knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/")
# survival data
Survival_data <- read.csv("Data/Survival/Survival_master.csv", header = T) %>%
dplyr::mutate(random_fact = paste( substr(Temp,1,1),
substr(OA,1,1),
substr(Salinity,1,1), '_', Replicate, sep = ''))
# View(Survival_dat)
# head(Survival_dat) # view first few lines
######################################################## #
# Survival day 1
Survival_means_day1 <- Survival_data %>%
dplyr::filter(Day == 1) %>%
na.omit() %>%
dplyr::group_by(Day, OA, Salinity, Temp) %>%
dplyr::summarise(mean_survival = mean(Survival),
n           = n(),
sd_survival   = sd(Survival),
se_survival   = sd_survival/(sqrt(n))) %>%
dplyr::mutate(Survival_to_hatch = (mean_survival) *100 ) %>%
dplyr::mutate(OA_Sal = paste(substr(OA,1,1),
substr(Salinity,1,1),
sep = ''))
Survival_means_day1
Master_Lengths_summ <- summarySE(Master_Lengths,
measurevar="length_um",
groupvars=c("Age", "Temp", "OA", "Salinity", "Aragonite_saturation")) %>%
dplyr::arrange(Aragonite_saturation) %>%
dplyr::arrange(Age) %>%
dplyr::mutate(mean_SE = paste0(
signif(length_um, digits=3),
" ± ",
signif(se, digits=3)))
Survival_data
Survival_summ <- summarySE(Survival_data,
measurevar="Survival",
groupvars=c("Day", "Temp", "OA", "Salinity", "AR")) %>%
dplyr::arrange(AR) %>%
dplyr::arrange(Day) %>%
dplyr::mutate(mean_SE = paste0(
signif(Survival, digits=3),
" ± ",
signif(se, digits=3)))
Survival_summ
write.csv(Survival_summ, "Output/Survival/Survival_Perc_MeanSE.csv")
