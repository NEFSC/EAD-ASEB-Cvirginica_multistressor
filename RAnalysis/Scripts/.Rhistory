# |        **Residuals**         | 36 |  2.595  | 0.07208 |   NA    |    NA     |
shapiro.test(residuals(MitPot_TwoWayANOVA)) # normality of model residuals:  0.2058
leveneTest(MitPot_TwoWayANOVA) # heteroscedasticity (absence of homoscedasticity): 0.818
MitPotential_MG_T1     <- MitPotential_dat %>% dplyr::filter(Timepoint %in% "1_day") %>% dplyr::filter(cell_type %in% 'mature_granular')   %>% na.omit()
MitPotential_IG_T1     <- MitPotential_dat %>% dplyr::filter(Timepoint %in% "1_day") %>%  dplyr::filter(cell_type %in% 'immature_granular') %>% na.omit()
MitPotential_MA_T1     <- MitPotential_dat %>% dplyr::filter(Timepoint %in% "1_day") %>%  dplyr::filter(cell_type %in% 'mature_agranular')  %>% na.omit()
MitPotential_Degran_T1 <- MitPotential_dat %>% dplyr::filter(Timepoint %in% "1_day") %>%  dplyr::filter(cell_type %in% 'degranulated')      %>% na.omit()
MitPotential_MG_T2     <- MitPotential_dat %>% dplyr::filter(Timepoint %in% "8_days") %>% dplyr::filter(cell_type %in% 'mature_granular')   %>% na.omit()
MitPotential_IG_T2     <- MitPotential_dat %>% dplyr::filter(Timepoint %in% "8_days") %>%  dplyr::filter(cell_type %in% 'immature_granular') %>% na.omit()
MitPotential_MA_T2     <- MitPotential_dat %>% dplyr::filter(Timepoint %in% "8_days") %>%  dplyr::filter(cell_type %in% 'mature_agranular')  %>% na.omit()
MitPotential_Degran_T2 <- MitPotential_dat %>% dplyr::filter(Timepoint %in% "8_days") %>%  dplyr::filter(cell_type %in% 'degranulated')      %>% na.omit()
MitPotential_dat_T2 <- MitPotential_dat %>% dplyr::filter(Timepoint %in% "8_days")
MitPot_TwoWayANOVA_T2 <- lm(Ratio_FL2.FL1~pCO2_Treatment*cell_type, data = MitPotential_dat_T2)
pander(anova(MitPot_TwoWayANOVA_T2), style='rmarkdown') # anova table of lmer
# |            &nbsp;            |  Pr(>F)   |
# |:----------------------------:|:---------:|
# |      **pCO2_Treatment**      |  0.2985   |
# |        **cell_type**         | 5.081e-10 |
# | **pCO2_Treatment:cell_type** |  0.7841   |
# |        **Residuals**         |    NA     |
shapiro.test(residuals(MitPot_TwoWayANOVA_T2)) # normality of model residuals:  0.2058
leveneTest(MitPot_TwoWayANOVA_T2) # heteroscedasticity (absence of homoscedasticity): 0.818
leveneTest(MitPot_TwoWayANOVA_T2) # heteroscedasticity (absence of homoscedasticity): 0.818
library(dplyr)
library(ggplot2)
library(lme4)
library(lmerTest)
library(performance)
library(kableExtra)
library(pander)
library(ggpubr)
library(Rmisc)
leveneTest(MitPot_TwoWayANOVA_T2) # heteroscedasticity (absence of homoscedasticity): 0.818
library(car)
leveneTest(MitPot_TwoWayANOVA_T2) # heteroscedasticity (absence of homoscedasticity): 0.818
MitPot_MG_ANOVA_T2 <- lm(Ratio_FL1.FL2~pCO2_Treatment, data = MitPotential_MG_T2)
MitPot_MG_ANOVA_T2 <- lm(Ratio_FL2.FL1~pCO2_Treatment, data = MitPotential_MG_T2)
pander(anova(MitPot_MG_ANOVA_T2), style='rmarkdown') # anova table of lmer
# |       &nbsp;       | Df |  Sum Sq   |  Mean Sq  | F value | Pr(>F) |
# |:------------------:|:--:|:---------:|:---------:|:-------:|:------:|
# | **pCO2_Treatment** | 1  | 0.0002681 | 0.0002681 | 0.5328  | 0.484  |
# |   **Residuals**    | 9  | 0.004529  | 0.0005033 |   NA    |   NA   |
shapiro.test(residuals(MitPot_MG_ANOVA_T2)) # normality of model residuals:  0.7315
leveneTest(MitPot_MG_ANOVA_T2) # heteroscedasticity (absence of homoscedasticity): 0.675
MitPot_IG_ANOVA_T2 <- lm(Ratio_FL2.FL1~pCO2_Treatment, data = MitPotential_IG_T2_T2)
MitPot_IG_ANOVA_T2 <- lm(Ratio_FL2.FL1~pCO2_Treatment, data = MitPotential_IG_T2)
pander(anova(MitPot_IG_ANOVA_T2), style='rmarkdown') # anova table of lmer
# |       &nbsp;       | Df |  Sum Sq  | Mean Sq  | F value | Pr(>F) |
# |:------------------:|:--:|:--------:|:--------:|:-------:|:------:|
# | **pCO2_Treatment** | 1  | 0.002097 | 0.002097 | 0.6313  | 0.4473 |
# |   **Residuals**    | 9  | 0.02989  | 0.003321 |   NA    |   NA   |
shapiro.test(residuals(MitPot_IG_ANOVA_T2)) # normality of model residuals:  0.5247
leveneTest(MitPot_IG_ANOVA_T2) # heteroscedasticity (absence of homoscedasticity): 0.8426
MitPot_MA_ANOVA_T2 <- lm(Ratio_FL2.FL1~pCO2_Treatment, data = MitPotential_MA_T2)
pander(anova(MitPot_MA_ANOVA_T2), style='rmarkdown') # anova table of lmer
# |       &nbsp;       | Df |  Sum Sq  |  Mean Sq  | F value | Pr(>F) |
# |:------------------:|:--:|:--------:|:---------:|:-------:|:------:|
# | **pCO2_Treatment** | 1  | 1.13e-06 | 1.13e-06  | 0.00274 | 0.9594 |
# |   **Residuals**    | 9  | 0.003713 | 0.0004125 |   NA    |   NA   |
shapiro.test(residuals(MitPot_MA_ANOVA_T2)) # normality of model residuals:  0.07573
leveneTest(MitPot_MA_ANOVA_T2) # heteroscedasticity (absence of homoscedasticity): 0.8953
MitPot_Degran_ANOVA_T2 <- lm(Ratio_FL2.FL1~pCO2_Treatment, data = MitPotential_Degran_T2)
pander(anova(MitPot_Degran_ANOVA_T2), style='rmarkdown') # anova table of lmer
# |       &nbsp;       | Df |  Sum Sq  |  Mean Sq  | F value | Pr(>F) |
# |:------------------:|:--:|:--------:|:---------:|:-------:|:------:|
# | **pCO2_Treatment** | 1  | 4.75e-05 | 4.75e-05  | 0.2617  | 0.6212 |
# |   **Residuals**    | 9  | 0.001633 | 0.0001815 |   NA    |   NA   |
shapiro.test(residuals(MitPot_Degran_ANOVA_T2)) # normality of model residuals:  0.7314
leveneTest(MitPot_Degran_ANOVA_T2) # heteroscedasticity (absence of homoscedasticity): 0.4407
MitPotenital_PLOT <- ggplot(MitPotential_dat_T2, aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Cvirginica - Mitchondrial potenital under OA",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~cell_type, scales = "free")
MitPotenital_PLOT # print this figure...
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
MitPotential_dat    <- read.csv(file="Flow_cytometry_data/Output/JC10_results.csv", header=T) %>%
dplyr::mutate(pCO2 = case_when(pCO2_Treatment == "Low"  ~ "500 μatm", pCO2_Treatment == "High" ~ "1200 μatm")) %>% # add a column for pCO2
dplyr::mutate(Ratio_FL2.FL1 = as.numeric(Ratio_FL2.FL1))  %>%
dplyr::mutate(pCO2_Treatment = as.factor(pCO2_Treatment))
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(lme4)
library(lmerTest)
library(performance)
library(kableExtra)
library(pander)
library(ggpubr)
library(Rmisc)
library(car)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/") # personal computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # Work computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
MitPotential_dat    <- read.csv(file="Flow_cytometry_data/Output/JC10_results.csv", header=T) %>%
dplyr::mutate(pCO2 = case_when(pCO2_Treatment == "Low"  ~ "500 μatm", pCO2_Treatment == "High" ~ "1200 μatm")) %>% # add a column for pCO2
dplyr::mutate(Ratio_FL2.FL1 = as.numeric(Ratio_FL2.FL1))  %>%
dplyr::mutate(pCO2_Treatment = as.factor(pCO2_Treatment))
ROS_dat             <- read.csv(file="Flow_cytometry_data/Output/DCFHDA_results.csv", header=T)
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(lme4)
library(lmerTest)
library(performance)
library(kableExtra)
library(pander)
library(ggpubr)
library(Rmisc)
library(car)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/") # personal computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # Work computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
MitPotential_dat    <- read.csv(file="Flow_cytometry_data/Output/JC10_results.csv", header=T) %>%
dplyr::mutate(pCO2 = case_when(pCO2_Treatment == "Low"  ~ "500 μatm", pCO2_Treatment == "High" ~ "1200 μatm")) %>% # add a column for pCO2
dplyr::mutate(Ratio_FL2.FL1 = as.numeric(Ratio_FL2.FL1))  %>%
dplyr::mutate(pCO2_Treatment = as.factor(pCO2_Treatment))
ROS_dat             <- read.csv(file="Flow_cytometry_data/Output/DCFHDA_results.csv", header=T)
MitPotential_dat_T1 <- MitPotential_dat %>% dplyr::filter(Timepoint %in% "1_day1")
MitPotential_dat_T1 <- MitPotential_dat %>% dplyr::filter(Timepoint %in% "1_day")
MitPotential_dat_T1
MitPot_TwoWayANOVA_T1 <- lm(Ratio_FL2.FL1~pCO2_Treatment*cell_type, data = MitPotential_dat_T1)
pander(anova(MitPot_TwoWayANOVA_T1), style='rmarkdown') # anova table of lmer
# |            &nbsp;            | Df | Sum Sq  | Mean Sq  | F value |  Pr(>F)   |
# |:----------------------------:|:--:|:-------:|:--------:|:-------:|:---------:|
# |      **pCO2_Treatment**      | 1  | 0.01791 | 0.01791  |  3.084  |  0.08672  | *
# |        **cell_type**         | 3  | 0.9784  |  0.3261  |  56.16  | 2.122e-14 | **
# | **pCO2_Treatment:cell_type** | 3  | 0.0121  | 0.004033 | 0.6946  |  0.5608   |
# |        **Residuals**         | 40 | 0.2323  | 0.005807 |   NA    |    NA     |
shapiro.test(residuals(MitPot_TwoWayANOVA_T1)) # normality of model residuals:  0.01457
leveneTest(MitPot_TwoWayANOVA_T1) # heteroscedasticity (absence of homoscedasticity): 0.08157
MitPot_MG_ANOVA_T1 <- lm(Ratio_FL2.FL1~pCO2_Treatment, data = MitPotential_MG_T1)
pander(anova(MitPot_MG_ANOVA_T1), style='rmarkdown') # anova table of lmer
# |       &nbsp;       | Df |  Sum Sq  | Mean Sq  | F value | Pr(>F) |
# |:------------------:|:--:|:--------:|:--------:|:-------:|:------:|
# | **pCO2_Treatment** | 1  | 0.002395 | 0.002395 | 0.1801  | 0.6803 |
# |   **Residuals**    | 10 |  0.133   |  0.0133  |   NA    |   NA   |
shapiro.test(residuals(MitPot_MG_ANOVA_T1)) # normality of model residuals:  0.5324
leveneTest(MitPot_MG_ANOVA_T1) # heteroscedasticity (absence of homoscedasticity): 0.7025
MitPot_IG_ANOVA_T1 <- lm(Ratio_FL2.FL1~pCO2_Treatment, data = MitPotential_IG_T1)
pander(anova(MitPot_IG_ANOVA_T1), style='rmarkdown') # anova table of lmer
# |       &nbsp;       | Df | Sum Sq  | Mean Sq  | F value | Pr(>F) |
# |:------------------:|:--:|:-------:|:--------:|:-------:|:------:|
# | **pCO2_Treatment** | 1  | 0.02537 | 0.02537  |  3.29   | 0.0998 | *
# |   **Residuals**    | 10 | 0.07711 | 0.007711 |   NA    |   NA   |
shapiro.test(residuals(MitPot_IG_ANOVA_T1)) # normality of model residuals:  0.8775
leveneTest(MitPot_IG_ANOVA_T1) # heteroscedasticity (absence of homoscedasticity): 0.7179
MitPot_MA_ANOVA_T1 <- lm(Ratio_FL2.FL1~pCO2_Treatment, data = MitPotential_MA_T1)
pander(anova(MitPot_MA_ANOVA_T1), style='rmarkdown') # anova table of lmer
# |       &nbsp;       | Df |  Sum Sq  |  Mean Sq  | F value | Pr(>F)  |
# |:------------------:|:--:|:--------:|:---------:|:-------:|:-------:|
# | **pCO2_Treatment** | 1  | 0.002046 | 0.002046  |  3.961  | 0.07459 | *
# |   **Residuals**    | 10 | 0.005164 | 0.0005164 |   NA    |   NA    |
shapiro.test(residuals(MitPot_MA_ANOVA_T1)) # normality of model residuals:  0.1874
leveneTest(MitPot_MA_ANOVA_T1) # heteroscedasticity (absence of homoscedasticity): 0.9157
MitPot_Degran_ANOVA_T1 <- lm(Ratio_FL2.FL1~pCO2_Treatment, data = MitPotential_Degran_T1)
pander(anova(MitPot_Degran_ANOVA_T1), style='rmarkdown') # anova table of lmer
pander(anova(MitPot_Degran_ANOVA_T1), style='rmarkdown') # anova table of lmer
# |       &nbsp;       | Df |  Sum Sq  | Mean Sq  | F value | Pr(>F) |
# |:------------------:|:--:|:--------:|:--------:|:-------:|:------:|
# | **pCO2_Treatment** | 1  | 0.000202 | 0.000202 | 0.1187  | 0.7376 |
# |   **Residuals**    | 10 | 0.01702  | 0.001702 |   NA    |   NA   |
shapiro.test(residuals(MitPot_Degran_ANOVA_T1)) # normality of model residuals:  0.7806
leveneTest(MitPot_Degran_ANOVA_T1) # heteroscedasticity (absence of homoscedasticity): 0.4094
MitPotenital_PLOT_T1 <- ggplot(MitPotential_dat_T1, aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Cvirginica - Mitchondrial potenital under OA",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~cell_type, scales = "free")
MitPotenital_PLOT_T1 # print this figure...
MitPotenital_PLOT_T1 <- ggplot(MitPotential_dat_T1, aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Cvirginica - Mitchondrial potenital under OA (24 hrs)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~cell_type, scales = "free")
MitPotenital_PLOT_T2 <- ggplot(MitPotential_dat_T2, aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Cvirginica - Mitchondrial potenital under OA (8 days)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~cell_type, scales = "free")
MitPotenital_PLOT_T2 # print this figure...
ggarrange(MitPotenital_PLOT_T1,MitPotenital_PLOT_T2,nrow = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_T1_T2.pdf")
ggarrange(MitPotenital_PLOT_T1,MitPotenital_PLOT_T2,nrow = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_T1_T2.pdf")
MitPotenital_PLOT_T2 <- ggplot(MitPotential_dat_T2, aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Cvirginica - Mitchondrial potential under OA (8 days)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~cell_type, scales = "free")
MitPotenital_PLOT_T2 # print this figure...
MitPotenital_PLOT_T1 <- ggplot(MitPotential_dat_T1, aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Cvirginica - Mitchondrial potential under OA (24 hrs)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~cell_type, scales = "free")
ggarrange(MitPotenital_PLOT_T1,MitPotenital_PLOT_T2,nrow = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_T1_T2.pdf")
MitPotential_dat
MitPotenital_PLOT_Degran <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'degranulated') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Cvirginica - Mitchondrial potential under OA (8 days)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_Degran
MitPotential_dat
# Export the figures to pdf
ggarrange(MitPotenital_PLOT_T1,MitPotenital_PLOT_T2,nrow = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_T1_T2.pdf")
MitPotenital_PLOT_Degran <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'degranulated') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Cvirginica - Mitchondrial potential (degranulated cells)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_MG <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'mature_granular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Cvirginica - Mitchondrial potential (mature granular)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_IG <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'immature_granular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Cvirginica - Mitchondrial potential (immature granular)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_MA <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'mature_agranular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Cvirginica - Mitchondrial potential (mature agranular)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
# Export the figures to pdf
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 4) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf")
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf")
MitPotenital_PLOT_Degran <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'degranulated') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "ΔΨm, degranulated cells",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_MG <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'mature_granular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "ΔΨm, mature granular",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_IG <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'immature_granular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "ΔΨm, immature granular",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_MA <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'mature_agranular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "ΔΨm, mature agranular)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
# Export the figures to pdf
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf")
MitPotenital_PLOT_Degran <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'degranulated') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Mit. potential, degranulated cells",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_MG <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'mature_granular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Mit. potential, mature granular",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_IG <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'immature_granular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Mit. potential, immature granular",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_MA <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'mature_agranular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Mit. potential, mature agranular)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
# Export the figures to pdf
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf", width = 800, height = 800)
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf", width = 10, height = 12)
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf", width = 5, height = 7)
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf", width = 50, height = 70)
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf", width = 55, height = 70)
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf", width = 12, height = 15)
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf", width = 4, height = 6)
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf", width = 12, height = 15)
