setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/")
# raw data
raw_length_dat_Age1    <- read.csv("Data/Length_Survival/timepoint_1_Day1.csv", header = T)
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis")
# raw data
raw_length_dat_Age1    <- read.csv("Data/Length_Survival/timepoint_1_Day1.csv", header = T)
# raw data
raw_length_dat_Age1    <- read.csv("/Data/Length_Survival/timepoint_1_Day1.csv", header = T)
#Set Path
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis")
# raw data
raw_length_dat_Age1    <- read.csv("/Data/Length_Survival/timepoint_1_Day1.csv", header = T)
#Set Path
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis")
# raw data
# raw_length_dat_Age1    <- read.csv("/Data/Length_Survival/timepoint_1_Day1.csv", header = T)
# raw_length_dat_Age8    <- (read.csv("Data/Length_Survival/timepoint_2_Day8.csv", header = T) %>% dplyr::select(!X))[-51,] # row 51 has comments in the raw data file
# raw_length_dat_Age8    <- sapply(raw_length_dat_Age8, as.numeric)
# average data
Av_length.survival_dat <- read.csv("Data/Length_Survival/LengthSurvival_master.csv", header = T) %>%
dplyr::mutate(random_fact = paste( substr(Temp,1,1), substr(OA,1,1), substr(Salinity,1,1), '_', Replicate, sep = ''))
#Set Path
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis")
# raw data
raw_length_dat_Age1    <- read.csv("/Data/Length_Survival/timepoint_1_Day1.csv", header = T)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(multcompView)
library(agricolae)
library(dplyr)
library(lme4)
library(ggplot2)
library(nlme)
library(car)
library(performance)
library(stargazer)
library(emmeans)
#Set Path
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis")
# raw data
raw_length_dat_Age1    <- read.csv("/Data/Length_Survival/timepoint_1_Day1.csv", header = T)
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis")
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis")
# raw data
raw_length_dat_Age1    <- read.csv("Data/Length_Survival/timepoint_1_Day1.csv", header = T)
#Set Path
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis")
# raw data
raw_length_dat_Age1    <- read.csv("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Data/Length_Survival/timepoint_1_Day1.csv", header = T)
raw_length_dat_Age8    <- (read.csv("Data/Length_Survival/timepoint_2_Day8.csv", header = T) %>% dplyr::select(!X))[-51,] # row 51 has comments in the raw data file
raw_length_dat_Age8    <- sapply(raw_length_dat_Age8, as.numeric)
# average data
Av_length.survival_dat <- read.csv("Data/Length_Survival/LengthSurvival_master.csv", header = T) %>%
dplyr::mutate(random_fact = paste( substr(Temp,1,1), substr(OA,1,1), substr(Salinity,1,1), '_', Replicate, sep = ''))
head(Av_length.survival_dat)
Av_length.survival_dat
raw_length_dat_Age1
head(Av_length.survival_dat)
# extract the experiment data with coresponding sampke Ids from the averaged data master file...
Exp_data <-  Av_length.survival_dat %>%
filter(Day %in% 1) %>%
dplyr::select(c('Temp','OA','Salinity','Replicate','Id.', 'pH', 'AR')) %>%
dplyr::rename(Sample.ID = Id., Aragonite_saturation = AR)
Exp_data
# Age 1
raw_length_Age1MELT <- reshape2::melt(raw_length_dat_Age1) %>%
na.omit %>%
dplyr::rename(length_um = value , Sample.ID =variable) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age1_raw_length      <- merge(raw_length_Age1MELT, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact = paste( substr(Temp,1,1), substr(OA,1,1), substr(Salinity,1,1), '_', Replicate, sep = ''))
# Age 1
raw_length_Age8MELT <- reshape2::melt(raw_length_dat_Age8) %>%
na.omit() %>%
dplyr::select(!Var1) %>%
dplyr::rename(length_um = value , Sample.ID =Var2) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age8_raw_length  <- merge(raw_length_Age8MELT, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact = paste( substr(Temp,1,1), substr(OA,1,1), substr(Salinity,1,1), '_', Replicate, sep = ''))
Age8_raw_length
#data
Age1_raw_length_hightemp <- Age1_raw_length %>% dplyr::filter(!Temp %in% 'Low')
# run model
Age1Length_lme_mod_hightemp <- lme(length_um~OA*Salinity,random=~1|random_fact,data=Age1_raw_length_hightemp) # notice temp is removed...
pander(anova(Age1Length_lme_mod_hightemp), style='rmarkdown') # anova table of lmer
leveneTest(residuals(Age1Length_lme_mod_hightemp) ~Age1_raw_length_hightemp$OA*Age1_raw_length_hightemp$Salinity) # 0.4058 PASS
boxplot(residuals(Age1Length_lme_mod_hightemp) ~ Age1_raw_length_hightemp$OA*Age1_raw_length_hightemp$Salinity) # visual of residuals grouped
qqnorm(resid(Age1Length_lme_mod_hightemp)) # check for normality of residuals
# run model
Age1Length_lme_mod_hightemp <- lme(length_um~OA*Salinity,random=~1|random_fact,data=Age1_raw_length_hightemp) # notice temp is removed...
pander(anova(Age1Length_lme_mod_hightemp), style='rmarkdown') # anova table of lmer
# run model
Age1Length_lme_mod_hightemp <- lme(length_um~OA*Salinity,random=~1|random_fact,data=Age1_raw_length_hightemp) # notice temp is removed...
pander(anova(Age1Length_lme_mod_hightemp), style='rmarkdown') # anova table of lmer
library(pander)
pander(anova(Age1Length_lme_mod_hightemp), style='rmarkdown') # anova table of lmer
leveneTest(residuals(Age1Length_lme_mod_hightemp) ~Age1_raw_length_hightemp$OA*Age1_raw_length_hightemp$Salinity) # 0.4058 PASS
#data
Age8_raw_length_hightemp <- Age8_raw_length %>% dplyr::filter(!Temp %in% 'Low')
# run model ( LME model)
Age8Length_lme_mod_hightemp <- lme(length_um~OA*Salinity,random=~1|random_fact,data=Age8_raw_length_hightemp) # notice temp is removed...
pander(anova(Age8Length_lme_mod_hightemp), style='rmarkdown') # anova table of lmer
# Levene's test and visuals of the residuals
leveneTest(residuals(Age8Length_lme_mod_hightemp) ~Age8_raw_length_hightemp$OA*Age8_raw_length_hightemp$Salinity) # 6.08e-12 *** no pass
boxplot(residuals(Age8Length_lme_mod_hightemp) ~ Age8_raw_length_hightemp$OA*Age8_raw_length_hightemp$Salinity) # visual of residuals grouped
qqnorm(resid(Age8Length_lme_mod_hightemp)) # check for normality of residuals
Age8Length_lme_mod_hightempLOG <- lme(log(length_um)~OA*Salinity,random=~1|random_fact,data=Age8_raw_length_hightemp) # notice temp is removed...
pander(anova(Age8Length_lme_mod_hightempLOG), style='rmarkdown') # anova table of lmer
# |     &nbsp;      | numDF | denDF | F-value | p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:--------:|
# | **(Intercept)** |   1   |  531  |  25161  |    0     |
# |     **OA**      |   1   |   7   |  17.7   | 0.003998 | *
# |  **Salinity**   |   1   |   7   |  15.6   | 0.005533 | *
# | **OA:Salinity** |   1   |   7   |  2.385  |  0.1664  |
leveneTest(residuals(Age8Length_lme_mod_hightempLOG) ~Age8_raw_length_hightemp$OA*Age8_raw_length_hightemp$Salinity) # 6.08e-12 *** no pass
# transform - see if resolves heterozygosity and changes te results
Age8Length_lme_mod_hightempLOG <- lme(sqrt(length_um)~OA*Salinity,random=~1|random_fact,data=Age8_raw_length_hightemp) # notice temp is removed...
pander(anova(Age8Length_lme_mod_hightempLOG), style='rmarkdown') # anova table of lmer
# |     &nbsp;      | numDF | denDF | F-value | p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:--------:|
# | **(Intercept)** |   1   |  531  |  25161  |    0     |
# |     **OA**      |   1   |   7   |  17.7   | 0.003998 | *
# |  **Salinity**   |   1   |   7   |  15.6   | 0.005533 | *
# | **OA:Salinity** |   1   |   7   |  2.385  |  0.1664  |
leveneTest(residuals(Age8Length_lme_mod_hightempLOG) ~Age8_raw_length_hightemp$OA*Age8_raw_length_hightemp$Salinity) # 4.876e-07 *** no pass
boxplot(residuals(Age8Length_lme_mod_hightempLOG) ~ Age8_raw_length_hightemp$OA*Age8_raw_length_hightemp$Salinity) # visual of residuals grouped
qqnorm(resid(Age8Length_lme_mod_hightempLOG)) # check for normality of residuals
# transform - see if resolves heterozygosity and changes te results
Age8Length_lme_mod_hightempLOG <- lme(log(length_um)~OA*Salinity,random=~1|random_fact,data=Age8_raw_length_hightemp) # notice temp is removed...
qqnorm(resid(Age8Length_lme_mod_hightempLOG)) # check for normality of residuals
age_1_hightemp <- Av_length.survival_dat %>%
filter(Day=="1") %>%
dplyr::filter(Temp %in% 'High')
Age1_Survival_lme_mod_hightemp <- lme(Survival~OA*Salinity,random=~1|random_fact,data=age_1_hightemp)
pander(anova(Age1_Survival_lme_mod_hightemp), style='rmarkdown') # anova table of lmer
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |   8   |  2296   | 3.977e-11 |
# |     **OA**      |   1   |   8   |  23.18  |  0.00133  | * main effect of OA
# |  **Salinity**   |   1   |   8   | 0.02447 |  0.8796   |
# | **OA:Salinity** |   1   |   8   | 0.9816  |  0.3508   |
leveneTest(residuals(Age1_Survival_lme_mod_hightemp) ~ age_1_hightemp$OA*age_1_hightemp$Salinity) # 0.5608- pass
pander(anova(Age1_Survival_lme_mod_hightemp), style='rmarkdown') # anova table of lmer
age_8_hightemp <- Av_length.survival_dat %>%
filter(Day=="8") %>%
dplyr::filter(Temp %in% 'High')
Age8_Survival_lme_mod_hightemp <- lme(Survival~OA*Salinity,random=~1|random_fact,data=age_8_hightemp)
pander(anova(Age8_Survival_lme_mod_hightemp), style='rmarkdown') # anova table of lmer
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |   6   |  46.03  | 0.0005015 |
# |     **OA**      |   1   |   6   | 0.3174  |  0.5936   |
# |  **Salinity**   |   1   |   6   |  15.52  |  0.00763  | # main effect of salinity
# | **OA:Salinity** |   1   |   6   | 0.1175  |  0.7434   |
leveneTest(residuals(Age8_Survival_lme_mod_hightemp) ~ age_8_hightemp$OA*age_8_hightemp$Salinity) # 0.6261- pass
multcomp::cld(posthoc$emmeans,alpha = 0.5, Letters = letters)
posthoc<-lsmeans(Age8_Survival_lme_mod_hightemp, ~Salinity, adjust="tukey")
posthoc<-emmeans(Age8_Survival_lme_mod_hightemp, pairwise~Salinity, adjust="tukey")
multcomp::cld(posthoc$emmeans,alpha = 0.5, Letters = letters)
Age8_Survival_Boxplot <- age_8_hightemp %>%
dplyr::group_by(OA,Salinity) %>%
dplyr::summarise(mean_surv = mean(Survival),
n         = n(),
sd_surv   = sd(Survival),
se_surv   = sd_surv/(sqrt(n))) %>%
ggplot(aes(x=fct_relevel(OA, c("Low", "High")),
y=mean_surv,
colour=fct_relevel(Salinity, c("Low", "High"))))+
geom_point(aes (fill = fct_relevel(Salinity, c("Low", "High"))), position = "dodge2") +
geom_errorbar(aes(ymin = mean_surv - se_surv,
ymax = mean_surv + se_surv,
fill = fct_relevel(Salinity, c("Low", "High"))),
width = 0.5, position= "dodge2") +
theme_classic() +
#ylim(0.2,0.6) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(title="Age = 8 days", x ="pCO2 level", y = "Survival")+
theme(axis.title.y = element_text(size = rel(1.3),
angle =90),
axis.title.x = element_text(size = rel(1.3),
angle = 0)) +
theme(axis.text=element_text(size=12))
Age8_Survival_Boxplot
multcomp::cld(posthoc$emmeans,alpha = 0.5, Letters = letters)
posthoc<-lsmeans(Age1_Survival_lme_mod_hightemp, ~OA, adjust="tukey")
posthoc<-emmeans(Age1_Survival_lme_mod_hightemp, pairwise~OA, adjust="tukey")
multcomp::cld(posthoc$emmeans,alpha = 0.5, Letters = letters)
# Purpose: Oyster project 2021 - Respiration rate data
# analysis of respiration rate data
# Written by: Sam J Gurr (last edit 9/14/2021)
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(reshape2)
library(lme4)
library(lmerTest)
library(performance) # check check_model QC
library(see)
library(patchwork)
library(forcats)
library(lawstat)
library(car)
library(pander)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis") # personal computer
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Cvriginica_multistressor/RAnalysis") # Work computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
exp_metadata <- read.csv(file="Data/ExperimentMetadata.csv", header=T) # treatment assignments to 'Chamber_Tank'
aragonite_dat<- read.csv(file='Output/Water_Chem/Chem.Table_sep.csv', header = T) %>%
dplyr::select(c('meanAragonite','Temp_OA_Sal')) %>%
dplyr::rename(TempCarbSal = Temp_OA_Sal)
aragonite_dat$TempCarbSal <-  gsub("_", "", aragonite_dat$TempCarbSal)
counts_resp  <- read.csv(file="Data/Counts_resp.csv", header=T) # reference for the respirometry data - contains the 'Chamber_Tank' for each sensor channel (whether an animal or a blank)
resp.ref     <- read.csv(file="Data/Respiration/Reference_master.csv", header=T) %>%
dplyr::filter(!Filename %in% c('1_3_19_21_raw.txt', 'may_7_2021_low_temo_10-12_ans_13-15_high_sal_raw_b.txt')) # reference for the respirometry data - contains the 'Chamber_Tank' for each sensor channel (whether an animal or a blank)
resp.data    <- read.csv(file="Output/Respiration/Cumulative_resp_alpha0.4.csv", header=T) %>%
dplyr::filter(!Filename %in% c('1_3_19_21_raw.txt', 'may_7_2021_low_temo_10-12_ans_13-15_high_sal_raw_b.txt'))# read the calculated raw rates from 'resp_LoLin' script - contains the calculated rate (not normalized for blanks) for each sensor-channel
# merge the exp_metadata with the resp.data
resp.ref_merged                 <- merge(exp_metadata, resp.ref, by = 'Chamber_tank', all=TRUE) # all TRUE allows us to keep the blanks
resp.data_merged                <- merge(resp.data, resp.ref_merged, by = c('Date', 'Channel','Notes','Filename')) %>%
dplyr::mutate(TempCarbSal = case_when( !is.na(Temp) ~ (as.character(paste(Temp, pCO2, Salinity, sep =''))) )) %>%
dplyr::mutate(Aragonite_saturation = case_when( (TempCarbSal == "HHH") ~ 0.7,
(TempCarbSal == 'HHL') ~ 0.3,
(TempCarbSal == 'HLH') ~ 1.6,
(TempCarbSal == 'HLL') ~ 0.6,
(TempCarbSal == 'LLL') ~ 0.5,
(TempCarbSal == 'LLH') ~ 1.5,
(TempCarbSal == 'LHL') ~ 0.2,
(TempCarbSal == 'LHH') ~ 0.6))
dates.runs <- resp.data_merged %>%  # call table
dplyr::distinct(Date, Notes) # call all unique values for date run and sw condition
dates.runs <- na.omit(dates.runs)
# call dataframe and build table to rbind in for loop
blanks_total <- data.frame() # start dataframe
blanks.table <- data.frame(matrix(nrow = 1,ncol = 5)) # make a table template
colnames(blanks.table)<-c('Date', 'Notes', 'BLANK.mean.Lpc', 'BLANK.mean.Leq' , 'BLANK.mean.Lz') # names for comuns in the for loop
# for loop. objective = obtian a mean value for all blanks specific to date, run #, seawater treatment
for(i in 1:nrow(dates.runs)) {
data <- resp.data_merged %>%
dplyr::select(Date, Chamber_tank, Notes, Lpc,  Leq, Lz) %>%
dplyr::filter(!is.na(Lpc)) %>% # ommits empty resp channels (if any)
dplyr::filter(Notes == dates.runs[i,2])
blanks <- data %>%
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::summarise(mean_Lpc = mean(abs(Lpc)),
mean_Leq = mean(abs(Leq)),
mean_Lz = mean(abs(Lz)))
blanks.table$Date           <- dates.runs[i,1] # all files have date in the form of yyyymmdd at the start of each csv name
#blanks.table$RUN <- dates.runs[i,2] # assign the run to the number in the title for the trials completed that day
blanks.table$Notes      <- dates.runs[i,2]
blanks.table$BLANK.mean.Lpc <- blanks[1,1]
blanks.table$BLANK.mean.Leq <- blanks[1,2]
blanks.table$BLANK.mean.Lz  <- blanks[1,3]
# blanks.table$alpha <- data[1,9] # set at start of script - reresents the proportion of data for final estimate of slopes (Lpc, Leq, Lz)
df <- data.frame(blanks.table) # name dataframe for this singl e row
blanks_total <- rbind(blanks_total,df) #bind to a cumulative list dataframe
# print(blanks_total) # print to monitor progress
}
head(blanks_total) # view blanks table
Resp.blanks.merge <- merge(resp.data_merged, blanks_total, by=c("Date", "Notes")) %>% # NOTE: this repeats for every distinct length value
dplyr::filter(!Chamber_tank =='blank') %>%
dplyr::mutate(resp_norm = Lpc - BLANK.mean.Lpc) # calc resp norm - note Lpc is still raw data  - thus a positive resp norm means blank > sample resp - bad data!
Resp.blanks.merge_OM <- Resp.blanks.merge %>% dplyr::filter(!resp_norm > 0)  # omits respiration rate values showing an increase in O2 over time
Resp.outliers        <- Resp.blanks.merge_OM %>% dplyr::filter(resp_norm > 0)  # lets lopok at this data - possible troubleshootiung to ID these outliers...
print(c("number of blank resp > sample resp =",nrow(Resp.outliers)))
count_check_all <- Resp.blanks.merge_OM %>% dplyr::group_by(Date,TempCarbSal) %>% dplyr::summarise(n = n())
knitr::kable(count_check_all)
count_check_true_rates <- Resp.blanks.merge_OM %>% dplyr::filter(!Lpc > 0) %>% dplyr::group_by(Date,TempCarbSal) %>% dplyr::summarise(n = n()) # omit those wit positive values - no oxygen consumption recorded
knitr::kable(count_check_true_rates)
### no HLL after filtered of poor data
vial.vol <- 0.08 # milliliters (ml)
Resp.Master <- merge(Resp.blanks.merge_OM[,c(1,3,5,9:14,18)], counts_resp[,c(1,6:7)], by = c('Date','Chamber_tank'))
Resp.Master$resp_ng_L_indiv_hr <- (
( ( (abs(Resp.Master$resp_norm)*1000000) * # call absolute value of resp in mg per minute - convert to ng min-1
(vial.vol/1000) ) / # correct ng minute-1 to ng liter-1 by multiplying by the resp vial in liters
Resp.Master$Counts ) * # normalize by individual or larvae count - as to ng L-1 individual-1
(60)) # correct for the time; final value is ng Liter-1 individual-1 hour-1
# mean sd rates
# mean(Resp.Master$resp_ng_L_indiv_hr) # mean = 0.4994656
# sd(Resp.Master$resp_ng_L_indiv_hr) # sd= 0.8197345
Resp.Master[,c(1:3,12)]
# a.
Resp_age1 <- Resp.Master %>%
dplyr::filter(Date %in% '4/30/2021')  %>%
dplyr::mutate(Treatment = as.character(paste('Temp.', Temp, '_OA.', pCO2, '_Sal.',Salinity, sep = ''))) %>%
dplyr::mutate(pCO2_Salinity = as.character(substr(TempCarbSal, 2, 3))) %>%
dplyr::mutate(Temp = (fct_relevel(Temp, c('L','H'))))
# a.
Resp_age1_hightemp <- Resp.Master %>%
dplyr::filter(Date %in% '4/30/2021')  %>%
dplyr::filter(Temp %in% 'H') %>%
dplyr::mutate(Treatment = as.character(paste('OA.', pCO2, '_Sal.',Salinity, sep = ''))) %>%
dplyr::mutate(pCO2_Salinity = as.character(substr(TempCarbSal, 2, 3)))
# a.
Resp_age1_hightemp <- Resp.Master %>%
dplyr::filter(Date %in% '4/30/2021')  %>%
dplyr::filter(Temp %in% 'H') %>%
dplyr::mutate(Treatment = as.character(paste('OA.', pCO2, '_Sal.',Salinity, sep = ''))) %>%
dplyr::mutate(pCO2_Salinity = as.character(substr(TempCarbSal, 2, 3)))
# b.
Resp_age1_hightemp <- merge(Resp_age1_hightemp, aragonite_dat, by = 'TempCarbSal') # merge with the mean aragonite saturation state
## Plot geeom boxlot with jitter
Resp_Age1_Boxplot_hightemp <- ggplot(data=Resp_age1_hightemp,
aes(x=as.factor(Aragonite_saturation),
#aes(x=meanAragonite,
y=resp_ng_L_indiv_hr,
fill=pCO2_Salinity)) +
geom_boxplot()+
geom_jitter(width = 0.1)+
scale_fill_manual(values=c("skyblue2", "darkorange3","royalblue3", "orange2"))+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(title = "Age =24 hours; Respiration rates",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%indiv^{-1}%.% hr^{-1}~")"),
x = "Aragonite saturation") +
theme(axis.title.y = element_text(size = rel(1.3), angle =90), axis.title.x = element_text(size = rel(1.3), angle = 0))+
theme(axis.text=element_text(size=12))
Resp_Age1_Boxplot_hightemp
LMmod.age1_hightemp   <- aov(lm( log(resp_ng_L_indiv_hr)~pCO2*Salinity,data=Resp_age1_hightemp))
print('LM model  == aov( lm ( resp_ng_L_indiv_hr ~ pCO2 * Salinity, data = Resp_APRIL ) )')
pander(anova(LMmod.age1_hightemp), style='rmarkdown') # anova table of lmer
# c.2 ommit the high outlier resp value (> 0.14)
Resp_age1_hightempOM   <- Resp_age1_hightemp %>% dplyr::filter(!resp_ng_L_indiv_hr > 0.14) # ommit the outlier at ~ 0.15
LMmod.age1_hightempOM  <- aov(lm( log(resp_ng_L_indiv_hr)~pCO2*Salinity,data=Resp_age1_hightempOM))
print('LM model  == aov( lm ( resp_ng_L_indiv_hr ~ pCO2 * Salinity, data = Resp_APRIL ) )')
pander(anova(LMmod.age1_hightempOM), style='rmarkdown') # anova table of lmer
shapiro.test(residuals(LMmod.age1_hightempOM)) # 0.3748  normal
leveneTest(LMmod.age1_hightempOM) # 0.915 good
# a.
Resp_age8 <- Resp.Master %>%
dplyr::filter(Date %in% '5/7/2021') %>%
dplyr::mutate(Treatment = as.character(paste('Temp.', Temp, '_OA.', pCO2, '_Sal.',Salinity, sep = ''))) %>%
dplyr::mutate(pCO2_Salinity = as.character(substr(TempCarbSal, 2, 3))) %>%
dplyr::mutate(Temp = (fct_relevel(Temp, c('L','H'))))
Resp_age8
count_check_true_rates
Resp.outliers
Resp.blanks.merge_OM
Resp.blanks.merge
merge(resp.data_merged, blanks_total, by=c("Date", "Notes"))
resp.data_merged
Resp.blanks.merge <- merge(resp.data_merged, blanks_total, by=c("Date", "Notes")) %>% # NOTE: this repeats for every distinct length value
dplyr::filter(!Chamber_tank =='blank') %>%
dplyr::filter(!lpc > 1) %>% # onlynegative raw lpc values from LoLinR represent oxygen depletion - positive values are errors
dplyr::mutate(resp_norm = abs(Lpc) - BLANK.mean.Lpc) # calc resp norm - note Lpc is still raw data (take abs) then resp - blank, <0 = bad data!
Resp.blanks.merge <- merge(resp.data_merged, blanks_total, by=c("Date", "Notes")) %>% # NOTE: this repeats for every distinct length value
dplyr::filter(!Chamber_tank =='blank') %>%
dplyr::filter(!Lpc > 1) %>% # onlynegative raw lpc values from LoLinR represent oxygen depletion - positive values are errors
dplyr::mutate(resp_norm = abs(Lpc) - BLANK.mean.Lpc) # calc resp norm - note Lpc is still raw data (take abs) then resp - blank, <0 = bad data!
Resp.blanks.merge
Resp.blanks.merge
Resp.blanks.merge <- merge(resp.data_merged, blanks_total, by=c("Date", "Notes")) %>% # NOTE: this repeats for every distinct length value
dplyr::filter(!Chamber_tank =='blank') %>%
dplyr::filter(!Lpc > 1) %>% # onlynegative raw lpc values from LoLinR represent oxygen depletion - positive values are errors
dplyr::mutate(resp_norm = abs(Lpc) - BLANK.mean.Lpc)  %>% #  Lpc is still raw data (take abs) then resp - blank,
dplyr::filter(resp_norm > 0) #  <0 = bad data! - means that the animal resp is LOWER than the blank!
Resp.blanks.merge <- merge(resp.data_merged, blanks_total, by=c("Date", "Notes")) %>% # NOTE: this repeats for every distinct length value
dplyr::filter(!Chamber_tank =='blank') %>%
dplyr::filter(!Lpc > 1) %>% # onlynegative raw lpc values from LoLinR represent oxygen depletion - positive values are errors
dplyr::mutate(resp_norm = abs(Lpc) - BLANK.mean.Lpc)   #  Lpc is still raw data (take abs) then resp - blank,
Resp.blanks.merge_OM <- Resp.blanks.merge %>% dplyr::filter(resp_norm > 0)  # omits respiration rate values LESS than the blank (resp_norm < 0)
Resp.outliers        <- Resp.blanks.merge_OM %>% dplyr::filter(resp_norm < 0)  # lets lopok at this data - possible troubleshootiung to ID these outliers...
Resp.outliers
Resp.blanks.merge <- merge(resp.data_merged, blanks_total, by=c("Date", "Notes")) %>% # NOTE: this repeats for every distinct length value
dplyr::filter(!Chamber_tank =='blank') %>%
dplyr::filter(!Lpc > 1) %>% # onlynegative raw lpc values from LoLinR represent oxygen depletion - positive values are errors
dplyr::mutate(resp_norm = abs(Lpc) - BLANK.mean.Lpc)   #  Lpc is still raw data (take abs) then resp - blank,
Resp.outliers        <- Resp.blanks.merge %>% dplyr::filter(resp_norm < 0)  # lets lopok at this data - possible troubleshootiung to ID these outliers...
Resp.outliers
Resp.blanks.merge_OM <- Resp.blanks.merge %>% dplyr::filter(resp_norm > 0)  # omits respiration rate values LESS than the blank (resp_norm < 0)
print(c("number of blank resp > sample resp =",nrow(Resp.outliers)))
count_check_all <- Resp.blanks.merge_OM %>% dplyr::group_by(Date,TempCarbSal) %>% dplyr::summarise(n = n())
knitr::kable(count_check_all)
count_check_true_rates <- Resp.blanks.merge_OM %>% dplyr::filter(!Lpc > 0) %>% dplyr::group_by(Date,TempCarbSal) %>% dplyr::summarise(n = n()) # omit those wit positive values - no oxygen consumption recorded
knitr::kable(count_check_true_rates)
vial.vol <- 0.08 # milliliters (ml)
Resp.Master <- merge(Resp.blanks.merge_OM[,c(1,3,5,9:14,18)], counts_resp[,c(1,6:7)], by = c('Date','Chamber_tank'))
Resp.Master$resp_ng_L_indiv_hr <- (
( ( (abs(Resp.Master$resp_norm)*1000000) * # call absolute value of resp in mg per minute - convert to ng min-1
(vial.vol/1000) ) / # correct ng minute-1 to ng liter-1 by multiplying by the resp vial in liters
Resp.Master$Counts ) * # normalize by individual or larvae count - as to ng L-1 individual-1
(60)) # correct for the time; final value is ng Liter-1 individual-1 hour-1
# mean sd rates
# mean(Resp.Master$resp_ng_L_indiv_hr) # mean = 0.4994656
# sd(Resp.Master$resp_ng_L_indiv_hr) # sd= 0.8197345
Resp.Master[,c(1:3,12)]
# a.
Resp_age1_hightemp <- Resp.Master %>%
dplyr::filter(Date %in% '4/30/2021')  %>%
dplyr::filter(Temp %in% 'H') %>%
dplyr::mutate(Treatment = as.character(paste('OA.', pCO2, '_Sal.',Salinity, sep = ''))) %>%
dplyr::mutate(pCO2_Salinity = as.character(substr(TempCarbSal, 2, 3)))
# b.
Resp_age1_hightemp <- merge(Resp_age1_hightemp, aragonite_dat, by = 'TempCarbSal') # merge with the mean aragonite saturation state
## Plot geeom boxlot with jitter
Resp_Age1_Boxplot_hightemp <- ggplot(data=Resp_age1_hightemp,
aes(x=as.factor(Aragonite_saturation),
#aes(x=meanAragonite,
y=resp_ng_L_indiv_hr,
fill=pCO2_Salinity)) +
geom_boxplot()+
geom_jitter(width = 0.1)+
scale_fill_manual(values=c("skyblue2", "darkorange3","royalblue3", "orange2"))+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(title = "Age =24 hours; Respiration rates",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%indiv^{-1}%.% hr^{-1}~")"),
x = "Aragonite saturation") +
theme(axis.title.y = element_text(size = rel(1.3), angle =90), axis.title.x = element_text(size = rel(1.3), angle = 0))+
theme(axis.text=element_text(size=12))
Resp_Age1_Boxplot_hightemp
Resp.blanks.merge <- merge(resp.data_merged, blanks_total, by=c("Date", "Notes")) %>% # NOTE: this repeats for every distinct length value
dplyr::filter(!Chamber_tank =='blank') %>%
dplyr::filter(!Lpc > 1) %>% # onlynegative raw lpc values from LoLinR represent oxygen depletion - positive values are errors
dplyr::mutate(resp_norm = abs(Lpc) - BLANK.mean.Lpc)   #  Lpc is still raw data (take abs) then resp - blank,
Resp.blanks.merge
Resp.blanks.merge <- merge(resp.data_merged, blanks_total, by=c("Date", "Notes")) %>% # NOTE: this repeats for every distinct length value
dplyr::filter(!Chamber_tank =='blank') %>%
dplyr::filter(!Lpc > 0) %>% # onlynegative raw lpc values from LoLinR represent oxygen depletion - positive values are errors
dplyr::mutate(resp_norm = abs(Lpc) - BLANK.mean.Lpc)   #  Lpc is still raw data (take abs) then resp - blank,
Resp.blanks.merge_OM <- Resp.blanks.merge %>% dplyr::filter(resp_norm > 0)  # omits respiration rate values LESS than the blank (resp_norm < 0)
Resp.outliers        <- Resp.blanks.merge %>% dplyr::filter(resp_norm < 0)  # 14 total samples lower than the blank
print(c("number of blank resp > sample resp =",nrow(Resp.outliers)))
count_check_all <- Resp.blanks.merge_OM %>% dplyr::group_by(Date,TempCarbSal) %>% dplyr::summarise(n = n())
knitr::kable(count_check_all)
vial.vol <- 0.08 # milliliters (ml)
Resp.Master <- merge(Resp.blanks.merge_OM[,c(1,3,5,9:14,18)], counts_resp[,c(1,6:7)], by = c('Date','Chamber_tank'))
Resp.Master$resp_ng_L_indiv_hr <- (
( ( (abs(Resp.Master$resp_norm)*1000000) * # call absolute value of resp in mg per minute - convert to ng min-1
(vial.vol/1000) ) / # correct ng minute-1 to ng liter-1 by multiplying by the resp vial in liters
Resp.Master$Counts ) * # normalize by individual or larvae count - as to ng L-1 individual-1
(60)) # correct for the time; final value is ng Liter-1 individual-1 hour-1
# mean sd rates
# mean(Resp.Master$resp_ng_L_indiv_hr) # mean = 0.4994656
# sd(Resp.Master$resp_ng_L_indiv_hr) # sd= 0.8197345
Resp.Master[,c(1:3,12)]
# a.
Resp_age1_hightemp <- Resp.Master %>%
dplyr::filter(Date %in% '4/30/2021')  %>%
dplyr::filter(Temp %in% 'H') %>%
dplyr::mutate(Treatment = as.character(paste('OA.', pCO2, '_Sal.',Salinity, sep = ''))) %>%
dplyr::mutate(pCO2_Salinity = as.character(substr(TempCarbSal, 2, 3)))
# b.
Resp_age1_hightemp <- merge(Resp_age1_hightemp, aragonite_dat, by = 'TempCarbSal') # merge with the mean aragonite saturation state
## Plot geeom boxlot with jitter
Resp_Age1_Boxplot_hightemp <- ggplot(data=Resp_age1_hightemp,
aes(x=as.factor(Aragonite_saturation),
#aes(x=meanAragonite,
y=resp_ng_L_indiv_hr,
fill=pCO2_Salinity)) +
geom_boxplot()+
geom_jitter(width = 0.1)+
scale_fill_manual(values=c("skyblue2", "darkorange3","royalblue3", "orange2"))+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(title = "Age =24 hours; Respiration rates",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%indiv^{-1}%.% hr^{-1}~")"),
x = "Aragonite saturation") +
theme(axis.title.y = element_text(size = rel(1.3), angle =90), axis.title.x = element_text(size = rel(1.3), angle = 0))+
theme(axis.text=element_text(size=12))
Resp_Age1_Boxplot_hightemp
Resp.blanks.merge_OM
LMmod.age1_hightemp   <- aov(lm( log(resp_ng_L_indiv_hr)~pCO2*Salinity,data=Resp_age1_hightemp))
print('LM model  == aov( lm ( resp_ng_L_indiv_hr ~ pCO2 * Salinity, data = Resp_APRIL ) )')
pander(anova(LMmod.age1_hightemp), style='rmarkdown') # anova table of lmer
# a.
Resp_age8 <- Resp.Master %>%
dplyr::filter(Date %in% '5/7/2021') %>%
dplyr::mutate(Treatment = as.character(paste('Temp.', Temp, '_OA.', pCO2, '_Sal.',Salinity, sep = ''))) %>%
dplyr::mutate(pCO2_Salinity = as.character(substr(TempCarbSal, 2, 3))) %>%
dplyr::mutate(Temp = (fct_relevel(Temp, c('L','H'))))
# b.
Resp_age8 <- merge(Resp_age8, aragonite_dat, by = 'TempCarbSal') # merge with the mean aragonite saturation state
## Plot geeom boxlot with jitter
Resp_Age8_Boxplot <- ggplot(data=Resp_age8,
aes(x=as.factor(Aragonite_saturation),
#aes(x=meanAragonite,
y=resp_ng_L_indiv_hr,
fill=pCO2_Salinity)) +
geom_boxplot()+
geom_jitter(width = 0.1)+
scale_fill_manual(values=c("skyblue2", "darkorange3","royalblue3", "orange2"))+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(title = "Age = 8 days; Respiration rates",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%indiv^{-1}%.% hr^{-1}~")"),
x = "Aragonite saturation") +
theme(axis.title.y = element_text(size = rel(1.3), angle =90), axis.title.x = element_text(size = rel(1.3), angle = 0))+
theme(axis.text=element_text(size=12)) +
facet_wrap(~Temp )
Resp_Age8_Boxplot
library(dplyr)          # Version 0.7.6, Packaged: 2018-06-27, Depends: R (>= 3.1.2)Imports: assertthat (>= 0.2.0), bindrcpp (>= 0.2.0.9000), glue (>=1.1.1), magrittr (>= 1.5), methods, pkgconfig (>= 2.0.1), R6(>= 2.2.2), Rcpp (>= 0.12.15), rlang (>= 0.2.0), tibble (>=1.3.1), tidyselect (>= 0.2.3), utils
library(ggplot2)        # Version 2.2.1, Packaged: 2016-12-30, Depends: R (>= 3.1)Imports: digest, grid, gtable (>= 0.1.1), MASS, plyr (>= 1.7.1),reshape2, scales (>= 0.4.1), stats, tibble, lazyeval
library(tidyr)
library(ggpubr)
library(car)
library(gridExtra)
setwd("C:/Users/samjg/Documents/My_Projects/Pgenerosa_histology/RAnalysis/Data") #set working
library(dplyr)          # Version 0.7.6, Packaged: 2018-06-27, Depends: R (>= 3.1.2)Imports: assertthat (>= 0.2.0), bindrcpp (>= 0.2.0.9000), glue (>=1.1.1), magrittr (>= 1.5), methods, pkgconfig (>= 2.0.1), R6(>= 2.2.2), Rcpp (>= 0.12.15), rlang (>= 0.2.0), tibble (>=1.3.1), tidyselect (>= 0.2.3), utils
library(ggplot2)        # Version 2.2.1, Packaged: 2016-12-30, Depends: R (>= 3.1)Imports: digest, grid, gtable (>= 0.1.1), MASS, plyr (>= 1.7.1),reshape2, scales (>= 0.4.1), stats, tibble, lazyeval
library(tidyr)
library(ggpubr)
library(car)
library(gridExtra)
setwd("C:/Users/samjg/Documents/My_Projects/Pgenerosa_histology/RAnalysis/Data") #set working
setwd("C:/Users/samjg/Documents/Github_repositories/GitPgenerosa_histology/RAnalysis/Data") #set working
