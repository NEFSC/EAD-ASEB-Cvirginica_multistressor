theme(panel.border = element_blank(), # Set border
panel.grid.major = element_blank(), #Set major gridlines
panel.grid.minor = element_blank(), #Set minor gridlines
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) + #Set the plot background #set title attributes
coord_flip() +
facet_wrap(modColor ~.,
scales="free_y",
ncol= 1,
strip.position="right",
shrink = T)
Day22_KEGGSegmentPlot
D22_RichFactor_Plots <- KEGG.Day22OM %>%
dplyr::filter(modColor %in% c('blue', 'turquoise', 'red',  'salmon', 'green', 'tan')) %>%
dplyr::mutate(modColor = factor(modColor , levels = c('blue', 'turquoise', 'red',  'salmon', 'green', 'tan'))) %>%
dplyr::mutate(pathway.name = as.character(reorder_within(pathway.name, Rich_factor, modColor))) %>%
dplyr::mutate(pathway.name = sapply(strsplit(pathway.name, "_"), "[",1)) %>%
ggplot(aes(x=reorder(pathway.name, Rich_factor), y= Rich_factor)) +
geom_point( aes(col=log10_pvalue, size=as.numeric(Num.genes.exp))) +   # Draw points
scale_colour_gradient(low = "#D55E00", high = "#56B4E9", limits = c(0,30)) +
geom_segment(aes(x=pathway.name,
xend=pathway.name,
y=min(Rich_factor),
yend=max(Rich_factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="KEGG pathway enrichment analysis",
x = "Pathway",
y = "Rich Factor",
subtitle="day 22 WGCNA") +
theme_bw() +
coord_flip() +
facet_wrap(~modColor,scales="free_y")
D22_RichFactor_Plots
KEGG.Day22OM
KEGG.Day22OM <- na.omit(KEGG.Day22) %>%
dplyr::arrange()
D22_RichFactor_Plots <- KEGG.Day22OM %>%
dplyr::filter(modColor %in% c('blue', 'turquoise', 'red',  'salmon', 'green', 'tan')) %>%
dplyr::mutate(modColor = factor(modColor , levels = c('blue', 'turquoise', 'red',  'salmon', 'green', 'tan'))) %>%
dplyr::mutate(pathway.name = as.character(reorder_within(pathway.name, Rich_factor, modColor))) %>%
dplyr::mutate(pathway.name = sapply(strsplit(pathway.name, "_"), "[",1)) %>%
ggplot(aes(x=reorder(pathway.name, Rich_factor), y= Rich_factor)) +
geom_point( aes(col=log10_pvalue, size=as.numeric(Num.genes.exp))) +   # Draw points
scale_colour_gradient(low = "#D55E00", high = "#56B4E9", limits = c(0,30)) +
geom_segment(aes(x=pathway.name,
xend=pathway.name,
y=min(Rich_factor),
yend=max(Rich_factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="KEGG pathway enrichment analysis",
x = "Pathway",
y = "Rich Factor",
subtitle="day 22 WGCNA") +
theme_bw() +
coord_flip() +
facet_wrap(~modColor,scales="free_y")
D22_RichFactor_Plots
KEGG.Day22OM
D22_RichFactor_Plots <- KEGG.Day22OM %>%
dplyr::filter(Num.genes.exp > 1) %>%
dplyr::filter(modColor %in% c('blue', 'turquoise', 'red',  'salmon', 'green', 'tan')) %>%
dplyr::mutate(modColor = factor(modColor , levels = c('blue', 'turquoise', 'red',  'salmon', 'green', 'tan'))) %>%
dplyr::mutate(pathway.name = as.character(reorder_within(pathway.name, Rich_factor, modColor))) %>%
dplyr::mutate(pathway.name = sapply(strsplit(pathway.name, "_"), "[",1)) %>%
ggplot(aes(x=reorder(pathway.name, Rich_factor), y= Rich_factor)) +
geom_point( aes(col=log10_pvalue, size=as.numeric(Num.genes.exp))) +   # Draw points
scale_colour_gradient(low = "#D55E00", high = "#56B4E9", limits = c(0,30)) +
geom_segment(aes(x=pathway.name,
xend=pathway.name,
y=min(Rich_factor),
yend=max(Rich_factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="KEGG pathway enrichment analysis",
x = "Pathway",
y = "Rich Factor",
subtitle="day 22 WGCNA") +
theme_bw() +
coord_flip() +
facet_wrap(~modColor,scales="free_y")
D22_RichFactor_Plots
library(ggplot2)
library(dplyr)
library(tidyverse)
library(multcompView)
library(dplyr)
library(lme4)
library(ggplot2)
library(nlme)
library(car)
library(performance)
library(emmeans)
library(pander)
library(survival)
library(MASS)
library(vegan)
library(tidyverse)
# sets the working directory for the entire R markdown file - no need to reload the wd
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis")
# EXPERIMENT METADATA
Exp_data <-  read.csv("Data/Survival/Survival_master.csv", header = T) %>%
filter(Day %in% 1) %>%
dplyr::select(c('Temp','OA','Salinity','Replicate','Id.', 'pH', 'AR')) %>%
dplyr::rename(Sample.ID = Id., Aragonite_saturation = AR)
#  LENGTH DATA - call it and add columns to merge
# day 1 - length data
raw_length_dat_Age1    <- read.csv("Data/Length/workbook/timepoint_1_Day1.csv", header = T,nrows=50) %>%
dplyr::mutate(Age = 1) %>%
dplyr::mutate(stage = 1)
# day 1 - length data
raw_length_dat_Age4    <- read.csv("Data/Length/workbook/timepoint_2_Day4.csv", header = T) %>%
dplyr::mutate(Age = 4) %>%
dplyr::mutate(stage = 1)
# day 8 - length data
raw_length_dat_Age8_1  <- read.csv("Data/Length/workbook/timepoint_3_Day8.csv", header = T) %>%
dplyr::mutate(Age = 8) %>%
dplyr::mutate(stage = 1)
raw_length_dat_Age8_2  <- read.csv("Data/Length/workbook/timepoint_3_Day8_additional_lengths.csv", header = T) %>%
dplyr::mutate(Age = 8) %>%
dplyr::mutate(stage = 1)
rbind(raw_length_dat_Age8_1,raw_length_dat_Age8_2)
# day 11 - length data
raw_length_dat_Age11   <- read.csv("Data/Length/workbook/timepoint_4_Day11.csv", header = T) %>%
dplyr::mutate(Age = 11) %>%
dplyr::mutate(stage = 1)
# day 15 - length data
raw_length_dat_Age15   <- read.csv("Data/Length/workbook/timepoint_5_Day15.csv", header = T) %>%
dplyr::select(-X) %>%
dplyr::mutate(Age = 15) %>%
dplyr::mutate(stage = 1)
raw_length_dat_Age19   <- read.csv("Data/Length/workbook/timepoint_6_Day19.csv", header = T) %>%
dplyr::mutate(Age = 19) %>%
dplyr::mutate(stage = 1)
raw_length_dat_Age22_larvae   <- read.csv("Data/Length/workbook/timepoint_7_Day22_larvae.csv", header = T) %>%
dplyr::mutate(Age = 22) %>%
dplyr::mutate(stage = 1)
raw_length_dat_Age22_spat   <- read.csv("Data/Length/workbook/timepoint_7_Day22_spat.csv", header = T) %>%
dplyr::mutate(Age = 22) %>%
dplyr::mutate(stage = 2)
Masterlengthdata    <- as.data.frame(rbind(sapply(raw_length_dat_Age1, as.numeric),
sapply(raw_length_dat_Age4, as.numeric),
sapply(raw_length_dat_Age8_1, as.numeric),
sapply(raw_length_dat_Age8_2, as.numeric),
sapply(raw_length_dat_Age11, as.numeric),
sapply(raw_length_dat_Age15, as.numeric),
sapply(raw_length_dat_Age19, as.numeric),
sapply(raw_length_dat_Age22_larvae, as.numeric),
sapply(raw_length_dat_Age22_spat, as.numeric))) %>%
dplyr::mutate(stage = case_when(stage == 1 ~ 'larvae',
stage == 2 ~ 'spat'))
# Age 1
raw_length_Age1MELT <-  reshape2::melt((as.data.frame(Masterlengthdata) %>%
dplyr::filter(Age == 1))) %>%
na.omit %>%
dplyr::rename(length_um = value , Sample.ID =variable) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age1_raw_length      <- merge(raw_length_Age1MELT, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact =
paste( substr(Temp,1,1),
substr(OA,1,1),
substr(Salinity,1,1), '_', Replicate, sep = '')) %>%
dplyr::mutate(Age = 1)
# Age 4
raw_length_Age4MELT <-  reshape2::melt((as.data.frame(Masterlengthdata) %>% dplyr::filter(Age == 4))) %>%
na.omit %>%
dplyr::rename(length_um = value , Sample.ID =variable) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age4_raw_length      <- merge(raw_length_Age4MELT, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact =
paste( substr(Temp,1,1),
substr(OA,1,1),
substr(Salinity,1,1), '_', Replicate, sep = '')) %>%
dplyr::mutate(Age = 4)
# Age 8
raw_length_Age8MELT <-  reshape2::melt((as.data.frame(Masterlengthdata) %>% dplyr::filter(Age == 8))) %>%
na.omit %>%
dplyr::rename(length_um = value , Sample.ID =variable) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age8_raw_length      <- merge(raw_length_Age8MELT, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact =
paste( substr(Temp,1,1),
substr(OA,1,1),
substr(Salinity,1,1), '_', Replicate, sep = '')) %>%
dplyr::mutate(Age = 8)
# Age 11
raw_length_Age11MELT <-  reshape2::melt((as.data.frame(Masterlengthdata) %>% dplyr::filter(Age == 11))) %>%
na.omit %>%
dplyr::rename(length_um = value , Sample.ID =variable) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age11_raw_length      <- merge(raw_length_Age11MELT, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact =
paste( substr(Temp,1,1),
substr(OA,1,1),
substr(Salinity,1,1), '_', Replicate, sep = '')) %>%
dplyr::mutate(Age = 11)
# Age 15
raw_length_Age15MELT <- reshape2::melt((as.data.frame(Masterlengthdata) %>%
dplyr::filter(Age == 15))) %>%
na.omit %>%
dplyr::rename(length_um = value , Sample.ID =variable) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age15_raw_length      <- merge(raw_length_Age15MELT, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact =
paste( substr(Temp,1,1),
substr(OA,1,1),
substr(Salinity,1,1), '_', Replicate, sep = '')) %>%
dplyr::mutate(Age = 15)
# Age 19
raw_length_Age19MELT <- reshape2::melt((as.data.frame(Masterlengthdata) %>%
dplyr::filter(Age == 19))) %>%
na.omit %>%
dplyr::rename(length_um = value , Sample.ID =variable) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age19_raw_length      <- merge(raw_length_Age19MELT, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact = paste( substr(Temp,1,1),
substr(OA,1,1),
substr(Salinity,1,1), '_', Replicate, sep = '')) %>%
dplyr::mutate(Age = 19)
# Age 22
raw_length_Age22MELT_larvae  <- reshape2::melt((as.data.frame(Masterlengthdata) %>%
dplyr::filter(Age == 22 & stage == 'larvae'))) %>%
na.omit %>%
dplyr::rename(length_um = value , Sample.ID =variable) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age22_raw_length_larvae   <- merge(raw_length_Age22MELT_larvae, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact = paste( substr(Temp,1,1),
substr(OA,1,1),
substr(Salinity,1,1), '_', Replicate, sep = '')) %>%
dplyr::mutate(Age = 22)
raw_length_Age22MELT_spat  <- reshape2::melt((as.data.frame(Masterlengthdata) %>%
dplyr::filter(Age == 22 & stage == 'spat'))) %>%
na.omit %>%
dplyr::rename(length_um = value , Sample.ID =variable) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age22_raw_length_spat      <- merge(raw_length_Age22MELT_spat, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact =
paste( substr(Temp,1,1),
substr(OA,1,1),
substr(Salinity,1,1), '_',
Replicate, sep = '')) %>%
dplyr::mutate(Age = 22)
Master_Lengths <- rbind(Age1_raw_length,
Age4_raw_length,
Age8_raw_length,
Age11_raw_length,
Age15_raw_length,
Age19_raw_length,
Age22_raw_length_larvae,
Age22_raw_length_spat)
Master_Lengths
# lets look at the replication
Master_Lengths %>% group_by(Age, Temp, OA, Salinity, Replicate) %>% summarise( n = n())
# lets look at the replication
RepSumm <- Master_Lengths %>% group_by(Age, Temp, OA, Salinity, Replicate) %>% summarise( n = n())
RepSumm
RepSumm  %>% group_by(Age, Temp, OA, Salinity) %>% summarise(mean = mean(n), sd = sd(n))
View(RepSumm  %>% group_by(Age, Temp, OA, Salinity) %>% summarise(mean = mean(n), sd = sd(n)))
RepSumm
View(RepSumm %>% group_by(Age) %>% summarise(mean = mean(n), sd = sd(n)))
# load libraries - notes show the install command needed to install (pre installed)
library(goseq)
library(dplyr)
library(forcats)
library(ggplot2)
library(gridExtra)
library(tidyr)
library(grDevices)
library(reshape2)
library(Rmisc)
library(ggpubr)
library(tibble)
library(hrbrthemes)
library(gridExtra)
library(tidyr)
library(zoo)
library(ComplexHeatmap)
library(circlize)
library(GSEABase)
library(data.table)
library(stringr)
# SET WORKING DIRECTORY
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis") # sets the working
Day0_ModuleMembership  <- read.csv(file="Output/Day0/Day0.WGCNA_ModulMembership.csv", sep=',', header=TRUE) %>%
dplyr::select(c('X','GO.terms', 'KEGG_ID', 'geneSymbol', 'Protein_name','moduleColor')) %>%
na.omit() %>%
dplyr::rename(Cvirginica_GeneID = 'X') %>%
dplyr::mutate(Day = "Day0")
# SET WORKING DIRECTORY
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis") # sets the working
Day0_ModuleMembership  <- read.csv(file="Output/Day0/Day0.WGCNA_ModulMembership.csv", sep=',', header=TRUE) %>%
dplyr::select(c('X','GO.terms', 'KEGG_ID', 'geneSymbol', 'Protein_name','moduleColor')) %>%
na.omit() %>%
dplyr::rename(Cvirginica_GeneID = 'X') %>%
dplyr::mutate(Day = "Day0")
Day0_ModuleMembership  <- read.csv(file="Output/Day0/Day0.WGCNA_ModulMembership.csv", sep=',', header=TRUE) %>%
dplyr::select(c('X','GO.terms', 'KEGG_ID', 'geneSymbol', 'Protein_name','moduleColor')) %>%
na.omit() %>%
dplyr::rename(Cvirginica_GeneID = 'X') %>%
dplyr::mutate(Day = "Day0")
Day1_ModuleMembership  <- read.csv(file="Output/Day1/Day1.WGCNA_ModulMembership.csv", sep=',', header=TRUE) %>%
dplyr::select(c('X','GO.terms', 'KEGG_ID', 'geneSymbol', 'Protein_name','moduleColor')) %>%
na.omit() %>%
dplyr::rename(Cvirginica_GeneID = 'X') %>%
dplyr::mutate(Day = "Day1")
# SET WORKING DIRECTORY
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Larval_Starvation_HPL/RAnalysis") # sets the working
Day0_ModuleMembership  <- read.csv(file="Output/Day0/Day0.WGCNA_ModulMembership.csv", sep=',', header=TRUE) %>%
dplyr::select(c('X','GO.terms', 'KEGG_ID', 'geneSymbol', 'Protein_name','moduleColor')) %>%
na.omit() %>%
dplyr::rename(Cvirginica_GeneID = 'X') %>%
dplyr::mutate(Day = "Day0")
Day1_ModuleMembership  <- read.csv(file="Output/Day1/Day1.WGCNA_ModulMembership.csv", sep=',', header=TRUE) %>%
dplyr::select(c('X','GO.terms', 'KEGG_ID', 'geneSymbol', 'Protein_name','moduleColor')) %>%
na.omit() %>%
dplyr::rename(Cvirginica_GeneID = 'X') %>%
dplyr::mutate(Day = "Day1")
# filter the master file of the first timepoint
Starved_HighExp_T1 <- Day0_ModuleMembership %>% dplyr::filter(moduleColor %in% 'blue')
Starved_LowExp_T1  <- Day0_ModuleMembership %>% dplyr::filter(moduleColor %in% 'turquoise')
Starved_HighExp_ID <- Starved_HighExp_T1[,1]
length(Starved_HighExp_ID) # 4544 - number of genes! damn thats a lot..
Starved_LowExp_ID  <- Starved_LowExp_T1[,1]
length(Starved_LowExp_ID) # 5236 - number of genes! damn thats a lot..
# use these geneIDs to filter the subseqent timepoint - quanitfy the number of genes and which models they are in
Starved_HighExp_T2 <-  Day1_ModuleMembership %>% dplyr::filter(Cvirginica_GeneID %in% Starved_HighExp_T1$Cvirginica_GeneID)
nrow(Starved_HighExp_T1) - nrow(Starved_HighExp_T2) # 632 are not present in the WGCNA data for the subseqent timepoint
100 - (  ((nrow(Starved_HighExp_T1) - nrow(Starved_HighExp_T2)) / nrow(Starved_HighExp_T1) )*100 ) # 86.09155 found in T2!
Starved_LowExp_T2 <-  Day1_ModuleMembership %>% dplyr::filter(Cvirginica_GeneID %in% Starved_LowExp_T1$Cvirginica_GeneID)
nrow(Starved_LowExp_T1) - nrow(Starved_LowExp_T2) # 143 are not present in the WGCNA data for the subseqent timepoint
100 - (  ((nrow(Starved_LowExp_T1) - nrow(Starved_LowExp_T2)) / nrow(Starved_LowExp_T1) )*100 ) # 97.26891 found in T2!
# First, how many genes were in these modules in T2 ('Day1') to start?
T2_summary <- as.data.frame(
Day1_ModuleMembership %>% dplyr::select(moduleColor ,Cvirginica_GeneID) %>%
na.omit() %>%
dplyr::group_by(moduleColor) %>%
dplyr::summarise(n= n())  )
# High Expression starved - overlay into the T2_summary to see where these genes are expressed!
T2_StarvationHighExp <- as.data.frame(
Starved_HighExp_T2 %>% dplyr::select(moduleColor, Cvirginica_GeneID) %>%
na.omit() %>%
dplyr::group_by(moduleColor) %>%
dplyr::summarise(n_HighExp_Starved= n())  )
Starvation_HighExp_Prop_T2 <- merge(T2_summary, T2_StarvationHighExp, by ="moduleColor") %>% dplyr::mutate(Percent_HighExpStarved = (n_HighExp_Starved / (n+n_HighExp_Starved))*100 )
Starvation_HighExp_Prop_T2
# High Expression starved - overlay into the T2_summary to see where these genes are expressed!
T2_StarvationLowExp <- as.data.frame(
Starved_LowExp_T2 %>% dplyr::select(moduleColor, Cvirginica_GeneID) %>%
na.omit() %>%
dplyr::group_by(moduleColor) %>%
dplyr::summarise(n_LowExp_Starved= n())  )
Starvation_LowExp_Prop_T2 <- merge(T2_summary, T2_StarvationLowExp, by ="moduleColor") %>% dplyr::mutate(Percent_LowExpStarved = (n_LowExp_Starved / (n+n_LowExp_Starved))*100 )
Starvation_LowExp_Prop_T2
Starved_LowExp_T1  <- Day0_ModuleMembership %>% dplyr::filter(moduleColor %in% 'turquoise')
# filter the master file of the first timepoint
Starved_HighExp_T2 <- Day1_ModuleMembership %>% dplyr::filter(moduleColor %in% 'blue')
Starved_HighExp_ID_T2 <- Starved_HighExp_T2[,1]
length(Starved_HighExp_T2) # 4544 - number of genes! damn thats a lot..
Starved_HighExp_ID_T2 <- Starved_HighExp_T2[,1]
Starved_HighExp_ID_T2
length(Starved_HighExp_T2) # 4544 - number of genes! damn thats a lot..
Starved_HighExp_T2
Starved_HighExp_T2
# use these geneIDs to filter the subseqent timepoint - quanitfy the number of genes and which models they are in
Overlap <-  Day0_ModuleMembership %>% dplyr::filter(Cvirginica_GeneID %in% Starved_HighExp_ID_T2$Cvirginica_GeneID)
# load libraries - notes show the install command needed to install (pre installed)
library(goseq)
library(dplyr)
library(forcats)
library(ggplot2)
library(gridExtra)
library(tidyr)
library(grDevices)
library(reshape2)
library(Rmisc)
library(ggpubr)
library(tibble)
library(hrbrthemes)
library(gridExtra)
library(tidyr)
library(zoo)
library(ComplexHeatmap)
library(circlize)
library(GSEABase)
library(data.table)
library(stringr)
# SET WORKING DIRECTORY
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Larval_Starvation_HPL/RAnalysis") # sets the working
Day0_ModuleMembership  <- read.csv(file="Output/Day0/Day0.WGCNA_ModulMembership.csv", sep=',', header=TRUE)
Day0_ModuleMembership %>% group_by(moduleColor) %>% dplyr::summarise(n=n())
# black	353
# blue	4734
# brown	978
# green	534
# red	394
# turquoise	5510
# yellow	593
Day0_ModuleMembership_condenced  <- read.csv(file="Output/Day0/Day0.WGCNA_ModulMembership.csv", sep=',', header=TRUE) %>%
dplyr::select(c('X','GO.terms', 'KEGG_ID', 'geneSymbol', 'Protein_name','moduleColor')) %>%
na.omit() %>%
dplyr::rename(Cvirginica_GeneID = 'X') %>%
dplyr::mutate(Day = "Day0")
d0ModCols              <- data.frame(moduleColor = unique(Day0_ModuleMembership$moduleColor)) %>% # unique module colors
dplyr::mutate(Day = "Day0")
Day1_ModuleMembership  <- read.csv(file="Output/Day1/Day1.WGCNA_ModulMembership.csv", sep=',', header=TRUE)
Day1_ModuleMembership %>% group_by(moduleColor) %>% dplyr::summarise(n=n())
# black	1257
# blue	2208
# brown	3822
# cyan	274
# green	1333
# greenyellow	1928
# magenta	1282
# salmon	452
Day1_ModuleMembership_condenced  <- read.csv(file="Output/Day1/Day1.WGCNA_ModulMembership.csv", sep=',', header=TRUE) %>%
dplyr::select(c('X','GO.terms', 'KEGG_ID', 'geneSymbol', 'Protein_name','moduleColor')) %>%
na.omit() %>%
dplyr::rename(Cvirginica_GeneID = 'X') %>%
dplyr::mutate(Day = "Day1")
d1ModCols              <- data.frame(moduleColor = unique(Day1_ModuleMembership$moduleColor)) %>% # unique module colors
dplyr::mutate(Day = "Day1")
WGCNA_MasterModData   <-  merge( (as.data.frame(rbind(Day0_ModuleMembership_condenced,
Day1_ModuleMembership_condenced))),
Master_ref, by="Cvirginica_GeneID")
WGCNA_MasterModData   <-  merge( (as.data.frame(rbind(Day0_ModuleMembership_condenced,
Day1_ModuleMembership_condenced))),
Master_ref, by="Cvirginica_GeneID")
# Annotation file - acheived with diamond against the Cvirginica genome - Airradians genome is unannotated!
GOEnrichment_reference <- read.csv(file="Data/Seq_Reference_Master.csv", sep=',', header=TRUE)
# master WGCNA module data for for loops!
Master_ref  <- read.csv(file= "Data/Seq_Reference_Master.csv", sep=',', header=TRUE) %>%
dplyr::select(c('Cvirginica_GeneID','Annotation_GO_ID', 'Cvirginica_length'))
# GOslim
slim <- getOBOCollection("http://current.geneontology.org/ontology/subsets/goslim_generic.obo") #get GO database - # call goslim_generic.obo terms as 'slim'
Day1_ModuleMembership_condenced  <- read.csv(file="Output/Day1/Day1.WGCNA_ModulMembership.csv", sep=',', header=TRUE) %>%
dplyr::select(c('X','GO.terms', 'KEGG_ID', 'geneSymbol', 'Protein_name','moduleColor')) %>%
na.omit() %>%
dplyr::rename(Cvirginica_GeneID = 'X') %>%
dplyr::mutate(Day = "Day1")
d1ModCols              <- data.frame(moduleColor = unique(Day1_ModuleMembership$moduleColor)) %>% # unique module colors
dplyr::mutate(Day = "Day1")
WGCNA_MasterModData   <-  merge( (as.data.frame(rbind(Day0_ModuleMembership_condenced,
Day1_ModuleMembership_condenced))),
Master_ref, by="Cvirginica_GeneID")
WGCNA_ColorList        <-  rbind(d0ModCols, d1ModCols) # master WGCNA color list - use this to loop all the analysis
# master WGCNA module data for for loops!
Master_ref  <- read.csv(file= "Data/Seq_Reference_Master.csv", sep=',', header=TRUE) %>%
dplyr::select(c('Cvirginica_GeneID','Annotation_GO_ID', 'Cvirginica_length'))
# GO.term
Cvrig_GOterms                <- as.data.frame(GOEnrichment_reference) %>% dplyr::select(c('Cvirginica_GeneID','Annotation_GO_ID'))
colnames(Cvrig_GOterms)[1:2] <- c('transcript.ID', 'GO.terms') # call gene name and the GO terms - (Uniprot ID 'V5')
splitted                        <- strsplit(as.character(Cvrig_GOterms$GO.terms), ";") #slit into multiple GO ids by delimiter'; ' remember the space after ; is needed here! without this you will only call the first listed GO term for each gene!
GO.terms                        <- data.frame(v1 = rep.int(Cvrig_GOterms$transcript.ID, sapply(splitted, length)),
v2 = unlist(splitted)) #list all genes with each of their GO terms in a single row
# Gene length
GO_gene.length           <- unique(GOEnrichment_reference %>% dplyr::select(c("Cvirginica_GeneID","Cvirginica_length")))
names(GO_gene.length)[1] <- "gene.ID" # cange the column name to merge with the gene counts on each day to call ID and length vectors UNIQUE to the experiment day
length_vector            <- GO_gene.length$Cvirginica_length
# Unique genes
GO_unique.genes.all <- as.vector(unique(GOEnrichment_reference$Cvirginica_GeneID)) # call all unique genes for GO analysis (goseq)
Day0_WGCNA_sigmodules <- as.data.frame(c('turquoise',
'red',
'green',
'blue',
'yellow',
'brown',
'black'))
# prep loop for cumulative output table
df_total             <- data.frame() # start dataframe
GO.Day0              <- data.frame(matrix(nrow = 1, ncol = 9)) # create dataframe to save cumunalitively during for loop
colnames(GO.Day0)    <- c('Day', 'modColor', 'ontology', 'term',
'category', 'over_represented_pvalue' ,
'under_represented_pvalue', 'numDEInCat','numInCat') # names for comuns in the for loop
modColor         <- Day0_WGCNA_sigmodules[3,1]
modColor
for (i in 1:nrow(Day0_WGCNA_sigmodules)) {
modColor         <- Day0_WGCNA_sigmodules[3,1]
loopmodColor_cor <- paste("MM.", modColor, sep = '')
loopmodColor_p   <- paste("p.MM.", modColor, sep = '')
ModuleLoop       <- as.data.frame(Day0_ModuleMembership %>%
dplyr::filter(moduleColor %in% modColor)  %>%
dplyr::select(c('geneSymbol',
'GO.terms',
'geneSymbol',
'moduleColor',
loopmodColor_p,
loopmodColor_cor)))
#  merge to the genes list 'GO_unique.genes.all' to create a binary vector 0 = not in module; 1 = in module
ModLoop_boolean  <- as.integer(GO_unique.genes.all%in%(ModuleLoop$geneSymbol)) # Day 0 - Primary - Upregulated DEGs
names(ModLoop_boolean)=GO_unique.genes.all
# Calculate Probability Weighting Function
pwf              <- nullp(ModLoop_boolean,  id=GO_unique.genes.all, bias.data=length_vector) # weight vector by length of gene
# Run oseq
Run_goseq        <- goseq(pwf, GO_unique.genes.all, gene2cat=GO.terms,
test.cats=c("GO:CC", "GO:BP", "GO:MF"), method="Wallenius", use_genes_without_cat=TRUE)
#
Enrich.05                   <- Run_goseq$category[Run_goseq$over_represented_pvalue<.05]
Enrich.05_DF                <- data.frame(Enrich.05)
colnames(Enrich.05_DF)      <- c("category")
Enrich.05_DF_merge          <- merge(Enrich.05_DF, Run_goseq, by="category")
Enrich.05_DF_merge          <- Enrich.05_DF_merge[order(Enrich.05_DF_merge$ontology,
Enrich.05_DF_merge$over_represented_pvalue, -Enrich.05_DF_merge$numDEInCat),]
Enrich.05_DF_merge$term     <- as.factor(Enrich.05_DF_merge$term)
Enrich.05_DF_merge$modColor <- modColor
Enrich.05_DF_merge$Day      <- "Day0"
Enrich.05_DF_merge_filtered <- Enrich.05_DF_merge %>% filter(!(numDEInCat<2 & ontology == "BP"),
!(numDEInCat<2 & ontology == "MF"))
GO.Day0 <- rbind(GO.Day0,Enrich.05_DF_merge_filtered) #bind to a cumulative list dataframe
# print(GO.Day0) # print to monitor progress
}
GO.Day0
