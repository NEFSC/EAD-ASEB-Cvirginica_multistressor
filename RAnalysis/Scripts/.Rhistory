as.data.frame(read.delim2(file = "../Data/TagSeq/Seq_details/seq_id.txt",header=F)) %>%
dplyr::mutate(fullID = sub(".*>", "", V1)) %>%
dplyr::mutate(TranscriptID = sub("*.PREDICTED:", "", V1)) %>%
dplyr::mutate(Function = sub(".*PREDICTED: ", "", V1)) %>%
dplyr::mutate(GeneID = gsub("(?<=\\()[^()]*(?=\\))(*SKIP)(*F)|.", "", SeqIDs$V1, perl=T))
as.data.frame(read.delim2(file = "../Data/TagSeq/Seq_details/seq_id.txt",header=F)) %>%
dplyr::mutate(fullID = sub(".*>", "", V1)) %>%
dplyr::mutate(TranscriptID = sub("*.PREDICTED:", "", V1)) %>%
dplyr::mutate(Function = sub(".*PREDICTED: ", "", V1))
as.data.frame(read.delim2(file = "../Data/TagSeq/Seq_details/seq_id.txt",header=F)) %>%
dplyr::mutate(fullID = sub(".*>", "", V1)) %>%
dplyr::mutate(TranscriptID = sub("*.PREDICTED:", "", V1))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
# load seq_id.txt - contains all transcript IDs and putative functoinal annotation
SeqIDs <- as.data.frame(read.delim2(file = "../Data/TagSeq/Seq_details/seq_id.txt",header=F)) %>%
dplyr::mutate(fullID = sub(".*>", "", V1)) %>%
dplyr::mutate(TranscriptID = sub("*.PREDICTED:", "", fullID)) %>%
dplyr::mutate(Function = sub(".*PREDICTED: ", "", fullID)) %>%
dplyr::mutate(GeneID = gsub("(?<=\\()[^()]*(?=\\))(*SKIP)(*F)|.", "", SeqIDs$fullID, perl=T)) %>%
dplyr::select(!V1)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
# load seq_id.txt - contains all transcript IDs and putative functoinal annotation
SeqIDs <- as.data.frame(read.delim2(file = "../Data/TagSeq/Seq_details/seq_id.txt",header=F)) %>%
dplyr::mutate(fullID = sub(".*>", "", V1)) %>%
dplyr::mutate(TranscriptID = sub("*.PREDICTED:", "", fullID)) %>%
dplyr::mutate(Function = sub(".*PREDICTED: ", "", fullID)) %>%
dplyr::mutate(GeneID = gsub("(?<=\\()[^()]*(?=\\))(*SKIP)(*F)|.", "", fullID, perl=T)) %>%
dplyr::select(!V1)
View(SeqIDs)
s.data.frame(read.delim2(file = "../Data/TagSeq/Seq_details/seq_id.txt",header=F)) %>%
dplyr::mutate(fullID = sub(".*>", "", V1)) %>%
dplyr::mutate(TranscriptID = sub("*.PREDICTED:", "", fullID))
as.data.frame(read.delim2(file = "../Data/TagSeq/Seq_details/seq_id.txt",header=F)) %>%
dplyr::mutate(fullID = sub(".*>", "", V1)) %>%
dplyr::mutate(TranscriptID = sub("*.PREDICTED:", "", fullID))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
sub("*.PREDICTED:", "", SeqIDs$fullID)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
sub("*.PREDICTED", "", SeqIDs$fullID)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
sub("PREDICTED.*", "", SeqIDs$fullID)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
# load seq_id.txt - contains all transcript IDs and putative functoinal annotation
SeqIDs <- as.data.frame(read.delim2(file = "../Data/TagSeq/Seq_details/seq_id.txt",header=F)) %>%
dplyr::mutate(fullID = sub(".*>", "", V1)) %>%
dplyr::mutate(TranscriptID = sub("PREDICTED.*", "",fullID) ) %>%
dplyr::mutate(Function = sub(".*PREDICTED: ", "", fullID)) %>%
dplyr::mutate(GeneID = gsub("(?<=\\()[^()]*(?=\\))(*SKIP)(*F)|.", "", fullID, perl=T)) %>%
dplyr::select(!V1)
View(SeqIDs)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
# load seq_id.txt - contains all transcript IDs and putative functoinal annotation
SeqIDs <- as.data.frame(read.delim2(file = "../Data/TagSeq/Seq_details/seq_id.txt",header=F)) %>%
dplyr::mutate(fullID = sub(".*>", "", V1)) %>%
dplyr::mutate(TranscriptID = sub("PREDICTED.*", "",fullID) ) %>%
dplyr::mutate(Function = sub(".*PREDICTED: Crassostrea virginica", "", fullID)) %>%
dplyr::mutate(GeneID = gsub("(?<=\\()[^()]*(?=\\))(*SKIP)(*F)|.", "", fullID, perl=T)) %>%
dplyr::select(!V1)
View(SeqIDs)
View(SeqIDs)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
sub("(LOC?)", "",  SeqIDs$fullID)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
sub("^.*(LOC?)", "",  SeqIDs$fullID)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
sub("^.*(LOC?)*", "",  SeqIDs$fullID)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
sub("^.*(LOC?).", "",  SeqIDs$fullID)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
gsub("[\\(\\)]", "", regmatches(j, gregexpr("\\(.*?\\)", SeqIDs$fullID))[[1]])
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID, gregexpr("\\(.*?\\)", SeqIDs$fullID))[[1]])
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID, gregexpr("\\(.*?\\)", SeqIDs$fullID)))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
SeqIDs$fullID[1]
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings <- gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID, gregexpr("\\(.*?\\)", SeqIDs$fullID))[[46]])
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings <- as.dataframe(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID, gregexpr("\\(.*?\\)", SeqIDs$fullID))[[46]]))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID, gregexpr("\\(.*?\\)", SeqIDs$fullID))[[46]]))
parenthesis.strings
parenthesis.strings
parenthesis.strings <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID, gregexpr("\\(.*?\\)", SeqIDs$fullID))[[46]]))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings <- as.dataframe(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID, gregexpr("\\(.*?\\)", SeqIDs$fullID)))[[46]])
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings <- gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID, gregexpr("\\(.*?\\)", SeqIDs$fullID))[[46]])
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID, gregexpr("\\(.*?\\)", SeqIDs$fullID))  [[46]]) )
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings[1,]
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings[,1]
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
substr(parenthesis.strings,1,4) == 'LOC1'
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID, gregexpr("\\(.*?\\)", SeqIDs$fullID))[[46]]), header = T)
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID, gregexpr("\\(.*?\\)", SeqIDs$fullID))[[46]]), colnames = 'C1')
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID, gregexpr("\\(.*?\\)", SeqIDs$fullID))[[46]]))$C1
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
colnames(parenthesis.strings) <- "string"
colnames(parenthesis.strings)
parenthesis.strings <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID, gregexpr("\\(.*?\\)", SeqIDs$fullID))[[46]]))
colnames(parenthesis.strings)
colnames(parenthesis.strings) <- "string"
colnames(parenthesis.strings)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings %>%  filter(grepl('LOC1', player))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings %>%  filter(grepl('LOC1', string))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
# load seq_id.txt - contains all transcript IDs and putative functoinal annotation
SeqIDs <- as.data.frame(read.delim2(file = "../Data/TagSeq/Seq_details/seq_id.txt",header=F)) %>%
dplyr::mutate(fullID = sub(".*>", "", V1)) %>%
dplyr::mutate(TranscriptID = sub("PREDICTED.*", "",fullID) ) %>%
dplyr::mutate(Function = sub(".*PREDICTED: Crassostrea virginica", "", fullID)) %>%
dplyr::select(!V1)
for (i in 1:nrow(SeqIDs)) {
parenthesis.strings           <- gsub("[\\(\\)]", "", regmatches(fullID[1], gregexpr("\\(.*?\\)", fullID))[[i]])
parenthesis.strings           <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID, gregexpr("\\(.*?\\)", SeqIDs$fullID))[[i]])) %>%
colnames(parenthesis.strings) <- "string"
SeqIDs$GeneID[i]              <- parenthesis.strings %>% filter(grepl('LOC1', string))
}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
for (i in 1:nrow(SeqIDs)) {
parenthesis.strings           <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID, gregexpr("\\(.*?\\)", SeqIDs$fullID))[[i]])) %>%
colnames(parenthesis.strings) <- "string"
SeqIDs$GeneID[i]              <- parenthesis.strings %>% filter(grepl('LOC1', string))
}
SeqIDs$fullID
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
SeqIDs$fullID[1]
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[i], gregexpr("\\(.*?\\)", SeqIDs$fullID[i]))[[i]])) %>%
colnames(parenthesis.strings) <- "string"
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
for (i in 1:nrow(SeqIDs)) {
parenthesis.strings           <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[i], gregexpr("\\(.*?\\)", SeqIDs$fullID[i]))[[i]]))
colnames(parenthesis.strings) <- "string"
SeqIDs$GeneID[i]              <- parenthesis.strings %>% filter(grepl('LOC1', string))
}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[1], gregexpr("\\(.*?\\)", SeqIDs$fullID[1]))[[1]]))
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID, gregexpr("\\(.*?\\)", SeqIDs$fullID))))
parenthesis.strings
for (i in 1:nrow(SeqIDs)) {
parenthesis.strings           <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID, gregexpr("\\(.*?\\)", SeqIDs$fullID))))
colnames(parenthesis.strings) <- "string"
SeqIDs$GeneID[i]              <- parenthesis.strings %>% filter(grepl('LOC1', string))
}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
for (i in 1:nrow(SeqIDs)) {
parenthesis.strings           <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[i], gregexpr("\\(.*?\\)", SeqIDs$fullID[i]))))
colnames(parenthesis.strings) <- "string"
SeqIDs$GeneID[i]              <- parenthesis.strings %>% filter(grepl('LOC1', string))
}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[1], gregexpr("\\(.*?\\)", SeqIDs$fullID[1]))))
parenthesis.strings
colnames(parenthesis.strings) <- "string"
parenthesis.strings %>% filter(grepl('LOC1', string))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
as.data.frame(parenthesis.strings %>% filter(grepl('LOC1', string)))[1]
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
as.data.frame(parenthesis.strings %>% filter(grepl('LOC1', string)))[[1]]
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
SeqIDs$fullID[i]
parenthesis.strings           <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[i], gregexpr("\\(.*?\\)", SeqIDs$fullID[i]))))
colnames(parenthesis.strings) <- "string"
as.data.frame(parenthesis.strings %>% filter(grepl('LOC1', string)))[[1]]
# load seq_id.txt - contains all transcript IDs and putative functoinal annotation
SeqIDs <- as.data.frame(read.delim2(file = "../Data/TagSeq/Seq_details/seq_id.txt",header=F)) %>%
dplyr::mutate(fullID = sub(".*>", "", V1)) %>%
dplyr::mutate(TranscriptID = sub("PREDICTED.*", "",fullID) ) %>%
dplyr::mutate(Function = sub(".*PREDICTED: Crassostrea virginica", "", fullID)) %>%
dplyr::select(!V1)
for (i in 1:nrow(SeqIDs)) {
parenthesis.strings           <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[i], gregexpr("\\(.*?\\)", SeqIDs$fullID[i]))))
colnames(parenthesis.strings) <- "string"
SeqIDs$GeneID[i]              <- as.data.frame(parenthesis.strings %>% filter(grepl('LOC1', string)))[[1]]
}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
View(SeqIDs)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
nrow(list(SeqIDs$GeneID))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
length(list(SeqIDs$GeneID))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
length(list(unique(SeqIDs$GeneID)))
(unique(SeqIDs$GeneID)
unique(SeqIDs$GeneID)
(SeqIDs)
View(SeqIDs)
as.data.frame(parenthesis.strings %>% filter(grepl('LOC1', string)))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings %>% filter(grepl('LOC1', string))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings %>% filter(grepl('LOC1', string))[[1]]
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
# column 'GeneIDs' as the LOC... string between parenthesis () in each line 'fullID'
for (i in 1:nrow(SeqIDs)) {
parenthesis.strings           <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[i], gregexpr("\\(.*?\\)", SeqIDs$fullID[i]))))
colnames(parenthesis.strings) <- "string"
SeqIDs$GeneID[i]              <- parenthesis.strings %>% filter(grepl('LOC1', string))
}
View(SeqIDs)
parenthesis.strings %>% filter(grepl('LOC1', string))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
colnames(parenthesis.strings) <- "string"
parenthesis.strings
parenthesis.strings %>% filter(grepl('LOC1', string))
as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.data.frame(list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))))
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.table(list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.data.frame(list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))))
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))) %>% tidyr::unnest()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))) %>% tidyr::unnest(seq_along())
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
library(tidyr)
parenthesis.strings           <- list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))) %>% tidyr::unnest(seq_along())
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))) %>%  tidyr::unnest(seNames(seq_along())
colnames(parenthesis.strings) <- "string"
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))) %>%  tidyr::unnest(setNames(seq_along()))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
tidyr::unnest(setNames(parenthesis.strings,seq_along(parenthesis.strings)), Index)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
as.data.frame(parenthesis.strings)
parenthesis.strings           <- list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
as.data.frame(parenthesis.strings)
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
unnest(parenthesis.strings)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.factor(list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))))
unnest(parenthesis.strings)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
tidyr::unnest(parenthesis.strings)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.vector(list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))))
tidyr::unnest(parenthesis.strings)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
df_total                      <- data.frame()
df_total
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
df_total$strings              <- parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
df_total$parenthesis.strings  <- parenthesis.strings
parenthesis.strings           <- list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
parenthesis.strings
gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))
SeqIDs$fullID[46]
parenthesis.strings %>% filter(grepl('LOC1', string))
parenthesis.strings           <- as.data.frame(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
colnames(parenthesis.strings) <- "string"
parenthesis.strings %>% filter(grepl('LOC1', string))
gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
unnest(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- unnest(list((gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))))
tidyr::unnest(setNames(parenthesis.strings,seq_along(parenthesis.strings)), Index)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
unnest(list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- unchop(list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
df %>%
mutate(score = map_chr(parenthesis.strings))
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
df                            <- data.frame()
df %>%
mutate(score = map_chr(parenthesis.strings))
regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- list(regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.data.framelist(regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.data.frame(list(regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
colnames(parenthesis.strings) <- "string"
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.data.frame(list(regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
colnames(parenthesis.strings) <- "string"
parenthesis.strings
parenthesis.strings %>% filter(grepl('LOC1', string))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings %>% filter(grepl('LOC1', string)) %>% gsub("[\\(\\)]", "", string)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings %>% filter(grepl('LOC1', string)) %>% gsub("[\\(\\)]", "", 'string')
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings %>% filter(grepl('LOC1', string)) %>% gsub("[\\(\\)]", "")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings %>%
#filter(grepl('LOC1', string)) %>% \
gsub("[\\(\\)]", filter(grepl('LOC1', string)) )
colnames(parenthesis.strings) <- "string"
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings %>%
dplyr::filter(grepl('LOC1', string))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings %>%
#dplyr::filter(grepl('LOC1', string)) %>%
gsub("[\\(\\)]", "", dplyr::filter(grepl('LOC1', string)) )
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
gsub("[\\(\\)]", "", dplyr::filter(grepl('LOC1', parenthesis.strings$string)) )
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings %>%
dplyr::filter(grepl('LOC1', string))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.data.frame(list(regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))) %>%
dplyr::rename(1 = "string") %>%
as.data.frame(list(regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))) %>%
dplyr::rename(1 = "string")
as.data.frame(list(regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
as.data.frame(list(regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))) %>%
dplyr::rename(1 = "string")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.data.frame(list(regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))) %>%
dplyr::rename(1 = "string") #%>%
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.data.frame(list(regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))) %>%
dplyr::rename("string"=1) #%>%
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.data.frame(list(regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))) %>%
dplyr::rename("string"=1) %>% # rename the column for clarity
dplyr::filter(grepl('LOC1', string)) # call only the row containing LOC1
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings           <- as.data.frame(list(regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))) %>%
dplyr::rename("string"=1) %>% # rename the column for clarity
dplyr::filter(grepl('LOC1', string)) %>%  # call only the row containing LOC1
dplyr::mutate(string = gsub("\\s*\\([^\\)]+\\)","",as.character(string))) # remove the parenthesis
parenthesis.strings
parenthesis.strings           <- as.data.frame(list(regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))) %>%
dplyr::rename("string"=1) %>% # rename the column for clarity
dplyr::filter(grepl('LOC1', string))
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
gsub("\\s*\\([^\\)]+\\)","",as.character(parenthesis.strings$string))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
gsub("\\s*\\([^\\)]+\\)","",parenthesis.strings$string)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
gsub("[\\(\\)]", "",parenthesis.strings$string)
parenthesis.strings           <- as.data.frame(list(regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))) %>%
dplyr::rename("string"=1) %>% # rename the column for clarity
dplyr::filter(grepl('LOC1', string)) %>%  # call only the row containing LOC1
dplyr::mutate(string =  gsub("[\\(\\)]", "",parenthesis.strings$string)) # remove the parenthesis
parenthesis.strings
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings[1]
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
parenthesis.strings[[1]]
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
# load seq_id.txt - contains all transcript IDs and putative functoinal annotation
SeqIDs <- as.data.frame(read.delim2(file = "../Data/TagSeq/Seq_details/seq_id.txt",header=F)) %>%
dplyr::mutate(fullID = sub(".*>", "", V1)) %>%
dplyr::mutate(TranscriptID = sub("PREDICTED.*", "",fullID) ) %>%
dplyr::mutate(Function = sub(".*PREDICTED: Crassostrea virginica", "", fullID)) %>%
dplyr::select(!V1)
# column 'GeneIDs' as the LOC... string between parenthesis () in each line 'fullID'
for (i in 1:nrow(SeqIDs)) {
df                            <- data.frame()
parenthesis.strings           <- list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
parenthesis.strings           <- as.data.frame(list(regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))) %>%
dplyr::rename("string"=1) %>% # rename the column for clarity
dplyr::filter(grepl('LOC1', string)) %>%  # call only the row containing LOC1
dplyr::mutate(string =  gsub("[\\(\\)]", "",parenthesis.strings$string)) # remove the parenthesis
SeqIDs$GeneID[i]              <- parenthesis.strings[[1]]
}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
# column 'GeneIDs' as the LOC... string between parenthesis () in each line 'fullID'
for (i in 1:nrow(SeqIDs)) {
df                            <- data.frame()
parenthesis.strings           <- list(gsub("[\\(\\)]", "", regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46]))))
parenthesis.strings           <- as.data.frame(list(regmatches(SeqIDs$fullID[46], gregexpr("\\(.*?\\)", SeqIDs$fullID[46])))) %>%
dplyr::rename("string"=1) %>% # rename the column for clarity
dplyr::filter(grepl('LOC1', string)) %>%  # call only the row containing LOC1
dplyr::mutate(string =  gsub("[\\(\\)]", "",string)) # remove the parenthesis
SeqIDs$GeneID[i]              <- parenthesis.strings[[1]]
}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
View(SeqIDs)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
# column 'GeneIDs' as the LOC... string between parenthesis () in each line 'fullID'
for (i in 1:nrow(SeqIDs)) {
parenthesis.strings           <- as.data.frame(list(regmatches(SeqIDs$fullID[i], gregexpr("\\(.*?\\)", SeqIDs$fullID[i])))) %>%
dplyr::rename("string"=1) %>% # rename the column for clarity
dplyr::filter(grepl('LOC1', string)) %>%  # call only the row containing LOC1
dplyr::mutate(string =  gsub("[\\(\\)]", "",string)) # remove the parenthesis
SeqIDs$GeneID[i]              <- parenthesis.strings[[1]]
}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
View(SeqIDs) # view the final master data
length(list(unique(SeqIDs$GeneID)))
unique(SeqIDs$GeneID)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
length((unique(SeqIDs$GeneID))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
length(unique(SeqIDs$GeneID))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
# MAtris; formatted count matrix in previous cluster
raw_counts_mtx.ALL        <- read.csv("../Data/TagSeq/Filtered_counts/Sum_raw_count_matrix.csv", sep=',', header=TRUE) # read the output count matrix from sedna
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
tRNA_pseudogenes          <- c("rna-NC_", "rna-Trna")
raw_counts_mtx.mRNA       <- raw_counts_mtx.ALL %>%
dplyr::filter( !grepl(paste(tRNA_pseudogenes, collapse="|"), transcript_id)) %>%  # omit all rows with IDs pertaining to tRNA, pseudogenes, and mitchondrion
dplyr::select(!X) %>%  # omit the X row number column
dplyr::mutate(transcript_id = sub(".*-", "", transcript_id)) # omit 'rna-" from the start of each transcript ID
nrow(raw_counts_mtx.mRNA) #  66071 total trascripts
nrow(raw_counts_mtx.mRNA) #  66071 total trascripts
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
View(raw_counts_mtx.mRNA)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
# Note omission of these may be questionable...
# pseuodogenes share common evolutionary history to the to functional genes with a high similarity - may regulate genes through generation of lncRNAs (long non coding RNAs)
tRNA_pseudogenes          <- c("gene-LOC", "rna-NC_", "rna-Trna")
raw_counts_mtx.mRNA       <- raw_counts_mtx.ALL %>%
dplyr::filter( !grepl(paste(tRNA_pseudogenes, collapse="|"), transcript_id)) %>%  # omit all rows with IDs pertaining to tRNA, pseudogenes, and mitchondrion
dplyr::select(!X) %>%  # omit the X row number column
dplyr::mutate(transcript_id = sub(".*-", "", transcript_id)) # omit 'rna-" from the start of each transcript ID
nrow(raw_counts_mtx.mRNA) #  66071 total trascripts
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
View(raw_counts_mtx.mRNA)
# load seq_id.txt - contains all transcript IDs and putative functoinal annotation
SeqIDs <- as.data.frame(read.delim2(file = "../Data/TagSeq/Seq_details/seq_id.txt",header=F)) %>%
dplyr::mutate(fullID = sub(".*>", "", V1)) %>%
dplyr::mutate(TranscriptID = sub("PREDICTED.*", "",fullID) ) %>%
dplyr::mutate(Function = sub(".*PREDICTED: Crassostrea virginica", "", fullID)) %>%
dplyr::select(!V1)
SeqIDs
View(SeqIDs) # view the final master data
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
# Note omission of these may be questionable...
# pseuodogenes share common evolutionary history to the to functional genes with a high similarity - may regulate genes through generation of lncRNAs (long non coding RNAs)
tRNA_pseudogenes          <- c("gene-", "rna-NC_", "rna-Trna")
raw_counts_mtx.mRNA       <- raw_counts_mtx.ALL %>%
dplyr::filter( !grepl(paste(tRNA_pseudogenes, collapse="|"), transcript_id)) %>%  # omit all rows with IDs pertaining to tRNA, pseudogenes, and mitchondrion
dplyr::select(!X) %>%  # omit the X row number column
dplyr::mutate(transcript_id = sub(".*-", "", transcript_id)) # omit 'rna-" from the start of each transcript ID
nrow(raw_counts_mtx.mRNA) #  66083 total trascripts
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
# load seq_id.txt - contains all transcript IDs and putative functoinal annotation
SeqIDs <- as.data.frame(read.delim2(file = "../Data/TagSeq/Seq_details/seq_id.txt",header=F)) %>%
dplyr::mutate(fullID = sub(".*>", "", V1)) %>%
dplyr::mutate(TranscriptID = sub("PREDICTED.*", "",fullID) ) %>%
dplyr::mutate(Function = sub(".*PREDICTED: Crassostrea virginica", "", fullID)) %>%
dplyr::select(!V1)
# column 'GeneIDs' as the LOC... string between parenthesis () in each line 'fullID'
for (i in 1:nrow(SeqIDs)) {  # this takes an obnoxious few minutes to run (not efficient code?) or the objective of just calling another unique identifier for downstream gene calls
parenthesis.strings           <- as.data.frame(list(regmatches(SeqIDs$fullID[i], gregexpr("\\(.*?\\)", SeqIDs$fullID[i])))) %>% # for each row.. create 1 column data frame parsing strings between parenthesis
dplyr::rename("string"=1) %>% # rename the column for clarity
dplyr::filter(grepl('LOC1', string)) %>%  # call only the row containing LOC1 (LOC1... is the gene name) - several occurances of () with other functional annotation
dplyr::mutate(string =  gsub("[\\(\\)]", "",string)) # remove the parenthesis from the now isolated (LOC1...) string
SeqIDs$GeneID[i]              <- parenthesis.strings[[1]] # print to row i
}
