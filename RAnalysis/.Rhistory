2, # moduleColor
4, # ontology
5, # GO_term
1, # GO_ID
9, # Transcript_ID
12 # protein name
)])
(as.data.frame(merge(Moduel.GO.results, Ref.GO.terms, by = c("GO_ID", 'moduleColor', 'Day')))
[,c(3, # Day
2, # moduleColor
4, # ontology
5, # GO_term
1, # GO_ID
9, # Transcript_ID
13 # protein name
)])
Master <- rbind(GO.table,
(as.data.frame(merge(Moduel.GO.results, Ref.GO.terms, by = c("GO_ID", 'moduleColor', 'Day')))
[,c(3, # Day
2, # moduleColor
4, # ontology
5, # GO_term
1, # GO_ID
9, # Transcript_ID
13 # protein name
)])
)
Master
# un the loop
for (i in 1:nrow(WGCNA_ColorList)) {
Ref.GO.terms       <- WGCNA_MasterModData %>%
dplyr::filter(moduleColor %in% WGCNA_ColorList$moduleColor[i] & Day %in% WGCNA_ColorList$Day[i]) %>%
dplyr::select(-Cvirginica_length) %>%
dplyr::mutate(Annotation_GO_ID = strsplit(Annotation_GO_ID, ";")) %>%
unnest(Annotation_GO_ID) %>%
dplyr::rename(GO_ID = Annotation_GO_ID, Transcript_ID = Cvirginica_GeneID)
Moduel.GO.results  <- Master_goseq_results %>%
dplyr::filter(!ontology %in% 'CC') %>%
dplyr::select(!'under_represented_pvalue') %>%
dplyr::rename(Gene_count = numDEInCat, GO_term = term) %>%
dplyr::mutate(Gene_ratio = Gene_count/numInCat) %>%
dplyr::select(-'numInCat') %>%
dplyr::filter(modColor == WGCNA_ColorList$moduleColor[i] & Day == WGCNA_ColorList$Day[i]) %>%
dplyr::rename(moduleColor = modColor) %>%
dplyr::rename(GO_ID = category, pvalue = over_represented_pvalue)
Master <- rbind(GO.table,
(as.data.frame(merge(Moduel.GO.results, Ref.GO.terms, by = c("GO_ID", 'moduleColor', 'Day')))
[,c(3, # Day
2, # moduleColor
4, # ontology
5, # GO_term
1, # GO_ID
9, # Transcript_ID
13 # protein name
)])
)
df       <- data.frame(Master) # name dataframe for this single row
df_total <- rbind(df_total,df) #bind to a cumulative list dataframe
print(nrow(df_total)) # print to monitor progress
}
View(df_total)
df_total
df_total %>% dplyr::arrange(Day, moduleColor, ontology, GO_term, Protein_name)
GOEnrichment_master <- df_total %>% dplyr::arrange(Day, moduleColor, ontology, GO_term, Protein_name)
GOEnrichment_master_D0 <- GOEnrichment_master %>% dplyr::filter(Day = "Day0")
GOEnrichment_master
GOEnrichment_master_D0 <- GOEnrichment_master %>% dplyr::filter(Day %in% "Day0")
GOEnrichment_master_D1 <- GOEnrichment_master %>% dplyr::filter(Day %in% "Day1")
write.csv(GOEnrichment_master_D0, "C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day0/Day0_GO_Results_Master.csv")
write.csv(GOEnrichment_master_D1, "C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day1/Day1_GO_Results_Master.csv")
write.csv(GOEnrichment_master_D1, "C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day1/GOEnrichment/Day1_GO_Results_Master.csv")
write.csv(GOEnrichment_master_D0, "C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day0/GOEnrichment/Day0_GO_Results_Master.csv")
Moduel.GO.results
GOEnrichment_master_D0 <- GOEnrichment_master %>% dplyr::filter(Day %in% "Day0") %>% unique()
GOEnrichment_master_D0
GOEnrichment_master_D1 <- GOEnrichment_master %>% dplyr::filter(Day %in% "Day1") %>% unique()
write.csv(GOEnrichment_master_D0, "C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day0/GOEnrichment/Day0_GO_Results_Master.csv")
write.csv(GOEnrichment_master_D1, "C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis/Output/Day1/GOEnrichment/Day1_GO_Results_Master.csv")
# load libraries - notes show the install command needed to install (pre installed)
library(goseq)
library(dplyr)
library(forcats)
library(ggplot2)
library(gridExtra)
library(tidyr)
library(grDevices)
library(reshape2)
library(Rmisc)
library(ggpubr)
library(tibble)
library(hrbrthemes)
library(gridExtra)
library(tidyr)
library(zoo)
library(ComplexHeatmap)
library(circlize)
library(GSEABase)
library(data.table)
library(stringr)
# SET WORKING DIRECTORY
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_KM_paper/RAnalysis") # sets the working
Day0_ModuleMembership  <- read.csv(file="Output/Day0/Day0.WGCNA_ModulMembership.csv", sep=',', header=TRUE)
Day0_ModuleMembership
Day0_ModuleMembership  <- read.csv(file="Output/Day0/Day0.WGCNA_ModulMembership.csv", sep=',', header=TRUE) %>%
dplyr::select(c('X','GO.terms', 'KEGG_ID', 'geneSymbol', 'Protein_name','moduleColor')) %>%
na.omit() %>%
dplyr::rename(Cvirginica_GeneID = 'X') %>%
dplyr::mutate(Day = "Day0")
Day0_ModuleMembership
Starved_LowExop <- Day0_ModuleMembership %>% dplyr::filter(moduleColor %in% 'blue')
Starved_LowExp  <- Day0_ModuleMembership %>% dplyr::filter(moduleColor %in% 'turquoise')
Starved_LowExp
Starved_HighExp_ID <- Starved_HighExp[,1]
Starved_HighExp
# filter the master file of the first timepoint
Starved_HighExp <- Day0_ModuleMembership %>% dplyr::filter(moduleColor %in% 'blue')
Starved_HighExp_ID <- Starved_HighExp[,1]
Starved_HighExp_ID
Starved_LowExp_ID <- Starved_LowExp[,1]
count(Starved_HighExp_ID)
nrow(Starved_HighExp_ID)
length(Starved_HighExp_ID)
length(Starved_LowExp_ID) # 4544
norw()
nrow(Starved_HighExp)
Day0_ModuleMembership
Starved_HighExp
# use these geneIDs to filter the subseqent timepoint - quanitfy the number of genes and which models they are in
Starved_HighExp_T2 <-  Day1_ModuleMembership %>% dplyr::filter(Cvirginica_GeneID %in% Starved_HighExp_ID)
# use these geneIDs to filter the subseqent timepoint - quanitfy the number of genes and which models they are in
Starved_HighExp_T2 <-  Day1_ModuleMembership %>% dplyr::filter(Cvirginica_GeneID == Starved_HighExp_ID)
# use these geneIDs to filter the subseqent timepoint - quanitfy the number of genes and which models they are in
Starved_HighExp_T2 <-  Day1_ModuleMembership %>% dplyr::filter(Cvirginica_GeneID == Starved_HighExp$Cvirginica_GeneID)
# use these geneIDs to filter the subseqent timepoint - quanitfy the number of genes and which models they are in
Starved_HighExp_T2 <-  Day1_ModuleMembership %>% dplyr::filter(Cvirginica_GeneID %in% Starved_HighExp$Cvirginica_GeneID)
Starved_HighExp$Cvirginica_GeneID
Day1_ModuleMembership
Day1_ModuleMembership  <- read.csv(file="Output/Day1/Day1.WGCNA_ModulMembership.csv", sep=',', header=TRUE) %>%
dplyr::select(c('X','GO.terms', 'KEGG_ID', 'geneSymbol', 'Protein_name','moduleColor')) %>%
na.omit() %>%
dplyr::rename(Cvirginica_GeneID = 'X') %>%
dplyr::mutate(Day = "Day1")
Day1_ModuleMembership
# use these geneIDs to filter the subseqent timepoint - quanitfy the number of genes and which models they are in
Starved_HighExp_T2 <-  Day1_ModuleMembership %>% dplyr::filter(Cvirginica_GeneID %in% Starved_HighExp$Cvirginica_GeneID)
Starved_HighExp_T2
nrow(Starved_HighExp_ID) = nrow(Starved_HighExp_T2)
nrow(Starved_HighExp_ID) - nrow(Starved_HighExp_T2)
nrow(Starved_HighExp_ID)
nrow(Starved_HighExp) - nrow(Starved_HighExp_T2)
# filter the master file of the first timepoint
Starved_HighExp_T1 <- Day0_ModuleMembership %>% dplyr::filter(moduleColor %in% 'blue')
# filter the master file of the first timepoint
Starved_HighExp_T1 <- Day0_ModuleMembership %>% dplyr::filter(moduleColor %in% 'blue')
Starved_LowExp_T1  <- Day0_ModuleMembership %>% dplyr::filter(moduleColor %in% 'turquoise')
Starved_LowExp_ID  <- Starved_LowExp_T1[,1]
length(Starved_LowExp_T1) # 5236 - number of genes! damn thats a lot..
# filter the master file of the first timepoint
Starved_HighExp_T1 <- Day0_ModuleMembership %>% dplyr::filter(moduleColor %in% 'blue')
Starved_LowExp_T1  <- Day0_ModuleMembership %>% dplyr::filter(moduleColor %in% 'turquoise')
Starved_HighExp_ID <- Starved_HighExp_T1[,1]
length(Starved_HighExp_T1) # 4544 - number of genes! damn thats a lot..
# filter the master file of the first timepoint
Starved_HighExp_T1 <- Day0_ModuleMembership %>% dplyr::filter(moduleColor %in% 'blue')
Starved_LowExp_T1  <- Day0_ModuleMembership %>% dplyr::filter(moduleColor %in% 'turquoise')
Starved_HighExp_ID <- Starved_HighExp_T1[,1]
length(Starved_HighExp_T1) # 4544 - number of genes! damn thats a lot..
Starved_HighExp_ID
length(Starved_HighExp_ID) # 4544 - number of genes! damn thats a lot..
Starved_LowExp_ID  <- Starved_LowExp_T1[,1]
length(Starved_LowExp_ID) # 5236 - number of genes! damn thats a lot..
# use these geneIDs to filter the subseqent timepoint - quanitfy the number of genes and which models they are in
Starved_HighExp_T2 <-  Day1_ModuleMembership %>% dplyr::filter(Cvirginica_GeneID %in% Starved_HighExp_T1$Cvirginica_GeneID)
nrow(Starved_HighExp_T1) - nrow(Starved_HighExp_T2)
((nrow(Starved_HighExp_T1) - nrow(Starved_HighExp_T2)) / nrow(Starved_HighExp_T1) )*100
100 - [((nrow(Starved_HighExp_T1) - nrow(Starved_HighExp_T2)) / nrow(Starved_HighExp_T1) )*100] # 13.90845 did not align
100 - (  ((nrow(Starved_HighExp_T1) - nrow(Starved_HighExp_T2)) / nrow(Starved_HighExp_T1) )*100 ) # 13.90845 did not align
Starved_LowExp_T2 <-  Day1_ModuleMembership %>% dplyr::filter(Cvirginica_GeneID %in% Starved_LowExp_T1$Cvirginica_GeneID)
nrow(Starved_LowExp_T1) - nrow(Starved_LowExp_T2) # 632 are not present in the WGCNA data for the subseqent timepoint
100 - (  ((nrow(Starved_LowExp_T1) - nrow(Starved_LowExp_T2)) / nrow(Starved_LowExp_T1) )*100 ) # 86.09155 found in T2!
# what modules are these genes in??
Starved_HighExp_T2
Day1_ModuleMembership %>% dplyr::select(moduleColor ,Cvirginica_GeneID) %>%
na.omit() %>%
dplyr::group_by(moduleColor) %>%
dplyr::summarise(n= n())
T2_summary <- Day1_ModuleMembership %>% dplyr::select(moduleColor ,Cvirginica_GeneID) %>%
na.omit() %>%
dplyr::group_by(moduleColor) %>%
dplyr::summarise(n= n())
T2_summary <- as.data.frame (
Day1_ModuleMembership %>% dplyr::select(moduleColor ,Cvirginica_GeneID) %>%
na.omit() %>%
dplyr::group_by(moduleColor) %>%
dplyr::summarise(n= n())  )
T2_summary
# what modules are these genes in??
Starved_HighExp_T2
# what modules are these genes in??
Starved_HighExp_T2 %>% dplyr::select(moduleColor ,Cvirginica_GeneID) %>%
na.omit() %>%
dplyr::group_by(moduleColor) %>%
dplyr::summarise(n= n())  )
Starved_HighExp_T2
# what modules are these genes in??
Starved_HighExp_T2 %>% dplyr::select(moduleColor, Cvirginica_GeneID) %>%
na.omit() %>%
dplyr::group_by(moduleColor) %>%
dplyr::summarise(n= n())  )
# what modules are these genes in??
as.data.frame( Starved_HighExp_T2 %>% dplyr::select(moduleColor, Cvirginica_GeneID) %>%
na.omit() %>%
dplyr::group_by(moduleColor) %>%
dplyr::summarise(n= n())  )
# what modules are these genes in??
T2_StarvationHighExp <- as.data.frame(
Starved_HighExp_T2 %>% dplyr::select(moduleColor, Cvirginica_GeneID) %>%
na.omit() %>%
dplyr::group_by(moduleColor) %>%
dplyr::summarise(n= n())  )
T2_StarvationHighExp
# what modules are these genes in??
T2_StarvationHighExp <- as.data.frame(
Starved_HighExp_T2 %>% dplyr::select(moduleColor, Cvirginica_GeneID) %>%
na.omit() %>%
dplyr::group_by(moduleColor) %>%
dplyr::summarise(n_HighExp_Starved= n())  )
T2_StarvationHighExp
Starvation_HighExp_Prop_T2 <- merge(T2_summary, T2_StarvationHighExp, by ="Cvirginica_GeneID")
T2_StarvationHighExp
Starvation_HighExp_Prop_T2 <- merge(T2_summary, T2_StarvationHighExp, by ="moduleColor")
Starvation_HighExp_Prop_T2
Starvation_HighExp_Prop_T2 <- merge(T2_summary, T2_StarvationHighExp, by ="moduleColor") %>% dplyr::mutate(Percent_HighExpStarved = (n_HighExp_Starved / (n+n_HighExp_Starved))*100 )
Starvation_HighExp_Prop_T2
# High Expression starved - overlay into the T2_summary to see where these genes are expressed!
T2_StarvationLowExp <- as.data.frame(
Starved_LowExp_T2 %>% dplyr::select(moduleColor, Cvirginica_GeneID) %>%
na.omit() %>%
dplyr::group_by(moduleColor) %>%
dplyr::summarise(n_LowExp_Starved= n())  )
# High Expression starved - overlay into the T2_summary to see where these genes are expressed!
T2_StarvationLowExp <- as.data.frame(
Starved_LowExp_T2 %>% dplyr::select(moduleColor, Cvirginica_GeneID) %>%
na.omit() %>%
dplyr::group_by(moduleColor) %>%
dplyr::summarise(n_LowExp_Starved= n())  )
Starvation_LowExp_Prop_T2 <- merge(T2_summary, T2_StarvationLowExp, by ="moduleColor") %>% dplyr::mutate(Percent_LowExpStarved = (n_LowExp_Starved / (n+n_LowExp_Starved))*100 )
Starvation_LowExp_Prop_T2
Starvation_HighExp_Prop_T2 <- merge(T2_summary, T2_StarvationHighExp, by ="moduleColor") %>% dplyr::mutate(Percent_HighExpStarved = (n_HighExp_Starved / (n+n_HighExp_Starved))*100 )
Starvation_HighExp_Prop_T2
Starvation_LowExp_Prop_T2
Starvation_HighExp_Prop_T2
Starvation_LowExp_Prop_T2
Starvation_HighExp_Prop_T2
Starvation_LowExp_Prop_T2
Starvation_HighExp_Prop_T2
Starvation_LowExp_Prop_T2
Starvation_LowExp_Prop_T2
Starvation_HighExp_Prop_T2
Starvation_LowExp_Prop_T2
Starvation_HighExp_Prop_T2
Starvation_HighExp_Prop_T2
Starvation_LowExp_Prop_T2
T2_StarvationLowExp
Starved_LowExp_T2
Starved_HighExp_T2 %>% dplyr::filter(module_Color %in% 'cyan') %>% dplyr::select(Protein_name)
Starved_HighExp_T2 %>% dplyr::filter(module_Color %in% 'cyan')
Starved_HighExp_T2 %>% dplyr::filter(moduleColor %in% 'cyan') %>% dplyr::select(Protein_name)
Starvation_HighExp_Prop_T2
Starved_HighExp_T2 %>% dplyr::filter(moduleColor %in% 'cyan') %>% dplyr::select(Protein_name)
Starved_HighExp_T2 %>% dplyr::filter(moduleColor %in% 'cyan') %>% dplyr::select(Protein_name) %>% arrange()
Starved_HighExp_T2 %>% dplyr::filter(moduleColor %in% 'cyan') %>% dplyr::select(Protein_name) %>% dplyr::arrange(Protein_name)
View(Starved_HighExp_T2 %>% dplyr::filter(moduleColor %in% 'cyan') %>% dplyr::select(Protein_name) %>% dplyr::arrange(Protein_name))
# LOAD PACKAGES
library(clusterProfiler)
BiocManager::install('clusterProfiler')
a
# LOAD PACKAGES
library(clusterProfiler)
library(KEGGREST)
library(tidyr)
library(stringr)
library(forcats)
library(ggplot2)
library(ggplot2)
install.packages(c("cli", "data.table", "digest", "dplyr", "fansi", "ggrepel", "glue", "graphlayouts", "htmltools", "igraph", "jsonlite", "Matrix", "plyr", "polyclip", "purrr", "Rcpp", "RCurl", "rlang", "RSQLite", "stringi", "tidygraph", "tidyr", "utf8", "vctrs", "xfun", "yaml"))
install.packages(c("cli", "data.table", "digest", "dplyr", "fansi", "ggrepel", "glue", "graphlayouts", "htmltools", "igraph", "jsonlite", "Matrix", "plyr", "polyclip", "purrr", "Rcpp", "RCurl", "rlang", "RSQLite", "stringi", "tidygraph", "tidyr", "utf8", "vctrs", "xfun", "yaml"))
library(ggplot2)
library(scales)
library(ape)
library(ape)
library(data.table)
library(tidyverse)
library(tidyverse)
library(fBasics)
library(KEGGREST)
# WGCNA results (all treatments)
d2_WGCNA.data                <- read.csv("Output/WGCNA/day2_larvae/d2.WGCNA_ModulMembership_RRcutoff.csv")
d18_WGCNA.data               <- read.csv("Output/WGCNA/day18_spat/d18.WGCNA_ModulMembership_RRcutoff.csv")
# SET WORKING DIRECTORY   ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;: #
setwd("C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis")
# WGCNA results (all treatments)
d2_WGCNA.data                <- read.csv("Output/WGCNA/day2_larvae/d2.WGCNA_ModulMembership_RRcutoff.csv")
d18_WGCNA.data               <- read.csv("Output/WGCNA/day18_spat/d18.WGCNA_ModulMembership_RRcutoff.csv")
Ref_Master                   <- read.csv(file = "Data/TagSeq/Seq_details/Seq_Reference_Master.csv",header = T) %>%
dplyr::rename('TranscriptID' = 'Cvirginica_TranscriptID')
Crass_gigas_genome           <- keggList("crg") # call the C. gigas genome! - notice the csa terms are rownames! (REUIQRES INTERNET)
Crass_gigas_genome_dataframe <- as.data.frame(Crass_gigas_genome) %>%  rownames_to_column() # with will allow us to merge
colnames(Crass_gigas_genome_dataframe) <- c('sseqid', 'Gene_name')
# KEGGREST prep
pathways.list <- keggList("pathway", "crg")
head(pathways.list)
# Pull all genes for each pathway
pathway.codes <- sub("path:", "", names(pathways.list))
genes.by.pathway <- sapply(pathway.codes,
function(pwid){
pw <- keggGet(pwid)
if (is.null(pw[[1]]$GENE)) return(NA)
pw2 <- pw[[1]]$GENE[c(TRUE,FALSE)] # may need to modify this to c(FALSE, TRUE) for other organisms
pw2 <- unlist(lapply(strsplit(pw2, split = ";", fixed = T), function(x)x[1]))
return(pw2)
}
)
Day2_WGCNA_sigmodules <- as.data.frame(c('pink',
'blue',
'turquoise',
'brown',
'black',
'red',
'yellow'))
# start with loop by calling the row value common with the 'Master_KEGG_BPTerms' data frind from rbind above
modColor <- Day2_WGCNA_sigmodules[3,1]
# call the module color in the Day 7 data
ModuleLoop <- as.data.frame(d2_WGCNA.data %>%
dplyr::filter(moduleColor %in% modColor)  %>%
dplyr::select(c('TranscriptID', 'KEGG_ID', 'geneSymbol', 'MM.p', 'MM.cor')) %>%
dplyr::filter(.[[4]] < 0.05 & .[[5]] > 0.6) %>%
dplyr::select(c('TranscriptID', 'KEGG_ID', 'MM.p')) %>%
na.omit() %>%
dplyr::mutate(KEGG_ID = gsub(".*:","",KEGG_ID)) %>%
unnest(KEGG_ID))
KEGG_vector_cvirg_Cgigas <- as.vector(ModuleLoop$KEGG_ID) # ommit the 'crg:' before the actual terms
KEGG_cgigas                     <- enrichKEGG(gene = KEGG_vector_cvirg_Cgigas,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
?enrichKEGG
library(clusterProfiler)
KEGG_cgigas                     <- enrichKEGG(gene = KEGG_vector_cvirg_Cgigas,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
KEGG_vector_cvirg_Cgigas
?enrichKEGG
ModuleLoop$KEGG_ID
as.vector(gsub(".*:","", ModuleLoop$KEGG_ID))
KEGG_vector_cvirg_Cgigas <- as.vector(gsub(".*:","", ModuleLoop$KEGG_ID)) # ommit the 'crg:' before the actual terms
KEGG_cgigas                     <- enrichKEGG(gene = KEGG_vector_cvirg_Cgigas,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
KEGG_vector_cvirg_Cgigas
KEGG_cgigas                     <- enrichKEGG(gene = c("105348584", "105317413", "105321007", "105318604", "105347464", "105333341", "105318673", "105333480"),
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
as.vector(c("105348584", "105317413", "105321007", "105318604", "105347464", "105333341", "105318673", "105333480"))
x <- as.vector(c("105348584", "105317413", "105321007", "105318604", "105347464", "105333341", "105318673", "105333480"))
KEGG_cgigas                     <- enrichKEGG(gene =x,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
KEGG_cgigas                     <- enrichKEGG(gene = x,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
KEGG_cgigas
KEGG_vector_cvirg_Cgigas
KEGG_vector_cvirg_Cgigas <- as.vector(paste0,'LOC', ModuleLoop$KEGG_ID)) # ommit the 'crg:' before the actual terms
KEGG_vector_cvirg_Cgigas <- as.vector(paste0,'LOC', ModuleLoop$KEGG_ID) # ommit the 'crg:' before the actual terms
KEGG_vector_cvirg_Cgigas <- as.vector(paste0('LOC', ModuleLoop$KEGG_ID)) # ommit the 'crg:' before the actual terms
paste0('LOC', ModuleLoop$KEGG_ID)
KEGG_vector_cvirg_Cgigas <- as.vector(paste0('LOC', ModuleLoop$KEGG_ID)) # ommit the 'crg:' before the actual terms
KEGG_vector_cvirg_Cgigas
x2 <-
KEGG_cgigas                     <- enrichKEGG(gene = KEGG_vector_cvirg_Cgigas,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
x2 <-
KEGG_cgigas                     <- enrichKEGG(gene = ModuleLoop$KEGG_ID,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
# start with loop by calling the row value common with the 'Master_KEGG_BPTerms' data frind from rbind above
modColor <- Day2_WGCNA_sigmodules[2,1]
# call the module color in the Day 7 data
ModuleLoop <- as.data.frame(d2_WGCNA.data %>%
dplyr::filter(moduleColor %in% modColor)  %>%
dplyr::select(c('TranscriptID', 'KEGG_ID', 'geneSymbol', 'MM.p', 'MM.cor')) %>%
dplyr::filter(.[[4]] < 0.05 & .[[5]] > 0.6) %>%
dplyr::select(c('TranscriptID', 'KEGG_ID', 'MM.p')) %>%
na.omit() %>%
dplyr::mutate(KEGG_ID = gsub(".*:","",KEGG_ID)) %>%
unnest(KEGG_ID))
x2 <-
KEGG_cgigas                     <- enrichKEGG(gene = ModuleLoop$KEGG_ID,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
ModuleLoop$KEGG_ID
x2 <-
KEGG_cgigas                     <- enrichKEGG(gene = ModuleLoop$KEGG_ID,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
KEGG_cgigas
# call the module color in the Day 7 data
ModuleLoop <- as.data.frame(d2_WGCNA.data %>%
# dplyr::filter(moduleColor %in% modColor)  %>%
dplyr::select(c('TranscriptID', 'KEGG_ID', 'geneSymbol', 'MM.p', 'MM.cor')) %>%
dplyr::filter(.[[4]] < 0.05 & .[[5]] > 0.6) %>%
dplyr::select(c('TranscriptID', 'KEGG_ID', 'MM.p')) %>%
na.omit() %>%
dplyr::mutate(KEGG_ID = gsub(".*:","",KEGG_ID)) %>%
unnest(KEGG_ID))
ModuleLoop
x2 <-
KEGG_cgigas                     <- enrichKEGG(gene = ModuleLoop$KEGG_ID,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
ModuleLoop$KEGG_ID
x2 <- as.vector(ModuleLoop$KEGG_ID)
x2 <- as.vector(as.character(ModuleLoop$KEGG_ID))
KEGG_cgigas                     <- enrichKEGG(gene = x2,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
x2
d2_WGCNA.data
x2 <- as.vector(as.character(ModuleLoop$LOC111118348))
KEGG_cgigas                     <- enrichKEGG(gene = x2,
organism  = 'cvn', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
ModuleLoop
# call the module color in the Day 7 data
ModuleLoop <- as.data.frame(d2_WGCNA.data %>%
dplyr::filter(moduleColor %in% modColor)  %>%
dplyr::select(c('TranscriptID', 'KEGG_ID', 'geneSymbol', 'MM.p', 'MM.cor')) %>%
dplyr::filter(.[[4]] < 0.05 & .[[5]] > 0.6) %>%
dplyr::select(c('TranscriptID', 'KEGG_ID', 'MM.p')) %>%
na.omit() %>%
# dplyr::mutate(KEGG_ID = gsub(".*:","",KEGG_ID)) %>%
unnest(KEGG_ID))
ModuleLoop
x2 <- as.vector(as.character(ModuleLoop$KEGG_ID))
x2
KEGG_cgigas                     <- enrichKEGG(gene = x2,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
KEGG_cgigas
x2
ModuleLoop
d2_WGCNA.data
x2 <- as.vector(as.character(ModuleLoop$TranscriptID))
x2
KEGG_cgigas                     <- enrichKEGG(gene = x2,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
x2 <- as.vector(as.character(ModuleLoop$KEGG_ID))
x2
# call the module color in the Day 7 data
ModuleLoop <- as.data.frame(d2_WGCNA.data %>%
dplyr::filter(moduleColor %in% modColor)  %>%
dplyr::select(c('TranscriptID', 'KEGG_ID', 'geneSymbol', 'MM.p', 'MM.cor')) %>%
dplyr::filter(.[[4]] < 0.05 & .[[5]] > 0.6) %>%
dplyr::select(c('TranscriptID', 'KEGG_ID', 'MM.p')) %>%
na.omit() %>%
dplyr::mutate(KEGG_ID = gsub(".*:","",KEGG_ID)) %>%
unnest(KEGG_ID))
x2 <- as.vector(as.character(ModuleLoop$KEGG_ID))
x2
x2
x2 <- names(ModuleLoop$KEGG_ID))
x2 <- names(ModuleLoop$KEGG_ID)
x2
ModuleLoop$KEGG_ID
KEGG_cgigas                     <- enrichKEGG(gene = ModuleLoop$KEGG_ID,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
data(geneList, package='DOSE')
de <- names(geneList)[1:100]
de
x2 <- as.vector(ModuleLoop$KEGG_ID)
x2
x2 <- as.vector(as.numeric(ModuleLoop$KEGG_ID))
x2
de
KEGG_cgigas                     <- enrichKEGG(gene = de,
# organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
de
KEGG_cgigas                     <- enrichKEGG(de,
# organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
KEGG_cgigas                     <- enrichKEGG(de,
# organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.01)
data(geneList, package="DOSE")
kk2 <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
minGSSize    = 120,
pvalueCutoff = 0.05,
verbose      = FALSE)
geneList
devtools::install_github("YuLab-SMU/clusterProfiler")
install.packages("htmltools", dependencies = FALSE)
install.packages("htmltools", dependencies = FALSE)
install.packages("htmltools", dependencies = FALSE)
devtools::install_github("YuLab-SMU/clusterProfiler")
library(htmltools)
detach("package:htmltools", unload = TRUE)
install.packages("htmltools")
