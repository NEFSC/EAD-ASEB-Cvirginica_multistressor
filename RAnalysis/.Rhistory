print(paste("Finished! Day2 module = ", modColor, sep = " "))
}
# Day 18  for loop ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;;; #
# USING KEGGPROFILE -- NOTE: this is outdated and marked as so...
# Day 2 for loop ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;;; #
Day18_WGCNA_sigmodules <- as.data.frame(c('green', 'purple', 'tan', 'red', 'blue'))
# Day 18  for loop ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;;; #
# USING KEGGPROFILE -- NOTE: this is outdated and marked as so...
# Day 2 for loop ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;;; #
Day18_WGCNA_sigmodules <- as.data.frame(c('green', 'purple', 'tan', 'red', 'blue'))
for (i in 1:nrow(Day18_WGCNA_sigmodules)) {
# start with loop by calling the row value common with the 'Master_KEGG_BPTerms' data frind from rbind above
modColor <- Day18_WGCNA_sigmodules[i,1]
# call the module color in the Day 7 data
ModuleLoop              <- d18_WGCNA.data %>% dplyr::filter(moduleColor %in% modColor)
genes_per_module        <- length(unique(ModuleLoop$geneSymbol)) # nrow(ModuleLoop) # use this for the looped print out
annotgenes_per_module   <- nrow(ModuleLoop %>% dplyr::filter(!KEGG_ID %in% NA)) # nrow(ModuleLoop) # use this for the looped print out
genes_per_module_blasthit      <- na.omit(ModuleLoop)  %>% # ommit  genes without gene name annotation
dplyr::filter(moduleColor %in% modColor) %>%   # filter for the module loop
dplyr::filter(TranscriptID %in% Ref_Master$TranscriptID) %>%  # call only genes that have a blast hit
nrow() #
perc_annot_genes_with_blasthit <- ( genes_per_module_blasthit / annotgenes_per_module ) *100
# calaculate the percent mapped and print this...
print(paste("Day18", modColor, " ",
genes_per_module, "unique genes per module",
annotgenes_per_module, " annotated; ",
genes_per_module_blasthit, " or", perc_annot_genes_with_blasthit,"% annotated genes with blasthit", sep = ' '))
# Run KEGG analysis
KEGG_vector_cvirg_Cgigas   <- as.vector(gsub(".*:","",ModuleLoop$KEGG_ID)) # ommit the 'crg:' before the actual terms
KEGG_cgigas <- enrichKEGG(gene = KEGG_vector_cvirg_Cgigas,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
# if loop to output the KEGG enrichment analysis ONLY if genes were successfully mapped...
if (  nrow(as.data.frame(head(KEGG_cgigas))) > 0 ) {
# creat dateframe and write the csv file out
df <- as.data.frame(head(KEGG_cgigas))
rownames(df) <- c()
KEGGoutput <- as.data.frame(do.call(cbind.data.frame, df))
KEGGoutput$GeneRatio_18 <- gsub("/"," of ", KEGGoutput$GeneRatio)
KEGGoutput$Rich_Factor <- (  (as.numeric(sub("/.*", "", KEGGoutput$GeneRatio))) / (as.numeric(sub("/.*", "", KEGGoutput$BgRatio)))  )
write.csv(KEGGoutput, file = paste("Output/WGCNA/day18_spat/KEGG/Day18_",modColor,"_KEGG_allgenes.csv", sep =''))
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
geom_point( aes(col=qvalue, size=Count)) +   # Draw points
geom_segment(aes(x=Description,
xend=Description,
y=min(Rich_Factor),
yend=max(Rich_Factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Day 18",
x = "Pathway",
y = "Rich Factor",
subtitle=paste("WGCNA Module:", modColor, sep =' ')) +
coord_flip()
pdf(paste("Output/WGCNA/day18_spat/KEGG/Day18_",modColor,"_RichFactorPlot.pdf", sep =''), width=5, height=6)
print(plot)
dev.off()
# stringsplit and unnest for a data set of genes and IDs associated with each pathway
df_18                 <- as.data.frame(KEGG_cgigas)[c(1:18,8:9)]
df_18$gene_IDs        <- as.vector(strsplit(as.character(df_18$geneID), "/"))
colnames(df_18)       <- c("Cgigas_PathwayID", "Pathway_Description", "Pathway_gene_list", "Pathway_gene_count", "gene_IDs")
df_3                 <- unnest(df_18, gene_IDs)
df_3$Cgigas_KEGG_IDs <- paste("crg:", df_3$gene_IDs, sep='')
Crass_gigas_ref      <- Crass_gigas_genome_dataframe %>% mutate(Cgigas_KEGG_IDs = Crass_gigas_genome_dataframe$sseqid) %>% select(c('Cgigas_KEGG_IDs','Gene_name'))
df_final             <- merge(df_3, Crass_gigas_ref, by='Cgigas_KEGG_IDs')
write.csv(df_final, file = paste("Output/WGCNA/day18_spat/KEGG/Day18_",modColor,"_KEGG_allgenes_unlisted.csv", sep =''))
} else {}
print(paste("Finished! Day18 module = ", modColor, sep = " "))
}
for (i in 1:nrow(Day18_WGCNA_sigmodules)) {
# start with loop by calling the row value common with the 'Master_KEGG_BPTerms' data frind from rbind above
modColor <- Day18_WGCNA_sigmodules[i,1]
# call the module color in the Day 7 data
ModuleLoop              <- d18_WGCNA.data %>% dplyr::filter(moduleColor %in% modColor)
genes_per_module        <- length(unique(ModuleLoop$geneSymbol)) # nrow(ModuleLoop) # use this for the looped print out
annotgenes_per_module   <- nrow(ModuleLoop %>% dplyr::filter(!KEGG_ID %in% NA)) # nrow(ModuleLoop) # use this for the looped print out
genes_per_module_blasthit      <- na.omit(ModuleLoop)  %>% # ommit  genes without gene name annotation
dplyr::filter(moduleColor %in% modColor) %>%   # filter for the module loop
dplyr::filter(TranscriptID %in% Ref_Master$TranscriptID) %>%  # call only genes that have a blast hit
nrow() #
perc_annot_genes_with_blasthit <- ( genes_per_module_blasthit / annotgenes_per_module ) *100
# calaculate the percent mapped and print this...
print(paste("Day18", modColor, " ",
genes_per_module, "unique genes per module",
annotgenes_per_module, " annotated; ",
genes_per_module_blasthit, " or", perc_annot_genes_with_blasthit,"% annotated genes with blasthit", sep = ' '))
# Run KEGG analysis
KEGG_vector_cvirg_Cgigas   <- as.vector(gsub(".*:","",ModuleLoop$KEGG_ID)) # ommit the 'crg:' before the actual terms
KEGG_cgigas <- enrichKEGG(gene = KEGG_vector_cvirg_Cgigas,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
# if loop to output the KEGG enrichment analysis ONLY if genes were successfully mapped...
if (  nrow(as.data.frame(head(KEGG_cgigas))) > 0 ) {
# creat dateframe and write the csv file out
df <- as.data.frame(head(KEGG_cgigas))
rownames(df) <- c()
KEGGoutput <- as.data.frame(do.call(cbind.data.frame, df))
KEGGoutput$GeneRatio_18 <- gsub("/"," of ", KEGGoutput$GeneRatio)
KEGGoutput$Rich_Factor <- (  (as.numeric(sub("/.*", "", KEGGoutput$GeneRatio))) / (as.numeric(sub("/.*", "", KEGGoutput$BgRatio)))  )
write.csv(KEGGoutput, file = paste("Output/WGCNA/day18_spat/KEGG/Day18_",modColor,"_KEGG_allgenes.csv", sep =''))
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
geom_point( aes(col=qvalue, size=Count)) +   # Draw points
geom_segment(aes(x=Description,
xend=Description,
y=min(Rich_Factor),
yend=max(Rich_Factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Day 18",
x = "Pathway",
y = "Rich Factor",
subtitle=paste("WGCNA Module:", modColor, sep =' ')) +
coord_flip()
pdf(paste("Output/WGCNA/day18_spat/KEGG/Day18_",modColor,"_RichFactorPlot.pdf", sep =''), width=5, height=6)
print(plot)
dev.off()
# stringsplit and unnest for a data set of genes and IDs associated with each pathway
df_18                 <- as.data.frame(KEGG_cgigas)[c(1:18,8:9)]
df_18$gene_IDs        <- as.vector(strsplit(as.character(df_18$geneID), "/"))
colnames(df_18)       <- c("Cgigas_PathwayID", "Pathway_Description", "Pathway_gene_list", "Pathway_gene_count", "gene_IDs")
df_3                 <- unnest(df_18, gene_IDs)
df_3$Cgigas_KEGG_IDs <- paste("crg:", df_3$gene_IDs, sep='')
Crass_gigas_ref      <- Crass_gigas_genome_dataframe %>% mutate(Cgigas_KEGG_IDs = Crass_gigas_genome_dataframe$sseqid) %>% select(c('Cgigas_KEGG_IDs','Gene_name'))
df_final             <- merge(df_3, Crass_gigas_ref, by='Cgigas_KEGG_IDs')
write.csv(df_final, file = paste("Output/WGCNA/day18_spat/KEGG/Day18_",modColor,"_KEGG_allgenes_unlisted.csv", sep =''))
} else {}
print(paste("Finished! Day18 module = ", modColor, sep = " "))
}
# start with loop by calling the row value common with the 'Master_KEGG_BPTerms' data frind from rbind above
modColor <- Day18_WGCNA_sigmodules[i,1]
# call the module color in the Day 7 data
ModuleLoop              <- d18_WGCNA.data %>% dplyr::filter(moduleColor %in% modColor)
genes_per_module        <- length(unique(ModuleLoop$geneSymbol)) # nrow(ModuleLoop) # use this for the looped print out
annotgenes_per_module   <- nrow(ModuleLoop %>% dplyr::filter(!KEGG_ID %in% NA)) # nrow(ModuleLoop) # use this for the looped print out
genes_per_module_blasthit      <- na.omit(ModuleLoop)  %>% # ommit  genes without gene name annotation
dplyr::filter(moduleColor %in% modColor) %>%   # filter for the module loop
dplyr::filter(TranscriptID %in% Ref_Master$TranscriptID) %>%  # call only genes that have a blast hit
nrow() #
perc_annot_genes_with_blasthit <- ( genes_per_module_blasthit / annotgenes_per_module ) *100
# calaculate the percent mapped and print this...
print(paste("Day18", modColor, " ",
genes_per_module, "unique genes per module",
annotgenes_per_module, " annotated; ",
genes_per_module_blasthit, " or", perc_annot_genes_with_blasthit,"% annotated genes with blasthit", sep = ' '))
# Run KEGG analysis
KEGG_vector_cvirg_Cgigas   <- as.vector(gsub(".*:","",ModuleLoop$KEGG_ID)) # ommit the 'crg:' before the actual terms
KEGG_cgigas <- enrichKEGG(gene = KEGG_vector_cvirg_Cgigas,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
# creat dateframe and write the csv file out
df <- as.data.frame(head(KEGG_cgigas))
rownames(df) <- c()
KEGGoutput <- as.data.frame(do.call(cbind.data.frame, df))
KEGGoutput$GeneRatio_18 <- gsub("/"," of ", KEGGoutput$GeneRatio)
KEGGoutput$Rich_Factor <- (  (as.numeric(sub("/.*", "", KEGGoutput$GeneRatio))) / (as.numeric(sub("/.*", "", KEGGoutput$BgRatio)))  )
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
geom_point( aes(col=qvalue, size=Count)) +   # Draw points
geom_segment(aes(x=Description,
xend=Description,
y=min(Rich_Factor),
yend=max(Rich_Factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Day 18",
x = "Pathway",
y = "Rich Factor",
subtitle=paste("WGCNA Module:", modColor, sep =' ')) +
coord_flip()
print(plot)
# stringsplit and unnest for a data set of genes and IDs associated with each pathway
df_18                 <- as.data.frame(KEGG_cgigas)[c(1:18,8:9)]
KEGG_cgigas
# stringsplit and unnest for a data set of genes and IDs associated with each pathway
df_18                 <- as.data.frame(KEGG_cgigas)[c(1:18,8:9)]
KEGG_cgigas
as.data.frame(KEGG_cgigas)
# stringsplit and unnest for a data set of genes and IDs associated with each pathway
df_18                 <- as.data.frame(KEGG_cgigas)[c(1:2,8:9)]
df_18$gene_IDs        <- as.vector(strsplit(as.character(df_18$geneID), "/"))
colnames(df_18)       <- c("Cgigas_PathwayID", "Pathway_Description", "Pathway_gene_list", "Pathway_gene_count", "gene_IDs")
df_3                 <- unnest(df_18, gene_IDs)
df_3$Cgigas_KEGG_IDs <- paste("crg:", df_3$gene_IDs, sep='')
Crass_gigas_ref      <- Crass_gigas_genome_dataframe %>% mutate(Cgigas_KEGG_IDs = Crass_gigas_genome_dataframe$sseqid) %>% select(c('Cgigas_KEGG_IDs','Gene_name'))
df_final             <- merge(df_3, Crass_gigas_ref, by='Cgigas_KEGG_IDs')
df_final
# Day 18  for loop ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;;; #
# USING KEGGPROFILE -- NOTE: this is outdated and marked as so...
# Day 2 for loop ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;;; #
Day18_WGCNA_sigmodules <- as.data.frame(c('green', 'purple', 'tan', 'red', 'blue'))
for (i in 1:nrow(Day18_WGCNA_sigmodules)) {
# start with loop by calling the row value common with the 'Master_KEGG_BPTerms' data frind from rbind above
modColor <- Day18_WGCNA_sigmodules[i,1]
# call the module color in the Day 7 data
ModuleLoop              <- d18_WGCNA.data %>% dplyr::filter(moduleColor %in% modColor)
genes_per_module        <- length(unique(ModuleLoop$geneSymbol)) # nrow(ModuleLoop) # use this for the looped print out
annotgenes_per_module   <- nrow(ModuleLoop %>% dplyr::filter(!KEGG_ID %in% NA)) # nrow(ModuleLoop) # use this for the looped print out
genes_per_module_blasthit      <- na.omit(ModuleLoop)  %>% # ommit  genes without gene name annotation
dplyr::filter(moduleColor %in% modColor) %>%   # filter for the module loop
dplyr::filter(TranscriptID %in% Ref_Master$TranscriptID) %>%  # call only genes that have a blast hit
nrow() #
perc_annot_genes_with_blasthit <- ( genes_per_module_blasthit / annotgenes_per_module ) *100
# calaculate the percent mapped and print this...
print(paste("Day18", modColor, " ",
genes_per_module, "unique genes per module",
annotgenes_per_module, " annotated; ",
genes_per_module_blasthit, " or", perc_annot_genes_with_blasthit,"% annotated genes with blasthit", sep = ' '))
# Run KEGG analysis
KEGG_vector_cvirg_Cgigas   <- as.vector(gsub(".*:","",ModuleLoop$KEGG_ID)) # ommit the 'crg:' before the actual terms
KEGG_cgigas <- enrichKEGG(gene = KEGG_vector_cvirg_Cgigas,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
# if loop to output the KEGG enrichment analysis ONLY if genes were successfully mapped...
if (  nrow(as.data.frame(head(KEGG_cgigas))) > 0 ) {
# creat dateframe and write the csv file out
df <- as.data.frame(head(KEGG_cgigas))
rownames(df) <- c()
KEGGoutput <- as.data.frame(do.call(cbind.data.frame, df))
KEGGoutput$GeneRatio_18 <- gsub("/"," of ", KEGGoutput$GeneRatio)
KEGGoutput$Rich_Factor <- (  (as.numeric(sub("/.*", "", KEGGoutput$GeneRatio))) / (as.numeric(sub("/.*", "", KEGGoutput$BgRatio)))  )
write.csv(KEGGoutput, file = paste("Output/WGCNA/day18_spat/KEGG/Day18_",modColor,"_KEGG_allgenes.csv", sep =''))
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
geom_point( aes(col=qvalue, size=Count)) +   # Draw points
geom_segment(aes(x=Description,
xend=Description,
y=min(Rich_Factor),
yend=max(Rich_Factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Day 18",
x = "Pathway",
y = "Rich Factor",
subtitle=paste("WGCNA Module:", modColor, sep =' ')) +
coord_flip()
pdf(paste("Output/WGCNA/day18_spat/KEGG/Day18_",modColor,"_RichFactorPlot.pdf", sep =''), width=5, height=6)
print(plot)
dev.off()
# stringsplit and unnest for a data set of genes and IDs associated with each pathway
df_18                 <- as.data.frame(KEGG_cgigas)[c(1:2,8:9)]
df_18$gene_IDs        <- as.vector(strsplit(as.character(df_18$geneID), "/"))
colnames(df_18)       <- c("Cgigas_PathwayID", "Pathway_Description", "Pathway_gene_list", "Pathway_gene_count", "gene_IDs")
df_3                 <- unnest(df_18, gene_IDs)
df_3$Cgigas_KEGG_IDs <- paste("crg:", df_3$gene_IDs, sep='')
Crass_gigas_ref      <- Crass_gigas_genome_dataframe %>% mutate(Cgigas_KEGG_IDs = Crass_gigas_genome_dataframe$sseqid) %>% select(c('Cgigas_KEGG_IDs','Gene_name'))
df_final             <- merge(df_3, Crass_gigas_ref, by='Cgigas_KEGG_IDs')
write.csv(df_final, file = paste("Output/WGCNA/day18_spat/KEGG/Day18_",modColor,"_KEGG_allgenes_unlisted.csv", sep =''))
} else {}
print(paste("Finished! Day18 module = ", modColor, sep = " "))
}
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
geom_point( aes(col=qvalue, size=c(0,100))) +   # Draw points
geom_segment(aes(x=Description,
xend=Description,
y=min(Rich_Factor),
yend=max(Rich_Factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Day 18",
x = "Pathway",
y = "Rich Factor",
subtitle=paste("WGCNA Module:", modColor, sep =' ')) +
coord_flip()
print(plot)
KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
geom_point( aes(col=qvalue, size=c(0,100)))
KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
geom_point( aes(col=qvalue, size=Count))
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
geom_point( aes(col=qvalue, size=Count)) +   # Draw points
scale_size(range = c(1,80))
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
geom_point( aes(col=qvalue, size=Count)) +   # Draw points
scale_size(range = c(1,80)) +
geom_segment(aes(x=Description,
xend=Description,
y=min(Rich_Factor),
yend=max(Rich_Factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Day 18",
x = "Pathway",
y = "Rich Factor",
subtitle=paste("WGCNA Module:", modColor, sep =' ')) +
coord_flip()
print(plot)
KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
geom_point( aes(col=qvalue, size=Count)) +   # Draw points
scale_size(range = c(1,80))
KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
geom_point( aes(col=qvalue, size=Count))
KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
geom_point( aes(col=qvalue, size=Count)) +   # Draw points
scale_size_continuous(range = c(2,4))
KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
scale_size(range = c(0, 13),
breaks = c(0, 20, 30, 40, 50),
labels = c("0", "20", "30", "40", "50+"),
guide = "legend") +
geom_point( aes(col=qvalue, size=Count))
KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
scale_size(range = c(0, 13),
breaks = c(0, 20, 30, 40, 50),
labels = c("0", "20", "30", "40", "50+"),
guide = "legend") +
geom_point(mapping = aes(col=qvalue, size=Count))
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
scale_size(range = c(0, 13),
breaks = c(0, 20, 30, 40, 50),
labels = c("0", "20", "30", "40", "50+"),
guide = "legend") +
geom_point(mapping = aes(col=qvalue, size=Count)) +   # Draw points
scale_size_continuous(range = c(2,4))
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
scale_size(range = c(0, 13),
breaks = c(0, 20, 30, 40, 50),
labels = c("0", "20", "30", "40", "50+"),
guide = "legend") +
geom_point(mapping = aes(col=qvalue, size=Count)) +   # Draw points
geom_segment(aes(x=Description,
xend=Description,
y=min(Rich_Factor),
yend=max(Rich_Factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Day 18",
x = "Pathway",
y = "Rich Factor",
subtitle=paste("WGCNA Module:", modColor, sep =' ')) +
coord_flip()
print(plot)
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
scale_size(range = c(0, 13),
breaks = c(0, 20, 30, 40, 100),
labels = c("0", "20", "30", "40", "100+"),
guide = "legend") +
geom_point(mapping = aes(col=qvalue, size=Count)) +   # Draw points
geom_segment(aes(x=Description,
xend=Description,
y=min(Rich_Factor),
yend=max(Rich_Factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Day 18",
x = "Pathway",
y = "Rich Factor",
subtitle=paste("WGCNA Module:", modColor, sep =' ')) +
coord_flip()
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
scale_size(range = c(0, 50),
breaks = c(0, 20, 30, 40, 50),
labels = c("0", "20", "30", "40", "50+"),
guide = "legend") +
geom_point(mapping = aes(col=qvalue, size=Count)) +   # Draw points
geom_segment(aes(x=Description,
xend=Description,
y=min(Rich_Factor),
yend=max(Rich_Factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Day 18",
x = "Pathway",
y = "Rich Factor",
subtitle=paste("WGCNA Module:", modColor, sep =' ')) +
coord_flip()
print(plot)
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
scale_size(range = c(0, 12),
breaks = c(0, 20, 30, 40, 50),
labels = c("0", "20", "30", "40", "50+"),
guide = "legend") +
geom_point(mapping = aes(col=qvalue, size=Count)) +   # Draw points
geom_segment(aes(x=Description,
xend=Description,
y=min(Rich_Factor),
yend=max(Rich_Factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Day 18",
x = "Pathway",
y = "Rich Factor",
subtitle=paste("WGCNA Module:", modColor, sep =' ')) +
coord_flip()
print(plot)
KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
scale_size(range = c(0, 12),
breaks = c(0, 20, 30, 40, 50),
labels = c("0", "20", "30", "40", "50+"),
guide = "legend") +
geom_point(mapping = aes(col=qvalue, size=Count)) +   # Draw points
geom_segment(aes(x=Description,
xend=Description,
y=min(Rich_Factor),
yend=max(Rich_Factor)),
linetype=NA,
size=0)
KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
scale_size(range = c(0, 12),
breaks = c(0, 20, 30, 40, 50),
labels = c("0", "20", "30", "40", "50+"),
guide = "legend")
KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
scale_size(range = c(0, 12),
breaks = c(0, 20, 30, 40, 50),
labels = c("0", "20", "30", "40", "50+"),
guide = "legend") +
geom_point(mapping = aes(col=qvalue, size=Count))
# Plot
plot <- ggplot() +
scale_size(range = c(0, 12),
breaks = c(0, 20, 30, 40, 50),
labels = c("0", "20", "30", "40", "50+"),
guide = "legend") +
geom_point(data = KEGGoutput, mapping = aes(x = reorder(Description, Rich_Factor), y = Rich_Factor, col=qvalue, size=Count)) +   # Draw points
geom_segment(aes(x=Description,
xend=Description,
y=min(Rich_Factor),
yend=max(Rich_Factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Day 18",
x = "Pathway",
y = "Rich Factor",
subtitle=paste("WGCNA Module:", modColor, sep =' ')) +
coord_flip()
print(plot)
KEGGoutput
ggplot() +
scale_size(range = c(0, 12),
breaks = c(0, 20, 30, 40, 50),
labels = c("0", "20", "30", "40", "50+"),
guide = "legend") +
geom_point(data = KEGGoutput, mapping = aes(x = reorder(Description, Rich_Factor), y = Rich_Factor, col=qvalue, size=Count)) +   # Draw points
geom_segment(aes(x=Description,
xend=Description,
y=min(Rich_Factor),
yend=max(Rich_Factor)),
linetype=NA,
size=0)
KEGGoutput
ggplot() +
scale_size(range = c(0, 12),
breaks = c(0, 20, 30, 40, 50),
labels = c("0", "20", "30", "40", "50+"),
guide = "legend") +
geom_point(data = KEGGoutput, mapping = aes(x = reorder(Description, Rich_Factor), y = Rich_Factor, col=qvalue, size=Count))
ggplot() +
scale_size(range = c(0, 12),
breaks = c(0, 20, 30, 40, 50),
labels = c("0", "20", "30", "40", "50+"),
guide = "legend") +
geom_point(data = KEGGoutput, mapping = aes(x = reorder(Description, Rich_Factor), y = Rich_Factor, col=qvalue, size=Count)) +   # Draw points
geom_segment(aes(x=Description,
xend=Description,
y=min(Rich_Factor),
yend=max(Rich_Factor)),
linetype=NA,
size=0)
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
geom_point( aes(col=qvalue, size=Count)) +   # Draw points
scale_size_continuous(range = c(2,4))
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(Description, Rich_Factor), y= Rich_Factor)) +
geom_point( aes(col=qvalue, size=Count)) +   # Draw points
geom_segment(aes(x=Description,
xend=Description,
y=min(Rich_Factor),
yend=max(Rich_Factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Day 18",
x = "Pathway",
y = "Rich Factor",
subtitle=paste("WGCNA Module:", modColor, sep =' ')) +
coord_flip()
print(plot)
KEGGoutput
