ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Cvirginica - Mitchondrial potential under OA (8 days)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_Degran
MitPotential_dat
# Export the figures to pdf
ggarrange(MitPotenital_PLOT_T1,MitPotenital_PLOT_T2,nrow = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_T1_T2.pdf")
MitPotenital_PLOT_Degran <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'degranulated') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Cvirginica - Mitchondrial potential (degranulated cells)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_MG <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'mature_granular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Cvirginica - Mitchondrial potential (mature granular)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_IG <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'immature_granular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Cvirginica - Mitchondrial potential (immature granular)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_MA <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'mature_agranular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Cvirginica - Mitchondrial potential (mature agranular)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
# Export the figures to pdf
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 4) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf")
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf")
MitPotenital_PLOT_Degran <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'degranulated') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "ΔΨm, degranulated cells",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_MG <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'mature_granular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "ΔΨm, mature granular",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_IG <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'immature_granular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "ΔΨm, immature granular",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_MA <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'mature_agranular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "ΔΨm, mature agranular)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
# Export the figures to pdf
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf")
MitPotenital_PLOT_Degran <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'degranulated') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Mit. potential, degranulated cells",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_MG <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'mature_granular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Mit. potential, mature granular",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_IG <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'immature_granular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Mit. potential, immature granular",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
MitPotenital_PLOT_MA <- MitPotential_dat %>%
dplyr::filter(cell_type %in% 'mature_agranular') %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '1200 μatm')), Ratio_FL2.FL1 , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey20","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~1200 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "Mit. potential, mature agranular)",
y = expression(Arbitrary~units~"("~A~U~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Timepoint)
# Export the figures to pdf
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf", width = 800, height = 800)
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf", width = 10, height = 12)
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf", width = 5, height = 7)
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf", width = 50, height = 70)
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf", width = 55, height = 70)
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf", width = 12, height = 15)
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf", width = 4, height = 6)
ggarrange(MitPotenital_PLOT_Degran,MitPotenital_PLOT_MG, MitPotenital_PLOT_IG,MitPotenital_PLOT_MA,nrow = 2, ncol = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_hemolymph_OA_trial/RAnalysis/Flow_cytometry_data/Output/MitochondrialPotential_cell_type.pdf", width = 12, height = 15)
# Load packages and pacage version/date/import/depends info
library(dplyr)
library(VennDiagram)
library("ggVennDiagram")
library(ggvenn)
library(gridExtra)
#set working directory--------------------------------------------------------------------------------------------------
# SET WORKING DIRECTORY AND LOAD DATA
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/")
# upload data
## main pairwise effect DEGs (salinity, temperature, OA - high vs. low for each)
DE_d2.Temperature <- read.csv(file="C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/DESeq2/Day2_larva/DEG_data/Day2.Temperature_DESeq2results.csv", sep=',', header=TRUE)
# upload data
## main pairwise effect DEGs (salinity, temperature, OA - high vs. low for each)
DE_d2.Temperature <- read.csv(file="C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/Data/TagSeq/DESeq2/Day2_larva//Day2.Temperature_DESeq2results.csv", sep=',', header=TRUE)
# upload data
## main pairwise effect DEGs (salinity, temperature, OA - high vs. low for each)
DE_d2.Temperature <- read.csv(file="C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/Data/TagSeq/DESeq2/Day2_larva/Day2.Temperature_DESeq2results.csv", sep=',', header=TRUE)
# upload data
## main pairwise effect DEGs (salinity, temperature, OA - high vs. low for each)
DE_d2.Temperature <- read.csv(file="C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Data/TagSeq/DESeq2/Day2_larva/Day2.Temperature_DESeq2results.csv", sep=',', header=TRUE)
DE_d2.Salinity    <- read.csv(file="C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Data/TagSeq/DESeq2/Day2_larva/Day2.Salinity_DESeq2results.csv", sep=',', header=TRUE)
DE_d2.OA          <- read.csv(file="C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Data/TagSeq/DESeq2/Day2_larva/Day2.OA_DESeq2results.csv", sep=',', header=TRUE)
DE_d18.Salinity    <- read.csv(file="C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Data/TagSeq/DESeq2/Day18_spat/Day18.salinity_DESeq2results.csv", sep=',', header=TRUE)
DE_d18.OA          <- read.csv(file="C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Data/TagSeq/DESeq2/Day18_spat/Day18.OA_DESeq2results.csv", sep=',', header=TRUE)
colnames(DE_d2.Temperature)[2]  == "TranscriptID" # TRUE
colnames(DE_d2.Salinity)[2]     == "TranscriptID" # TRUE
colnames(DE_d2.OA)[2]           == "TranscriptID" # TRUE
colnames(DE_d18.Salinity)[2]     == "TranscriptID" # TRUE
colnames(DE_d18.OA)[2]           == "TranscriptID" # TRUE
## TEMPERATURE
DE_d2.Temperature_UP        <- DE_d2.Temperature %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(log2FoldChange > 1) %>%  dplyr::select('TranscriptID')
DE_d2.Temperature_UP$Dir    <- "upregulated"
DE_d2.Temperature_UP$time   <- "Day2_larva"
nrow(DE_d2.Temperature_UP) # 359
DE_d2.Temperature_DOWN      <- DE_d2.Temperature %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(log2FoldChange < 1) %>%  dplyr::select('TranscriptID')
DE_d2.Temperature_DOWN$Dir  <- "downregulated"
DE_d2.Temperature_DOWN$time <- "Day2_larva"
nrow(DE_d2.Temperature_DOWN) # 278
## SALINITY
DE_d2.Salinity_UP           <- DE_d2.Salinity %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(log2FoldChange > 1) %>%  dplyr::select('TranscriptID')
DE_d2.Salinity_UP$Dir       <- "upregulated"
DE_d2.Salinity_UP$time      <- "Day2_larva"
nrow(DE_d2.Salinity_UP) # 341
DE_d2.Salinity_DOWN         <- DE_d2.Salinity %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(log2FoldChange < 1) %>%  dplyr::select('TranscriptID')
DE_d2.Salinity_DOWN$Dir     <- "downregulated"
DE_d2.Salinity_DOWN$time    <- "Day2_larva"
nrow(DE_d2.Salinity_DOWN) # 378
## OA
DE_d2.OA_UP                 <- DE_d2.OA %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(log2FoldChange > 1) %>%  dplyr::select('TranscriptID')
DE_d2.OA_UP$Dir             <- "upregulated"
DE_d2.OA_UP$time            <- "Day2_larva"
nrow(DE_d2.OA_UP) # 82
DE_d2.OA_DOWN               <- DE_d2.OA %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(log2FoldChange < 1) %>%  dplyr::select('TranscriptID')
DE_d2.OA_DOWN$Dir           <- "downregulated"
DE_d2.OA_DOWN$time          <- "Day2_larva"
nrow(DE_d2.OA_DOWN) # 83
## SALINITY
DE_d18.Salinity_UP           <- DE_d18.Salinity %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(log2FoldChange > 1) %>%  dplyr::select('TranscriptID')
DE_d18.Salinity_UP$Dir       <- "upregulated"
DE_d18.Salinity_UP$time      <- "Day18_spat"
nrow(DE_d18.Salinity_UP) # 483
DE_d18.Salinity_DOWN         <- DE_d18.Salinity %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(log2FoldChange < 1) %>%  dplyr::select('TranscriptID')
DE_d18.Salinity_DOWN$Dir     <- "downregulated"
DE_d18.Salinity_DOWN$time    <- "Day18_spat"
nrow(DE_d18.Salinity_DOWN) # 585
## OA
DE_d18.OA_UP                 <- DE_d18.OA %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(log2FoldChange > 1) %>%  dplyr::select('TranscriptID')
DE_d18.OA_UP$Dir             <- "upregulated"
DE_d18.OA_UP$time            <- "Day18_spat"
nrow(DE_d18.OA_UP) # 148
DE_d18.OA_DOWN               <- DE_d18.OA %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(log2FoldChange < 1) %>%  dplyr::select('TranscriptID')
DE_d18.OA_DOWN$Dir           <- "downregulated"
DE_d18.OA_DOWN$time          <- "Day18_spat"
nrow(DE_d18.OA_DOWN) # 228
# OA time- up and downregulated genes
OA_ALL <- list(
Day2.UP      = DE_d2.OA_UP$TranscriptID,
Day18.UP     = DE_d18.OA_UP$TranscriptID,
Day2.DOWN    = DE_d2.OA_DOWN$TranscriptID,
Day18.DOWN   = DE_d18.OA_DOWN$TranscriptID
)
# Salinity time- up and downregulated genes
Salinity_ALL <- list(
Day2.UP      = DE_d2.Salinity_UP$TranscriptID,
Day18.UP     = DE_d18.Salinity_UP$TranscriptID,
Day2.DOWN    = DE_d2.Salinity_DOWN$TranscriptID,
Day18.DOWN   = DE_d18.Salinity_DOWN$TranscriptID
)
# OA time- up and downregulated genes
Day2_larvae_all <- list(
OA.UP        = DE_d2.OA_UP$TranscriptID,
OA.DOWN      = DE_d2.OA_DOWN$TranscriptID,
Temp.UP      = DE_d2.Temperature_UP$TranscriptID,
Temp.DOWN    = DE_d2.Temperature_DOWN$TranscriptID,
Sal.UP       = DE_d2.Salinity_UP$TranscriptID,
Sal.DOWN     = DE_d2.Salinity_DOWN$TranscriptID,
)
# OA time- up and downregulated genes
Day2_larvae_all <- list(
OA.UP        = DE_d2.OA_UP$TranscriptID,
OA.DOWN      = DE_d2.OA_DOWN$TranscriptID,
Temp.UP      = DE_d2.Temperature_UP$TranscriptID,
Temp.DOWN    = DE_d2.Temperature_DOWN$TranscriptID,
Sal.UP       = DE_d2.Salinity_UP$TranscriptID,
Sal.DOWN     = DE_d2.Salinity_DOWN$TranscriptID
)
# Venn diagram - OA all time
venn.d_larvae <- ggVennDiagram(Day2_larvae_all,
label_alpha = 2)
library("ggVennDiagram")
install.packages("ggVennDiagram")
library("ggVennDiagram")
venn.d_larvae <- ggVennDiagram(Day2_larvae_all,
label_alpha = 2)
venn.d_larvae <- venn.d_larvae + ggtitle("Day2 larvae: all DEGs")
library(ggvenn)
install.packages('ggvenn')
library(ggvenn)
venn.d_larvae <- venn.d_larvae + ggtitle("Day2 larvae: all DEGs")
venn.d_larvae
# 4D Venn diagram
ggVennDiagram(Day2_larvae_all)
# OA time- up and downregulated genes
Day2_larvae_all <- list(
Temp.UP      = DE_d2.Temperature_UP$TranscriptID,
Temp.DOWN    = DE_d2.Temperature_DOWN$TranscriptID,
Sal.UP       = DE_d2.Salinity_UP$TranscriptID,
Sal.DOWN     = DE_d2.Salinity_DOWN$TranscriptID
)
# 4D Venn diagram
ggVennDiagram(Day2_larvae_all)
# Venn diagram - OA all time
venn.d_larvae <- ggVennDiagram(Day2_larvae_all,
label_alpha = 2)
# Venn diagram - OA all time
venn.d_larvae <- ggVennDiagram(Day2_larvae_all,
label_alpha = 2)
venn.d_larvae <- venn.d_larvae + ggtitle("Day2 larvae: all DEGs") + scale_fill_gradient(low = "#F4FAFE", high = "#4981BF")
venn.d_larvae
# Venn diagram - OA all time
venn.d_larvae <- ggVennDiagram(Day2_larvae_all, color = "black", lwd = 0.8, lty = 1,label_alpha = 2)
venn.d_larvae <- venn.d_larvae + ggtitle("Day2 larvae: all DEGs") + scale_fill_gradient(low = "#F4FAFE", high = "#4981BF")
venn.d_larvae
# Venn diagram - OA all time
venn.d_larvae <- ggVennDiagram(Day2_larvae_all, color = "black", lwd = 0.8, lty = 1,label_alpha = 2)
venn.d_larvae
# Venn diagram - OA all time
venn.d_larvae <- ggVennDiagram(Day2_larvae_all, color = "black", lwd = 0.8, lty = 1)  + scale_fill_gradient(low = "#F4FAFE", high = "#4981BF")
venn.d_larvae
library(ggplot2)
# Venn diagram - OA all time
venn.d_larvae <- ggVennDiagram(Day2_larvae_all, color = "black", lwd = 0.8, lty = 1)  + scale_fill_gradient(low = "#F4FAFE", high = "#4981BF")
venn.d_larvae
ggVennDiagram(Day2_larvae_all, color = "black", lwd = 0.8, lty = 1)
venn.d_larvae <- axis.title=element_text(size=8,face="bold")) +
+ scale_fill_gradient(low = "#F4FAFE", high = "#4981BF")
venn.d_larvae <- ggVennDiagram(Day2_larvae_all, color = "black", lwd = 0.8, lty = 1)  +
scale_fill_gradient(low = "#F4FAFE", high = "#4981BF")
ggVennDiagram(Day2_larvae_all, color = "black")
venn.d_larvae <- ggVennDiagram(Day2_larvae_all, color = "black")  +
scale_fill_gradient(low = "white", high = "#4981BF")
venn.d_larvae
# Venn diagram - OA all time
venn.d2_larvae <- ggVennDiagram(Day2_larvae_all, color = "black")  +
scale_fill_gradient(low = "white", high = "#4981BF")  + ggtitle("Day2 larvae: Temp v. Salinity")
venn.d2_larvae
Day2_larvae_TempOA <- list(
Temp.UP      = DE_d2.Temperature_UP$TranscriptID,
Temp.DOWN    = DE_d2.Temperature_DOWN$TranscriptID,
OA.UP       = DE_d2.OA_UP$TranscriptID,
OA.DOWN     = DE_d2.OA_DOWN$TranscriptID
)
Day2_larvae_OASal <- list(
Sal.UP       = DE_d2.Salinity_UP$TranscriptID,
Sal.DOWN     = DE_d2.Salinity_DOWN$TranscriptID,
OA.UP       = DE_d2.OA_UP$TranscriptID,
OA.DOWN     = DE_d2.OA_DOWN$TranscriptID
)
Day2_larvae_TempOA <- list(
Temp.UP      = DE_d2.Temperature_UP$TranscriptID,
Temp.DOWN    = DE_d2.Temperature_DOWN$TranscriptID,
OA.UP       = DE_d2.OA_UP$TranscriptID,
OA.DOWN     = DE_d2.OA_DOWN$TranscriptID
)
Day18_larvae_OASal <- list(
Sal.UP       = DE_d18.Salinity_UP$TranscriptID,
Sal.DOWN     = DE_d18.Salinity_DOWN$TranscriptID,
OA.UP       = DE_d18.OA_UP$TranscriptID,
OA.DOWN     = DE_d18.OA_DOWN$TranscriptID
)
# Venn diagram - OA all time
venn.d2_larvae_TempSal <- ggVennDiagram(Day2_larvae_TempSal, color = "black")  +
scale_fill_gradient(low = "white", high = "#4981BF")  + ggtitle("Day2 larvae: Temp v. Salinity")
Day2_larvae_TempSal <- list(
Temp.UP      = DE_d2.Temperature_UP$TranscriptID,
Temp.DOWN    = DE_d2.Temperature_DOWN$TranscriptID,
Sal.UP       = DE_d2.Salinity_UP$TranscriptID,
Sal.DOWN     = DE_d2.Salinity_DOWN$TranscriptID
)
# Venn diagram - OA all time
venn.d2_larvae_TempSal <- ggVennDiagram(Day2_larvae_TempSal, color = "black")  +
scale_fill_gradient(low = "white", high = "#4981BF")  + ggtitle("Day2 larvae: Temp v. Salinity")
venn.d2_larvae_TempOA <- ggVennDiagram(Day2_larvae_TempOA, color = "black")  +
scale_fill_gradient(low = "white", high = "#4981BF")  + ggtitle("Day2 larvae: Temp v. Salinity")
venn.d2_larvae_TempOA <- ggVennDiagram(Day2_larvae_OASal, color = "black")  +
scale_fill_gradient(low = "white", high = "#4981BF")  + ggtitle("Day2 larvae: Temp v. Salinity")
pdf("C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/DESeq2/Venn_d2_all.pdf")
grid.arrange(venn.d2_larvae_TempSal, venn.d2_larvae_TempOA, venn.d2_larvae_TempOA, ncol=1, nrow=3, clip="off")
dev.off()
pdf("C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/DESeq2/Venn_d2_all.pdf")
grid.arrange(venn.d2_larvae_TempSal, venn.d2_larvae_TempOA, venn.d2_larvae_TempOA, ncol=2, nrow=2, clip="off")
dev.off()
pdf("C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/DESeq2/Venn_d2_all.pdf")
grid.arrange(venn.d2_larvae_TempSal, venn.d2_larvae_TempOA, venn.d2_larvae_TempOA, ncol=2, nrow=2, clip="off")
dev.off()
# Venn diagram - OA all time
venn.d2_larvae_TempSal <- ggVennDiagram(Day2_larvae_TempSal, color = "black",label = "count")  +
scale_fill_gradient(low = "white", high = "#4981BF")  + ggtitle("Day2 larvae: Temp v. Salinity")
venn.d2_larvae_TempOA <- ggVennDiagram(Day2_larvae_TempOA, color = "black",label = "count")  +
scale_fill_gradient(low = "white", high = "#4981BF")  + ggtitle("Day2 larvae: Temp v. Salinity")
venn.d2_larvae_TempOA <- ggVennDiagram(Day2_larvae_OASal, color = "black",label = "count")  +
scale_fill_gradient(low = "white", high = "#4981BF")  + ggtitle("Day2 larvae: Temp v. Salinity")
pdf("C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/DESeq2/Venn_d2_all.pdf")
grid.arrange(venn.d2_larvae_TempSal, venn.d2_larvae_TempOA, venn.d2_larvae_TempOA, ncol=2, nrow=2, clip="off")
dev.off()
pdf("C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/DESeq2/Venn_d2_all.pdf", width=10, height=8)
grid.arrange(venn.d2_larvae_TempSal, venn.d2_larvae_TempOA, venn.d2_larvae_TempOA, ncol=2, nrow=2, clip="off")
dev.off()
pdf("C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/DESeq2/Venn_d2_all.pdf", width=12, height=8)
grid.arrange(venn.d2_larvae_TempSal, venn.d2_larvae_TempOA, venn.d2_larvae_TempOA, ncol=2, nrow=2, clip="off")
dev.off()
venn.d2_larvae_TempSal <- ggVennDiagram(Day2_larvae_TempSal, color = "black",label = "count")  +
scale_fill_gradient(low = "white", high = "#4981BF")  + ggtitle("Day2 larvae: Temp v. Salinity")
venn.d2_larvae_TempOA <- ggVennDiagram(Day2_larvae_TempOA, color = "black",label = "count")  +
scale_fill_gradient(low = "white", high = "#4981BF")  + ggtitle("Day2 larvae: Temp v. OA")
venn.d2_larvae_OASal <- ggVennDiagram(Day2_larvae_OASal, color = "black",label = "count")  +
scale_fill_gradient(low = "white", high = "#4981BF")  + ggtitle("Day2 larvae: OA v. Salinity")
pdf("C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/DESeq2/Venn_d2_all.pdf", width=12, height=8)
grid.arrange(venn.d2_larvae_TempSal, venn.d2_larvae_TempOA, venn.d2_larvae_TempOA, ncol=2, nrow=2, clip="off")
dev.off()
pdf("C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/DESeq2/Venn_d2_all.pdf", width=12, height=8)
grid.arrange(venn.d2_larvae_TempSal, venn.d2_larvae_TempOA, venn.d2_larvae_OASal, ncol=2, nrow=2, clip="off")
dev.off()
venn.d2_larvae_TempSal <- ggVennDiagram(Day2_larvae_TempSal, color = 1, lwd = 0.7, label = "count")  +
scale_fill_gradient(low = "white", high = "#4981BF")  + ggtitle("Day2 larvae: Temp v. Salinity") +
theme(legend.position = "none")
venn.d2_larvae_TempOA <- ggVennDiagram(Day2_larvae_TempOA, color = 1, lwd = 0.7, label = "count")  +
scale_fill_gradient(low = "white", high = "#4981BF")  + ggtitle("Day2 larvae: Temp v. OA") +
theme(legend.position = "none")
venn.d2_larvae_OASal <- ggVennDiagram(Day2_larvae_OASal, color = 1, lwd = 0.7, label = "count")  +
scale_fill_gradient(low = "white", high = "#4981BF")  + ggtitle("Day2 larvae: OA v. Salinity") +
theme(legend.position = "none")
pdf("C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/DESeq2/Venn_d2_all.pdf", width=12, height=8)
grid.arrange(venn.d2_larvae_TempSal, venn.d2_larvae_TempOA, venn.d2_larvae_OASal, ncol=2, nrow=2, clip="off")
dev.off()
venn.d18_larvae_OASal <- ggVennDiagram(Day18_larvae_OASal, color = 1, lwd = 0.7, label = "count")  +
scale_fill_gradient(low = "white", high = "#4981BF")  + ggtitle("Day18 spat: OA v. Salinity") +
theme(legend.position = "none")
venn.d18_larvae_OASal
pdf("C:/Users/samuel.gurr/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis/Output/DESeq2/Venn_d18_all.pdf", width=6, height=5)
print(venn.d18_larvae_OASal)
dev.off()
